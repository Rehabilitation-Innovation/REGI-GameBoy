<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_snake_game" xml:lang="en-US">
<title>SnakeGame Class Reference</title>
<indexterm><primary>SnakeGame</primary></indexterm>
<para>
<computeroutput>#include &lt;SnakeGame.h&gt;</computeroutput>
</para>
Inheritance diagram for SnakeGame:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_snake_game__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for SnakeGame:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_snake_game__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_snake_game_1afc575759bb084eefa5e95188d041d042">SnakeGame</link> (<link linkend="_class_tiny_engine_frame_buffer">TinyEngineFrameBuffer</link> &amp;_framebuffer, <link linkend="_class_tiny_engine_renderer_i">TinyEngineRendererI</link> &amp;_renderer, <link linkend="_class_tiny_engine">TinyEngine</link> &amp;_engine)</para>
</listitem>
            <listitem><para><link linkend="_class_snake_game_1acfeac5da2cb6b7e0e850f4e48137e4bf">~SnakeGame</link> () override=default</para>
</listitem>
            <listitem><para>void <link linkend="_class_snake_game_1a98f4ebbe3303b1627cf738e4684b69b4">create</link> () override</para>

<para>Create the scene after the object is created. This is for having multiple refrences to the same scene. Memory and configuration should only happen in this function. </para>
</listitem>
            <listitem><para>void <link linkend="_class_snake_game_1a09eac49a79e09f012c8c5ca6c4d4c7eb">render</link> () override</para>

<para>All framebuffer operations are done here and this is called only once per frame. </para>
</listitem>
            <listitem><para>void <link linkend="_class_snake_game_1a427ff7fbd06cf21fd64223a3c48d500d">update</link> (double frameTime) override</para>

<para><link linkend="_class_game">Game</link> updates and other time dependednt modifications should be done here, there is no gurentee this is run only. </para>
</listitem>
            <listitem><para>void <link linkend="_class_snake_game_1ad05db6c6aaa3fad9f248d1e94df2a597">destroy</link> () override</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class_game_scene">GameScene</link>        <itemizedlist>
            <listitem><para><link linkend="_class_game_scene_1a9f20a87546afdf718a1ef0ff4fb53200">GameScene</link> (<link linkend="_class_tiny_engine_frame_buffer">TinyEngineFrameBuffer</link> &amp;_framebuffer, <link linkend="_class_tiny_engine_renderer_i">TinyEngineRendererI</link> &amp;_renderer, <link linkend="_class_tiny_engine">TinyEngine</link> &amp;_engine)</para>

<para>Construct a new <link linkend="_class_game">Game</link> Scene object. </para>
</listitem>
            <listitem><para><link linkend="_class_game_scene_1add5bc48c372aaa7f526c02558a8adf00">~GameScene</link> ()</para>

<para>Destroy the <link linkend="_class_game">Game</link> Scene object. </para>
</listitem>
        </itemizedlist>
Public Member Functions inherited from <link linkend="_class_scene_i">SceneI</link>        <itemizedlist>
            <listitem><para>virtual <link linkend="_class_scene_i_1a9aca690ad096045ae588810c5dbcbd62">~SceneI</link> ()=default</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Attributes inherited from <link linkend="_class_game_scene">GameScene</link>        <itemizedlist>
            <listitem><para><link linkend="_class_tiny_engine_frame_buffer">TinyEngineFrameBuffer</link> &amp; <link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link></para>
</listitem>
            <listitem><para><link linkend="_class_tiny_engine_renderer_i">TinyEngineRendererI</link> &amp; <link linkend="_class_game_scene_1abbc67a7bac90f11d7ee08c28dc3f0810">m_renderer</link></para>
</listitem>
            <listitem><para><link linkend="_class_tiny_engine">TinyEngine</link> &amp; <link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link></para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_sprite">Sprite</link> * &gt; <link linkend="_class_game_scene_1a894a08b41ccad98c26c0eb588a307d3b">sprites</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__snake_game_8h_source_1l00010">10</link> of file <link linkend="__snake_game_8h_source">SnakeGame.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_snake_game_1afc575759bb084eefa5e95188d041d042"/><section>
    <title>SnakeGame()</title>
<indexterm><primary>SnakeGame</primary><secondary>SnakeGame</secondary></indexterm>
<indexterm><primary>SnakeGame</primary><secondary>SnakeGame</secondary></indexterm>
<para><computeroutput>SnakeGame::SnakeGame (<link linkend="_class_tiny_engine_frame_buffer">TinyEngineFrameBuffer</link> &amp; _framebuffer, <link linkend="_class_tiny_engine_renderer_i">TinyEngineRendererI</link> &amp; _renderer, <link linkend="_class_tiny_engine">TinyEngine</link> &amp; _engine)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__snake_game_8h_source_1l00013">13</link> of file <link linkend="__snake_game_8h_source">SnakeGame.h</link>.</para>
<programlisting linenumbering="unnumbered">00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class_game_scene_1a9f20a87546afdf718a1ef0ff4fb53200">GameScene</link>(_framebuffer,&#32;_renderer,&#32;_engine)&#x240D;
00015 &#32;&#32;&#32;&#32;{
00016 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_class_snake_game_1acfeac5da2cb6b7e0e850f4e48137e4bf"/><section>
    <title>~SnakeGame()</title>
<indexterm><primary>~SnakeGame</primary><secondary>SnakeGame</secondary></indexterm>
<indexterm><primary>SnakeGame</primary><secondary>~SnakeGame</secondary></indexterm>
<para><computeroutput>SnakeGame::~SnakeGame ( )<computeroutput>[override]</computeroutput>, <computeroutput>[default]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_snake_game_1a98f4ebbe3303b1627cf738e4684b69b4"/><section>
    <title>create()</title>
<indexterm><primary>create</primary><secondary>SnakeGame</secondary></indexterm>
<indexterm><primary>SnakeGame</primary><secondary>create</secondary></indexterm>
<para><computeroutput>void SnakeGame::create ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Create the scene after the object is created. This is for having multiple refrences to the same scene. Memory and configuration should only happen in this function. </para>
</para>
<para>
Reimplemented from <link linkend="_class_game_scene_1ac4f0485291c1719b76b4ed425661143c">GameScene</link>.</para>
<para>
Definition at line <link linkend="__snake_game_8cpp_source_1l00040">40</link> of file <link linkend="__snake_game_8cpp_source">SnakeGame.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00041 {
00042 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1ac4f0485291c1719b76b4ed425661143c">GameScene::create</link>();
00043 
00044 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Flag&#32;to&#32;signal&#32;the&#32;gameover</emphasis>
00045 &#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a78254252ef207b26bd5cbc668592fcee">gameover</link>&#32;=&#32;0;
00046 
00047 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initial&#32;coordinates&#32;of&#32;the&#32;snake</emphasis>
00048 &#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>&#32;=&#32;<link linkend="__snake_game_8cpp_1a3860afceb5fa79682a69fb8a4f101af0">WIDTH_SNAKE</link>&#32;/&#32;2;
00049 &#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake</link>&#32;=&#32;<link linkend="__snake_game_8cpp_1a874b952818d2197dd45b84e1f65f8b39">HEIGHT_SNAKE</link>&#32;/&#32;2;
00050 
00051 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initial&#32;coordinates&#32;of&#32;the&#32;fruit</emphasis>
00052 &#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a3f18df933da679951146eeb824fd715a">fruitx_snake</link>&#32;=&#32;rand()&#32;%&#32;<link linkend="__snake_game_8cpp_1a3860afceb5fa79682a69fb8a4f101af0">WIDTH_SNAKE</link>;
00053 &#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a71cf12e315d2fecc02e043822bf09edf">fruity_snake</link>&#32;=&#32;rand()&#32;%&#32;<link linkend="__snake_game_8cpp_1a874b952818d2197dd45b84e1f65f8b39">HEIGHT_SNAKE</link>;
00054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__snake_game_8cpp_1a3f18df933da679951146eeb824fd715a">fruitx_snake</link>&#32;==&#32;0)
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a3f18df933da679951146eeb824fd715a">fruitx_snake</link>&#32;=&#32;rand()&#32;%&#32;<link linkend="__snake_game_8cpp_1a3860afceb5fa79682a69fb8a4f101af0">WIDTH_SNAKE</link>;
00056 
00057 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__snake_game_8cpp_1a71cf12e315d2fecc02e043822bf09edf">fruity_snake</link>&#32;==&#32;0)
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a71cf12e315d2fecc02e043822bf09edf">fruity_snake</link>&#32;=&#32;rand()&#32;%&#32;<link linkend="__snake_game_8cpp_1a874b952818d2197dd45b84e1f65f8b39">HEIGHT_SNAKE</link>;
00059 
00060 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Score&#32;initialzed</emphasis>
00061 &#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a8b980ec9e641de5222f057bb256c05c8">score_snake</link>&#32;=&#32;0;
00062 
00063 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link>.bind_serial_input_event(
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;w&apos;</emphasis>,
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[&amp;]
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a4d3f43ca8bef050d60a7cc2cb94a184c">key_snake</link>&#32;=&#32;3;
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00069 &#32;&#32;&#32;&#32;);
00070 
00071 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link>.bind_serial_input_event(
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>,
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[&amp;]
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a4d3f43ca8bef050d60a7cc2cb94a184c">key_snake</link>&#32;=&#32;1;
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00077 &#32;&#32;&#32;&#32;);
00078 
00079 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link>.bind_serial_input_event(
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;s&apos;</emphasis>,
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[&amp;]
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a4d3f43ca8bef050d60a7cc2cb94a184c">key_snake</link>&#32;=&#32;4;
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00085 &#32;&#32;&#32;&#32;);
00086 
00087 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link>.bind_serial_input_event(
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;d&apos;</emphasis>,
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[&amp;]
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a4d3f43ca8bef050d60a7cc2cb94a184c">key_snake</link>&#32;=&#32;2;
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00093 &#32;&#32;&#32;&#32;);
00094 
00095 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link>.bind_serial_input_event(
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;x_snake&apos;</emphasis>,
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[&amp;]
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a78254252ef207b26bd5cbc668592fcee">gameover</link>&#32;=&#32;1;
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00101 &#32;&#32;&#32;&#32;);
00102 
00103 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link>.bind_serial_input_event(
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;f&apos;</emphasis>,
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[&amp;]
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>&#32;=&#32;<link linkend="__snake_game_8cpp_1a3f18df933da679951146eeb824fd715a">fruitx_snake</link>;
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake</link>&#32;=&#32;<link linkend="__snake_game_8cpp_1a71cf12e315d2fecc02e043822bf09edf">fruity_snake</link>;
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00110 &#32;&#32;&#32;&#32;);
00111 }
</programlisting></section>
<anchor xml:id="_class_snake_game_1ad05db6c6aaa3fad9f248d1e94df2a597"/><section>
    <title>destroy()</title>
<indexterm><primary>destroy</primary><secondary>SnakeGame</secondary></indexterm>
<indexterm><primary>SnakeGame</primary><secondary>destroy</secondary></indexterm>
<para><computeroutput>void SnakeGame::destroy ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_game_scene_1a79aa067bf23e490cdfcb4aec1b181b12">GameScene</link>.</para>
<para>
Definition at line <link linkend="__snake_game_8cpp_source_1l00269">269</link> of file <link linkend="__snake_game_8cpp_source">SnakeGame.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00270 {
00271 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a79aa067bf23e490cdfcb4aec1b181b12">GameScene::destroy</link>();
00272 }
</programlisting></section>
<anchor xml:id="_class_snake_game_1a09eac49a79e09f012c8c5ca6c4d4c7eb"/><section>
    <title>render()</title>
<indexterm><primary>render</primary><secondary>SnakeGame</secondary></indexterm>
<indexterm><primary>SnakeGame</primary><secondary>render</secondary></indexterm>
<para><computeroutput>void SnakeGame::render ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>All framebuffer operations are done here and this is called only once per frame. </para>
</para>
<para>
Reimplemented from <link linkend="_class_game_scene_1af107c5ffdf361b4e0b718f486cbc7d0e">GameScene</link>.</para>
<para>
Definition at line <link linkend="__snake_game_8cpp_source_1l00113">113</link> of file <link linkend="__snake_game_8cpp_source">SnakeGame.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00114 {
00115 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1af107c5ffdf361b4e0b718f486cbc7d0e">GameScene::render</link>();
00116 
00117 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.clear(0);&#32;<emphasis role="comment">//&#32;colors&#32;are&#32;based&#32;on&#32;pallette</emphasis>
00118 
00119 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Creating&#32;top&#32;wall</emphasis>
00120 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;WIDTH_SNAKE;&#32;i++)&#32;{</emphasis>
00121 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;printf(&quot;-&quot;);</emphasis>
00122 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;m_framebuffer.draw_pix_snakeel(i,&#32;0,&#32;66);</emphasis>
00123 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
00124 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;printf(&quot;\n&quot;);</emphasis>
00125 
00126 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.draw_outline_rectangle(0,&#32;0,&#32;320&#32;-&#32;1,&#32;240&#32;-&#32;1,&#32;45);
00127 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_pix_snakeel(x_snake,&#32;y_snake,&#32;66);</emphasis>
00128 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.draw_filled_rectangle(<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>,&#32;<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake</link>,&#32;10,&#32;10,&#32;45);
00129 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_pix_snakeel(fruitx_snake,&#32;fruity_snake,&#32;66);</emphasis>
00130 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.draw_filled_rectangle(<link linkend="__snake_game_8cpp_1a3f18df933da679951146eeb824fd715a">fruitx_snake</link>,&#32;<link linkend="__snake_game_8cpp_1a71cf12e315d2fecc02e043822bf09edf">fruity_snake</link>,&#32;5,&#32;5,&#32;31);
00131 
00132 
00133 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;k&#32;=&#32;0;&#32;k&#32;&lt;&#32;<link linkend="__snake_game_8cpp_1a0c988e922b2bb3514a84d3a32d9769a9">snakeTailLen</link>;&#32;k++)
00134 &#32;&#32;&#32;&#32;{
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.draw_filled_rectangle(<link linkend="__snake_game_8cpp_1ae170759b728a81554c554cc328bb4911">snakeTailx_snake</link>[k],&#32;<link linkend="__snake_game_8cpp_1af7d39550ddd119a00436dfc0b308561a">snakeTaily_snake</link>[k],&#32;10,&#32;10,&#32;45);
00136 &#32;&#32;&#32;&#32;}
00137 
00138 
00139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>&#32;&gt;&#32;320)&#32;<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>&#32;=&#32;0;
00140 
00141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>&#32;&lt;&#32;0)&#32;<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>&#32;=&#32;320;
00142 
00143 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake</link>&#32;&gt;&#32;240)&#32;<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake</link>&#32;=&#32;0;
00144 
00145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake</link>&#32;&lt;&#32;0)&#32;<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake</link>&#32;=&#32;0;
00146 
00147 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Creating&#32;bottom&#32;walls&#32;with&#32;&apos;-&apos;</emphasis>
00148 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;WIDTH_SNAKE;&#32;i++)&#32;{</emphasis>
00149 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;printf(&quot;-&quot;);</emphasis>
00150 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;m_framebuffer.draw_pix_snakeel(i,&#32;239,&#32;27);</emphasis>
00151 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
00152 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;printf(&quot;\n&quot;);</emphasis>
00153 
00154 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Print&#32;the&#32;score&#32;and&#32;instructions</emphasis>
00155 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;printf(&quot;score&#32;=&#32;%d\r\n&quot;,&#32;score);</emphasis>
00156 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;printf(&quot;Press&#32;W,&#32;A,&#32;S,&#32;D&#32;for&#32;movement.\r\n&quot;);</emphasis>
00157 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;printf(&quot;Press&#32;x_snake&#32;to&#32;quit&#32;the&#32;game.\r\n&quot;);</emphasis>
00158 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>mallinfo&#32;<link linkend="__game_scene_8cpp_1ab5b03fe4e6a8a45e275a46ef2b76a73e">info</link>&#32;=&#32;mallinfo();
00159 
00160 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(fps_string,&#32;&quot;Total&#32;Heap:&#32;%d&#32;by_snaketes&#32;|&#32;&#32;Free:&#32;%d&#32;\n&quot;,&#32;getTotalHeap(),&#32;getFreeHeap());</emphasis>
00161 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(fps_string,&#32;5,&#32;0,&#32;100);</emphasis>
00162 &#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
00163 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;Total&#32;Render&#32;Time&#32;%dms&#32;/&#32;%dms\n&quot;,&#32;m_engine.get_profile_render_loop_time(),</emphasis>
00164 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;m_engine.get_profile_main_loop_time());</emphasis>
00165 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;110);</emphasis>
00166 &#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
00167 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;Total&#32;Update:&#32;%dms&#32;/&#32;%dms\n&quot;,</emphasis>
00168 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;m_engine.get_profile_update_loop_time(),&#32;m_engine.get_profile_main_loop_time());</emphasis>
00169 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;120);</emphasis>
00170 &#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
00171 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;Total&#32;allocated:&#32;%d&#32;by_snaketes\n&quot;,&#32;info.uordblks);</emphasis>
00172 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;60);</emphasis>
00173 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;Total&#32;free:&#32;%d&#32;by_snaketes\n&quot;,&#32;info.fordblks);</emphasis>
00174 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;70);</emphasis>
00175 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;Total&#32;heap&#32;size:&#32;%d&#32;by_snaketes\n&quot;,&#32;info.arena);</emphasis>
00176 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;80);</emphasis>
00177 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;Largest&#32;free&#32;block:&#32;%d&#32;by_snaketes\n&quot;,&#32;info.ordblks);</emphasis>
00178 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;90);</emphasis>
00179 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;FPS:&#32;%d\r\n&quot;,&#32;m_engine.get_fps());</emphasis>
00180 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;0);</emphasis>
00181 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;score&#32;=&#32;%d\r\n&quot;,&#32;score);</emphasis>
00182 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;10);</emphasis>
00183 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;Press&#32;W,&#32;A,&#32;S,&#32;D&#32;for&#32;movement.\r\n&quot;);</emphasis>
00184 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;20);</emphasis>
00185 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;Press&#32;x_snake&#32;to&#32;quit&#32;the&#32;game.\r\n&quot;);</emphasis>
00186 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;30);</emphasis>
00187 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;Snake&#32;Coords:&#32;%d,&#32;%d\r\n&quot;,&#32;x_snake,&#32;y_snake);</emphasis>
00188 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;40);</emphasis>
00189 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;Food&#32;Coords:&#32;%d,&#32;%d\r\n&quot;,&#32;fruitx_snake,&#32;fruity_snake);</emphasis>
00190 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_string(string,&#32;5,&#32;0,&#32;50);</emphasis>
00191 
00192 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1abbc67a7bac90f11d7ee08c28dc3f0810">m_renderer</link>.wait_for_vsync();&#32;<emphasis role="comment">//&#32;If&#32;this&#32;is&#32;enabled&#32;debugging&#32;will&#32;not&#32;work,&#32;since&#32;this&#32;uses&#32;a&#32;blocking&#32;loop</emphasis>
00193 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;with&#32;hardware&#32;event&#32;listeners&#32;it&#32;will&#32;just&#32;stay_snake&#32;here&#32;forever.&#32;Comment&#32;out&#32;the&#32;line&#32;when&#32;debugging</emphasis>
00194 
00195 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.swap_blocking();
00196 }
</programlisting></section>
<anchor xml:id="_class_snake_game_1a427ff7fbd06cf21fd64223a3c48d500d"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>SnakeGame</secondary></indexterm>
<indexterm><primary>SnakeGame</primary><secondary>update</secondary></indexterm>
<para><computeroutput>void SnakeGame::update (double frameTime)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para><link linkend="_class_game">Game</link> updates and other time dependednt modifications should be done here, there is no gurentee this is run only. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>frameTime</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Reimplemented from <link linkend="_class_game_scene_1a9bb2bd694b9c8399ea22aed23a6a809f">GameScene</link>.</para>
<para>
Definition at line <link linkend="__snake_game_8cpp_source_1l00198">198</link> of file <link linkend="__snake_game_8cpp_source">SnakeGame.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00199 {
00200 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a9bb2bd694b9c8399ea22aed23a6a809f">GameScene::update</link>(frameTime);
00201 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sprintf(string,&#32;&quot;FPS:&#32;%d\r\n&quot;,&#32;m_engine.get_fps());</emphasis>
00202 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Updating&#32;the&#32;coordinates&#32;for&#32;continous</emphasis>
00203 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;movement&#32;of&#32;snake</emphasis>
00204 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;prevx_snake&#32;=&#32;<link linkend="__snake_game_8cpp_1ae170759b728a81554c554cc328bb4911">snakeTailx_snake</link>[0];
00205 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;prevy_snake&#32;=&#32;<link linkend="__snake_game_8cpp_1af7d39550ddd119a00436dfc0b308561a">snakeTaily_snake</link>[0];
00206 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;prev2x_snake,&#32;prev2y_snake;
00207 &#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1ae170759b728a81554c554cc328bb4911">snakeTailx_snake</link>[0]&#32;=&#32;<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>;
00208 &#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1af7d39550ddd119a00436dfc0b308561a">snakeTaily_snake</link>[0]&#32;=&#32;<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake</link>;
00209 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;<link linkend="__snake_game_8cpp_1a0c988e922b2bb3514a84d3a32d9769a9">snakeTailLen</link>;&#32;i++)
00210 &#32;&#32;&#32;&#32;{
00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prev2x_snake&#32;=&#32;<link linkend="__snake_game_8cpp_1ae170759b728a81554c554cc328bb4911">snakeTailx_snake</link>[i];
00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prev2y_snake&#32;=&#32;<link linkend="__snake_game_8cpp_1af7d39550ddd119a00436dfc0b308561a">snakeTaily_snake</link>[i];
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1ae170759b728a81554c554cc328bb4911">snakeTailx_snake</link>[i]&#32;=&#32;prevx_snake;
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1af7d39550ddd119a00436dfc0b308561a">snakeTaily_snake</link>[i]&#32;=&#32;prevy_snake;
00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevx_snake&#32;=&#32;prev2x_snake;
00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevy_snake&#32;=&#32;prev2y_snake;
00217 &#32;&#32;&#32;&#32;}
00218 
00219 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Changing&#32;the&#32;direction&#32;of&#32;movement&#32;of&#32;snake</emphasis>
00220 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__snake_game_8cpp_1a4d3f43ca8bef050d60a7cc2cb94a184c">key_snake</link>)
00221 &#32;&#32;&#32;&#32;{
00222 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>--;
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00225 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>++;
00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00228 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake</link>--;
00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00231 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:
00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake</link>++;
00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00234 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00236 &#32;&#32;&#32;&#32;}
00237 
00238 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;game&#32;is&#32;over</emphasis>
00239 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake &lt; 0 || x_snake &gt;</link>=&#32;<link linkend="__snake_game_8cpp_1a3860afceb5fa79682a69fb8a4f101af0">WIDTH_SNAKE</link>&#32;||&#32;<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake &lt; 0 || y_snake &gt;</link>=&#32;<link linkend="__snake_game_8cpp_1a874b952818d2197dd45b84e1f65f8b39">HEIGHT_SNAKE</link>)
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a78254252ef207b26bd5cbc668592fcee">gameover</link>&#32;=&#32;1;
00241 
00242 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Checks&#32;for&#32;collision&#32;with&#32;the&#32;tail&#32;(o)</emphasis>
00243 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="__snake_game_8cpp_1a0c988e922b2bb3514a84d3a32d9769a9">snakeTailLen</link>;&#32;i++)
00244 &#32;&#32;&#32;&#32;{
00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__snake_game_8cpp_1ae170759b728a81554c554cc328bb4911">snakeTailx_snake</link>[i]&#32;==&#32;<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>&#32;&amp;&amp;&#32;<link linkend="__snake_game_8cpp_1af7d39550ddd119a00436dfc0b308561a">snakeTaily_snake</link>[i]&#32;==&#32;<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake</link>)
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a78254252ef207b26bd5cbc668592fcee">gameover</link>&#32;=&#32;1;
00247 &#32;&#32;&#32;&#32;}
00248 
00249 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;snake&#32;reaches&#32;the&#32;fruit</emphasis>
00250 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;then&#32;update&#32;the&#32;score</emphasis>
00251 
00252 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake</link>)
00253 
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="__snake_game_8cpp_1a9bf0425c6db61552a179ae9de2012251">x_snake &lt;= fruitx_snake &amp;&amp; x_snake + 10 &gt;</link>=&#32;<link linkend="__snake_game_8cpp_1a3f18df933da679951146eeb824fd715a">fruitx_snake</link>)&#32;&amp;&amp;&#32;(<link linkend="__snake_game_8cpp_1af6812ead07acd232d20f063781b13e1c">y_snake &lt;= fruity_snake &amp;&amp; y_snake + 10 &gt;</link>=&#32;<link linkend="__snake_game_8cpp_1a71cf12e315d2fecc02e043822bf09edf">fruity_snake</link>))
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a3f18df933da679951146eeb824fd715a">fruitx_snake</link>&#32;=&#32;rand()&#32;%&#32;<link linkend="__snake_game_8cpp_1a3860afceb5fa79682a69fb8a4f101af0">WIDTH_SNAKE</link>;
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a71cf12e315d2fecc02e043822bf09edf">fruity_snake</link>&#32;=&#32;rand()&#32;%&#32;<link linkend="__snake_game_8cpp_1a874b952818d2197dd45b84e1f65f8b39">HEIGHT_SNAKE</link>;
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__snake_game_8cpp_1a3f18df933da679951146eeb824fd715a">fruitx_snake</link>&#32;==&#32;0)
00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a3f18df933da679951146eeb824fd715a">fruitx_snake</link>&#32;=&#32;rand()&#32;%&#32;<link linkend="__snake_game_8cpp_1a3860afceb5fa79682a69fb8a4f101af0">WIDTH_SNAKE</link>;
00260 
00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Generation&#32;of&#32;new&#32;fruit</emphasis>
00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="__snake_game_8cpp_1a71cf12e315d2fecc02e043822bf09edf">fruity_snake</link>&#32;==&#32;0)
00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a71cf12e315d2fecc02e043822bf09edf">fruity_snake</link>&#32;=&#32;rand()&#32;%&#32;<link linkend="__snake_game_8cpp_1a874b952818d2197dd45b84e1f65f8b39">HEIGHT_SNAKE</link>;
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a8b980ec9e641de5222f057bb256c05c8">score_snake</link>&#32;+=&#32;10;
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__snake_game_8cpp_1a0c988e922b2bb3514a84d3a32d9769a9">snakeTailLen</link>++;
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00267 }
</programlisting></section>
<para>
The documentation for this class was generated from the following files:</para>
src/scenes/<link linkend="__snake_game_8h">SnakeGame.h</link>src/scenes/<link linkend="__snake_game_8cpp">SnakeGame.cpp</link></section>
</section>
