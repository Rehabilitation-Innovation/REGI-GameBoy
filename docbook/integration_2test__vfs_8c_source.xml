<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_integration_2test__vfs_8c_source" xml:lang="en-US">
<title>test_vfs.c</title>
<indexterm><primary>lib/pico-vfs-REGI-Local/tests/integration/test_vfs.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_integration_2test__vfs_8c_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;errno.h&gt;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;sys/stat.h&gt;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;<link linkend="_dirent_8h">dirent.h</link>&gt;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;hardware/clocks.h&gt;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_flash_8h">blockdevice/flash.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_heap_8h">blockdevice/heap.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_loopback_8h">blockdevice/loopback.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_sd_8h">blockdevice/sd.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_fat_8h">filesystem/fat.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_littlefs_8h">filesystem/littlefs.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_vfs_8h">filesystem/vfs.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00017"/>00017 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00018"/><link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">00018</link> <emphasis role="preprocessor">#define&#32;COLOR_GREEN(format)&#32;&#32;&#32;&#32;&#32;&#32;(&quot;\e[32m&quot;&#32;format&#32;&quot;\e[0m&quot;)</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00019"/><link linkend="_integration_2test__vfs_8c_1ae38550b2008b82c08588d2340f196914">00019</link> <emphasis role="preprocessor">#define&#32;FLASH_START_AT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0.5&#32;*&#32;1024&#32;*&#32;1024)</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00020"/><link linkend="_integration_2test__vfs_8c_1a1f06fce82ce957c8dd28c5e07da29d97">00020</link> <emphasis role="preprocessor">#define&#32;FLASH_LENGTH_ALL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00021"/><link linkend="_integration_2test__vfs_8c_1a1c1a6c6d5b2ddab1836e6c57ace6e71d">00021</link> <emphasis role="preprocessor">#define&#32;LITTLEFS_BLOCK_CYCLE&#32;&#32;&#32;&#32;&#32;500</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00022"/><link linkend="_integration_2test__vfs_8c_1a73694eeb2680f0f6e6fa72fcd0ad458d">00022</link> <emphasis role="preprocessor">#define&#32;LITTLEFS_LOOKAHEAD_SIZE&#32;&#32;16</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00023"/><link linkend="_integration_2test__vfs_8c_1a59003aa54417ee248f1b9efafcf493b0">00023</link> <emphasis role="preprocessor">#define&#32;MIN_FILENO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;3</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00024"/><link linkend="_integration_2test__vfs_8c_1a73f9ede05cd36c7e6943b56197e34593">00024</link> <emphasis role="preprocessor">#define&#32;BLOCKDEVICE_HEAP_SIZE&#32;&#32;&#32;&#32;(64&#32;*&#32;1024)</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00025"/>00025 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00026"/><link linkend="_integration_2test__vfs_8c_1a275e53ae2306013323ba05fad39168ab">00026</link> <emphasis role="preprocessor">#define&#32;PICO_SPI1_TX_PIN&#32;&#32;&#32;15</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00027"/><link linkend="_integration_2test__vfs_8c_1a5ba4c4aa36b4d4b343838d39ed4db240">00027</link> <emphasis role="preprocessor">#define&#32;PICO_SPI1_RX_PIN&#32;&#32;&#32;12</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00028"/><link linkend="_integration_2test__vfs_8c_1ab6e7784fe43df808a9103f9041af196a">00028</link> <emphasis role="preprocessor">#define&#32;PICO_SPI1_SCK_PIN&#32;&#32;14</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00029"/><link linkend="_integration_2test__vfs_8c_1abb61793f045373400bf402e12a351d74">00029</link> <emphasis role="preprocessor">#define&#32;PICO_SPI1_CSN_PIN&#32;&#32;13</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00030"/>00030 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00031"/>00031 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_printf(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*format,&#32;...)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00032"/>00032 &#32;&#32;&#32;&#32;va_list&#32;args;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;va_start(args,&#32;format);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;vprintf(format,&#32;args);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00035"/>00035 &#32;&#32;&#32;&#32;va_end(args);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00036"/>00036 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00037"/>00037 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;50&#32;-&#32;(size_t)n;&#32;i++)
<anchor xml:id="_integration_2test__vfs_8c_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;.&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00040"/>00040 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00041"/>00041 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00042"/>00042 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;setup(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*device)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00043"/>00043 &#32;&#32;&#32;&#32;(void)device;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00044"/>00044 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00045"/>00045 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00046"/>00046 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;cleanup(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*device)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length&#32;=&#32;device-&gt;<link linkend="_structblockdevice_1abba40bbe04d3a88d270634a788249477">size</link>(device);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Deinit&#32;is&#32;performed&#32;when&#32;unmounting,&#32;so&#32;re-init&#32;is&#32;required.</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00049"/>00049 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1ad37adc41062aa442c1f80852285e0b35">init</link>(device);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00050"/>00050 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1aca297cb4c31042de2aeda00a9b8f8196">erase</link>(device,&#32;0,&#32;length);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00051"/>00051 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00052"/>00052 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00053"/>00053 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_format(<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*fs,&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*device)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00054"/>00054 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;fs_format&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00055"/>00055 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_group__filesystem_1gac9f86bdbfdf77fb98f51551c4b6068ed">fs_format</link>(fs,&#32;device);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00058"/>00058 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00059"/>00059 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00060"/>00060 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00061"/>00061 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00062"/>00062 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_mount(<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*fs,&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*device)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00063"/>00063 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;fs_mount&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00064"/>00064 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_group__filesystem_1ga85336fdeb00149559c5c2008256c3013">fs_mount</link>(<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;fs,&#32;device);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00066"/>00066 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00067"/>00067 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00068"/>00068 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00069"/>00069 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00070"/>00070 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00071"/>00071 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_format_error(<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*fs,&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*device)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00072"/>00072 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;fs_format&#32;error&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00073"/>00073 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_group__filesystem_1gac9f86bdbfdf77fb98f51551c4b6068ed">fs_format</link>(fs,&#32;device);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00075"/>00075 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00076"/>00076 &#32;&#32;&#32;&#32;assert(errno&#32;==&#32;5005);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00077"/>00077 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00078"/>00078 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00079"/>00079 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00080"/>00080 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00081"/>00081 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_mount_error(<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*fs,&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*device)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00082"/>00082 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;fs_mount&#32;error&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00083"/>00083 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_group__filesystem_1ga85336fdeb00149559c5c2008256c3013">fs_mount</link>(<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;fs,&#32;device);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00085"/>00085 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00086"/>00086 &#32;&#32;&#32;&#32;assert(errno&#32;==&#32;5005);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00087"/>00087 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00088"/>00088 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00089"/>00089 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00090"/>00090 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00091"/>00091 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_file_open_close()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00092"/>00092 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;open,close&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00093"/>00093 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_RDONLY);&#32;&#32;<emphasis role="comment">//&#32;non-existing&#32;file</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00095"/>00095 &#32;&#32;&#32;&#32;assert(fd&#32;==&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00096"/>00096 &#32;&#32;&#32;&#32;assert(errno&#32;==&#32;ENOENT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00097"/>00097 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00098"/>00098 &#32;&#32;&#32;&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00099"/>00099 &#32;&#32;&#32;&#32;assert(fd&#32;&gt;=&#32;<link linkend="_integration_2test__vfs_8c_1a59003aa54417ee248f1b9efafcf493b0">MIN_FILENO</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00100"/>00100 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00102"/>00102 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00103"/>00103 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00104"/>00104 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00105"/>00105 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00106"/>00106 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00107"/>00107 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_file_open_many()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00108"/>00108 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;open&#32;many&#32;files&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00109"/>00109 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00111"/>00111 &#32;&#32;&#32;&#32;assert(fd&#32;&gt;=&#32;<link linkend="_integration_2test__vfs_8c_1a59003aa54417ee248f1b9efafcf493b0">MIN_FILENO</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00112"/>00112 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00114"/>00114 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00115"/>00115 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd1&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00117"/>00117 &#32;&#32;&#32;&#32;assert(fd1&#32;&gt;=&#32;<link linkend="_integration_2test__vfs_8c_1a59003aa54417ee248f1b9efafcf493b0">MIN_FILENO</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd2&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file2&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00119"/>00119 &#32;&#32;&#32;&#32;assert(fd2&#32;==&#32;fd1&#32;+&#32;1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd3&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file3&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00121"/>00121 &#32;&#32;&#32;&#32;assert(fd3&#32;==&#32;fd1&#32;+&#32;2);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00122"/>00122 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd4&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file4&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00123"/>00123 &#32;&#32;&#32;&#32;assert(fd4&#32;==&#32;fd1&#32;+&#32;3);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00124"/>00124 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd5&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file5&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00125"/>00125 &#32;&#32;&#32;&#32;assert(fd5&#32;==&#32;fd1&#32;+&#32;4);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00126"/>00126 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00127"/>00127 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd5);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00128"/>00128 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00129"/>00129 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd4);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00130"/>00130 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00131"/>00131 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd3);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00132"/>00132 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00133"/>00133 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd2);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00134"/>00134 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00135"/>00135 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00136"/>00136 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00137"/>00137 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd6&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file6&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00139"/>00139 &#32;&#32;&#32;&#32;assert(fd6&#32;==&#32;fd1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00140"/>00140 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd6);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00141"/>00141 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00142"/>00142 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00143"/>00143 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00144"/>00144 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00145"/>00145 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00146"/>00146 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00147"/>00147 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_file_write_read()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00148"/>00148 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;write,read&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00149"/>00149 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00150"/>00150 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00151"/>00151 &#32;&#32;&#32;&#32;assert(fd&#32;!=&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00152"/>00152 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00153"/>00153 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;write_buffer[512]&#32;=&#32;<emphasis role="stringliteral">&quot;Hello&#32;World!&quot;</emphasis>;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00154"/>00154 &#32;&#32;&#32;&#32;ssize_t&#32;write_length&#32;=&#32;write(fd,&#32;write_buffer,&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00155"/>00155 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)write_length&#32;==&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00156"/>00156 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00158"/>00158 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00159"/>00159 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00160"/>00160 &#32;&#32;&#32;&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_RDONLY);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00161"/>00161 &#32;&#32;&#32;&#32;assert(fd&#32;!=&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00162"/>00162 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;read_buffer[512]&#32;=&#32;{0};
<anchor xml:id="_integration_2test__vfs_8c_source_1l00163"/>00163 &#32;&#32;&#32;&#32;ssize_t&#32;read_length&#32;=&#32;read(fd,&#32;read_buffer,&#32;<emphasis role="keyword">sizeof</emphasis>(read_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00164"/>00164 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)read_length&#32;==&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00165"/>00165 &#32;&#32;&#32;&#32;assert(strcmp(read_buffer,&#32;write_buffer)&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00166"/>00166 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00167"/>00167 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00168"/>00168 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00169"/>00169 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00170"/>00170 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00171"/>00171 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00172"/>00172 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00173"/>00173 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_file_seek()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00174"/>00174 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;lseek&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00175"/>00175 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00176"/>00176 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_RDWR|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00177"/>00177 &#32;&#32;&#32;&#32;assert(fd&#32;!=&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00178"/>00178 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;write_buffer[]&#32;=&#32;<emphasis role="stringliteral">&quot;123456789ABCDEF&quot;</emphasis>;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00180"/>00180 &#32;&#32;&#32;&#32;ssize_t&#32;write_length&#32;=&#32;write(fd,&#32;write_buffer,&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00181"/>00181 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)write_length&#32;==&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00182"/>00182 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00183"/>00183 &#32;&#32;&#32;&#32;off_t&#32;offset&#32;=&#32;lseek(fd,&#32;0,&#32;SEEK_SET);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00184"/>00184 &#32;&#32;&#32;&#32;assert(offset&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00185"/>00185 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00186"/>00186 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;read_buffer[512]&#32;=&#32;{0};
<anchor xml:id="_integration_2test__vfs_8c_source_1l00187"/>00187 &#32;&#32;&#32;&#32;ssize_t&#32;read_length&#32;=&#32;read(fd,&#32;read_buffer,&#32;<emphasis role="keyword">sizeof</emphasis>(read_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00188"/>00188 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)read_length&#32;==&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00189"/>00189 &#32;&#32;&#32;&#32;assert(strcmp(write_buffer,&#32;read_buffer)&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00190"/>00190 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00191"/>00191 &#32;&#32;&#32;&#32;offset&#32;=&#32;lseek(fd,&#32;9,&#32;SEEK_SET);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00192"/>00192 &#32;&#32;&#32;&#32;assert(offset&#32;==&#32;9);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00193"/>00193 &#32;&#32;&#32;&#32;memset(read_buffer,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(read_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00194"/>00194 &#32;&#32;&#32;&#32;read_length&#32;=&#32;read(fd,&#32;read_buffer,&#32;<emphasis role="keyword">sizeof</emphasis>(read_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00195"/>00195 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)read_length&#32;==&#32;strlen(write_buffer)&#32;-&#32;9);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00196"/>00196 &#32;&#32;&#32;&#32;assert(strcmp(<emphasis role="stringliteral">&quot;ABCDEF&quot;</emphasis>,&#32;read_buffer)&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00197"/>00197 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00199"/>00199 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00200"/>00200 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00201"/>00201 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00202"/>00202 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00203"/>00203 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00204"/>00204 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_file_tell()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00205"/>00205 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;ftell&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00206"/>00206 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00207"/>00207 &#32;&#32;&#32;&#32;FILE&#32;*fp&#32;=&#32;fopen(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;w+&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00208"/>00208 &#32;&#32;&#32;&#32;assert(fp&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00209"/>00209 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;write_data[]&#32;=&#32;<emphasis role="stringliteral">&quot;123456789ABCDEF&quot;</emphasis>;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;write_length&#32;=&#32;fwrite(write_data,&#32;1,&#32;strlen(write_data),&#32;fp);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00212"/>00212 &#32;&#32;&#32;&#32;assert(write_length&#32;==&#32;strlen(write_data));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00213"/>00213 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00214"/>00214 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;fflush(fp);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00215"/>00215 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00216"/>00216 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00217"/>00217 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;pos&#32;=&#32;ftell(fp);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00218"/>00218 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)pos&#32;==&#32;strlen(write_data));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00219"/>00219 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00220"/>00220 &#32;&#32;&#32;&#32;err&#32;=&#32;fseek(fp,&#32;0,&#32;SEEK_SET);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00221"/>00221 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00222"/>00222 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00223"/>00223 &#32;&#32;&#32;&#32;pos&#32;=&#32;ftell(fp);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00224"/>00224 &#32;&#32;&#32;&#32;assert(pos&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00225"/>00225 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00226"/>00226 &#32;&#32;&#32;&#32;err&#32;=&#32;fseek(fp,&#32;0,&#32;SEEK_END);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00227"/>00227 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00228"/>00228 &#32;&#32;&#32;&#32;pos&#32;=&#32;ftell(fp);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00229"/>00229 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)pos&#32;==&#32;strlen(write_data));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00230"/>00230 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00231"/>00231 &#32;&#32;&#32;&#32;err&#32;=&#32;fclose(fp);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00232"/>00232 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00233"/>00233 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00234"/>00234 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00235"/>00235 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00236"/>00236 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00237"/>00237 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_file_truncate()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00238"/>00238 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;ftruncate&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00239"/>00239 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00240"/>00240 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_RDWR|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00241"/>00241 &#32;&#32;&#32;&#32;assert(fd&#32;!=&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00242"/>00242 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00243"/>00243 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;write_buffer[]&#32;=&#32;<emphasis role="stringliteral">&quot;123456789ABCDEF&quot;</emphasis>;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00244"/>00244 &#32;&#32;&#32;&#32;ssize_t&#32;write_length&#32;=&#32;write(fd,&#32;write_buffer,&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00245"/>00245 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)write_length&#32;==&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00246"/>00246 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00247"/>00247 &#32;&#32;&#32;&#32;off_t&#32;offset&#32;=&#32;lseek(fd,&#32;0,&#32;SEEK_SET);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00248"/>00248 &#32;&#32;&#32;&#32;assert(offset&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00249"/>00249 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00250"/>00250 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a30e12ed09db8f77b0b4e7ffc5f1f609b">ftruncate</link>(fd,&#32;9);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00251"/>00251 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00252"/>00252 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00253"/>00253 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;read_buffer[512]&#32;=&#32;{0};
<anchor xml:id="_integration_2test__vfs_8c_source_1l00254"/>00254 &#32;&#32;&#32;&#32;ssize_t&#32;read_length&#32;=&#32;read(fd,&#32;read_buffer,&#32;<emphasis role="keyword">sizeof</emphasis>(read_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00255"/>00255 &#32;&#32;&#32;&#32;assert(read_length&#32;==&#32;9);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00256"/>00256 &#32;&#32;&#32;&#32;assert(strcmp(read_buffer,&#32;<emphasis role="stringliteral">&quot;123456789&quot;</emphasis>)&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00257"/>00257 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00258"/>00258 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00259"/>00259 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00260"/>00260 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00261"/>00261 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00262"/>00262 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00263"/>00263 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00264"/>00264 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_mkdir()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00265"/>00265 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;mkdir,rmdir&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00266"/>00266 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00267"/>00267 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a548e5b744ca2e97beb61ad7aa41114e2">mkdir</link>(<emphasis role="stringliteral">&quot;/dir-create&quot;</emphasis>,&#32;0777);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00268"/>00268 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00269"/>00269 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00270"/>00270 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>stat&#32;finfo;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00271"/>00271 &#32;&#32;&#32;&#32;err&#32;=&#32;stat(<emphasis role="stringliteral">&quot;/dir-create&quot;</emphasis>,&#32;&amp;finfo);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00272"/>00272 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00273"/>00273 &#32;&#32;&#32;&#32;assert(finfo.st_mode&#32;&amp;&#32;S_IFDIR);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00274"/>00274 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00275"/>00275 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1ab2df76f2c62ae012c2e417813b5fe8ce">rmdir</link>(<emphasis role="stringliteral">&quot;/dir-create&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00276"/>00276 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00277"/>00277 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00278"/>00278 &#32;&#32;&#32;&#32;err&#32;=&#32;stat(<emphasis role="stringliteral">&quot;/dir-create&quot;</emphasis>,&#32;&amp;finfo);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00279"/>00279 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;ENOENT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00280"/>00280 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00281"/>00281 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00282"/>00282 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00283"/>00283 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00284"/>00284 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_dir_open()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00285"/>00285 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;opendir,closedir&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00286"/>00286 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<link linkend="_dirent_8h_1ae7917177082ed5bb5a50a36bcc72a5a1">DIR</link>&#32;*dir&#32;=&#32;<link linkend="_vfs_8c_1ad759a0269427a564f3ce672d43e885cf">opendir</link>(<emphasis role="stringliteral">&quot;/dir-non-exists&quot;</emphasis>);&#32;&#32;<emphasis role="comment">//&#32;non-exists&#32;directory</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00288"/>00288 &#32;&#32;&#32;&#32;assert(dir&#32;==&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00289"/>00289 &#32;&#32;&#32;&#32;assert((errno&#32;==&#32;ENOTDIR)&#32;||&#32;(errno&#32;==&#32;ENOENT));&#32;&#32;<emphasis role="comment">//&#32;NOTE:&#32;FAT&#32;returns&#32;ENOTDIR,&#32;littlefs&#32;returns&#32;ENOENT</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00290"/>00290 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00291"/>00291 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a548e5b744ca2e97beb61ad7aa41114e2">mkdir</link>(<emphasis role="stringliteral">&quot;/dir&quot;</emphasis>,&#32;0777);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00292"/>00292 &#32;&#32;&#32;&#32;assert((err&#32;==&#32;0)&#32;||&#32;(err&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;EEXIST));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00293"/>00293 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00294"/>00294 &#32;&#32;&#32;&#32;dir&#32;=&#32;<link linkend="_vfs_8c_1ad759a0269427a564f3ce672d43e885cf">opendir</link>(<emphasis role="stringliteral">&quot;/dir&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00295"/>00295 &#32;&#32;&#32;&#32;assert(dir&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00296"/>00296 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00297"/>00297 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1ac0258906f9453b8abf03e945aa9c9676">closedir</link>(dir);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00298"/>00298 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00299"/>00299 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00300"/>00300 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00301"/>00301 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00302"/>00302 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00303"/>00303 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_dir_open_many()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00304"/>00304 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;opendir&#32;many&#32;dir&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00305"/>00305 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a548e5b744ca2e97beb61ad7aa41114e2">mkdir</link>(<emphasis role="stringliteral">&quot;/dir1&quot;</emphasis>,&#32;0777);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00307"/>00307 &#32;&#32;&#32;&#32;assert((err&#32;==&#32;0)&#32;||&#32;(err&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;EEXIST));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00308"/>00308 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a548e5b744ca2e97beb61ad7aa41114e2">mkdir</link>(<emphasis role="stringliteral">&quot;/dir2&quot;</emphasis>,&#32;0777);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00309"/>00309 &#32;&#32;&#32;&#32;assert((err&#32;==&#32;0)&#32;||&#32;(err&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;EEXIST));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00310"/>00310 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a548e5b744ca2e97beb61ad7aa41114e2">mkdir</link>(<emphasis role="stringliteral">&quot;/dir3&quot;</emphasis>,&#32;0777);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00311"/>00311 &#32;&#32;&#32;&#32;assert((err&#32;==&#32;0)&#32;||&#32;(err&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;EEXIST));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00312"/>00312 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a548e5b744ca2e97beb61ad7aa41114e2">mkdir</link>(<emphasis role="stringliteral">&quot;/dir4&quot;</emphasis>,&#32;0777);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00313"/>00313 &#32;&#32;&#32;&#32;assert((err&#32;==&#32;0)&#32;||&#32;(err&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;EEXIST));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00314"/>00314 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a548e5b744ca2e97beb61ad7aa41114e2">mkdir</link>(<emphasis role="stringliteral">&quot;/dir5&quot;</emphasis>,&#32;0777);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00315"/>00315 &#32;&#32;&#32;&#32;assert((err&#32;==&#32;0)&#32;||&#32;(err&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;EEXIST));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00316"/>00316 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00317"/>00317 &#32;&#32;&#32;&#32;<link linkend="_dirent_8h_1ae7917177082ed5bb5a50a36bcc72a5a1">DIR</link>&#32;*dir1&#32;=&#32;<link linkend="_vfs_8c_1ad759a0269427a564f3ce672d43e885cf">opendir</link>(<emphasis role="stringliteral">&quot;/dir1&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00318"/>00318 &#32;&#32;&#32;&#32;assert(dir1&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00319"/>00319 &#32;&#32;&#32;&#32;<link linkend="_dirent_8h_1ae7917177082ed5bb5a50a36bcc72a5a1">DIR</link>&#32;*dir2&#32;=&#32;<link linkend="_vfs_8c_1ad759a0269427a564f3ce672d43e885cf">opendir</link>(<emphasis role="stringliteral">&quot;/dir2&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00320"/>00320 &#32;&#32;&#32;&#32;assert(dir2&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00321"/>00321 &#32;&#32;&#32;&#32;<link linkend="_dirent_8h_1ae7917177082ed5bb5a50a36bcc72a5a1">DIR</link>&#32;*dir3&#32;=&#32;<link linkend="_vfs_8c_1ad759a0269427a564f3ce672d43e885cf">opendir</link>(<emphasis role="stringliteral">&quot;/dir3&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00322"/>00322 &#32;&#32;&#32;&#32;assert(dir3&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00323"/>00323 &#32;&#32;&#32;&#32;<link linkend="_dirent_8h_1ae7917177082ed5bb5a50a36bcc72a5a1">DIR</link>&#32;*dir4&#32;=&#32;<link linkend="_vfs_8c_1ad759a0269427a564f3ce672d43e885cf">opendir</link>(<emphasis role="stringliteral">&quot;/dir4&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00324"/>00324 &#32;&#32;&#32;&#32;assert(dir4&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00325"/>00325 &#32;&#32;&#32;&#32;<link linkend="_dirent_8h_1ae7917177082ed5bb5a50a36bcc72a5a1">DIR</link>&#32;*dir5&#32;=&#32;<link linkend="_vfs_8c_1ad759a0269427a564f3ce672d43e885cf">opendir</link>(<emphasis role="stringliteral">&quot;/dir5&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00326"/>00326 &#32;&#32;&#32;&#32;assert(dir5&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00327"/>00327 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00328"/>00328 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1ac0258906f9453b8abf03e945aa9c9676">closedir</link>(dir5);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00329"/>00329 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00330"/>00330 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1ac0258906f9453b8abf03e945aa9c9676">closedir</link>(dir4);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00331"/>00331 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00332"/>00332 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1ac0258906f9453b8abf03e945aa9c9676">closedir</link>(dir3);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00333"/>00333 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00334"/>00334 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1ac0258906f9453b8abf03e945aa9c9676">closedir</link>(dir2);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00335"/>00335 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00336"/>00336 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1ac0258906f9453b8abf03e945aa9c9676">closedir</link>(dir1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00337"/>00337 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00338"/>00338 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00339"/>00339 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00340"/>00340 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00341"/>00341 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_dir_read()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00342"/>00342 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;readdir&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00343"/>00343 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00344"/>00344 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a548e5b744ca2e97beb61ad7aa41114e2">mkdir</link>(<emphasis role="stringliteral">&quot;/dir&quot;</emphasis>,&#32;0777);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00345"/>00345 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0&#32;||&#32;(err&#32;==&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;EEXIST));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00346"/>00346 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00347"/>00347 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;add&#32;regular&#32;file</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00348"/>00348 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/dir/file&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00349"/>00349 &#32;&#32;&#32;&#32;assert(fd&#32;!=&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00350"/>00350 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00351"/>00351 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00352"/>00352 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00353"/>00353 &#32;&#32;&#32;&#32;<link linkend="_dirent_8h_1ae7917177082ed5bb5a50a36bcc72a5a1">DIR</link>&#32;*dir&#32;=&#32;<link linkend="_vfs_8c_1ad759a0269427a564f3ce672d43e885cf">opendir</link>(<emphasis role="stringliteral">&quot;/dir&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00354"/>00354 &#32;&#32;&#32;&#32;assert(dir&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00355"/>00355 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00356"/>00356 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structdirent">dirent</link>&#32;*ent&#32;=&#32;<link linkend="_vfs_8c_1ab1ebcf210f49b305423bcc413c6427ee">readdir</link>(dir);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00357"/>00357 &#32;&#32;&#32;&#32;assert(ent&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00358"/>00358 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ent-&gt;<link linkend="_structdirent_1a948760e3b7f607213a19f85e7af15a32">d_type</link>&#32;==&#32;<link linkend="_filesystem_8h_1a7eb42ef11a5e99c122b8efbbfa431b74a40b944f75d390136b9f74124dc23ef94">DT_DIR</link>)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;not&#32;FAT&#32;file&#32;system</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(strcmp(ent-&gt;<link linkend="_structdirent_1a8cb13e39a90c43e6b180ff4f1614e4da">d_name</link>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>)&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00361"/>00361 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ent&#32;=&#32;<link linkend="_vfs_8c_1ab1ebcf210f49b305423bcc413c6427ee">readdir</link>(dir);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(ent&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(ent-&gt;<link linkend="_structdirent_1a948760e3b7f607213a19f85e7af15a32">d_type</link>&#32;==&#32;<link linkend="_filesystem_8h_1a7eb42ef11a5e99c122b8efbbfa431b74a40b944f75d390136b9f74124dc23ef94">DT_DIR</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(strcmp(ent-&gt;<link linkend="_structdirent_1a8cb13e39a90c43e6b180ff4f1614e4da">d_name</link>,&#32;<emphasis role="stringliteral">&quot;..&quot;</emphasis>)&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00366"/>00366 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ent&#32;=&#32;<link linkend="_vfs_8c_1ab1ebcf210f49b305423bcc413c6427ee">readdir</link>(dir);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(ent&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00369"/>00369 &#32;&#32;&#32;&#32;}
<anchor xml:id="_integration_2test__vfs_8c_source_1l00370"/>00370 &#32;&#32;&#32;&#32;assert(ent-&gt;<link linkend="_structdirent_1a948760e3b7f607213a19f85e7af15a32">d_type</link>&#32;==&#32;<link linkend="_filesystem_8h_1a7eb42ef11a5e99c122b8efbbfa431b74a2154e45e317a72dc8b51333a7f2930bc">DT_REG</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00371"/>00371 &#32;&#32;&#32;&#32;assert(strcmp(ent-&gt;<link linkend="_structdirent_1a8cb13e39a90c43e6b180ff4f1614e4da">d_name</link>,&#32;<emphasis role="stringliteral">&quot;file&quot;</emphasis>)&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00372"/>00372 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00373"/>00373 &#32;&#32;&#32;&#32;ent&#32;=&#32;<link linkend="_vfs_8c_1ab1ebcf210f49b305423bcc413c6427ee">readdir</link>(dir);&#32;&#32;<emphasis role="comment">//&#32;Reach&#32;the&#32;end&#32;of&#32;the&#32;directory</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00374"/>00374 &#32;&#32;&#32;&#32;assert(ent&#32;==&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00375"/>00375 &#32;&#32;&#32;&#32;assert(errno&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00376"/>00376 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00377"/>00377 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1ac0258906f9453b8abf03e945aa9c9676">closedir</link>(dir);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00378"/>00378 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00379"/>00379 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00380"/>00380 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00381"/>00381 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00382"/>00382 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00383"/>00383 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_remove()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00384"/>00384 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;unlink&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00385"/>00385 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00386"/>00386 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;unlink(<emphasis role="stringliteral">&quot;/not-exists&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00387"/>00387 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00388"/>00388 &#32;&#32;&#32;&#32;assert(errno&#32;==&#32;ENOENT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00389"/>00389 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00390"/>00390 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00391"/>00391 &#32;&#32;&#32;&#32;assert(fd&#32;!=&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00392"/>00392 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00393"/>00393 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00394"/>00394 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00395"/>00395 &#32;&#32;&#32;&#32;err&#32;=&#32;unlink(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00396"/>00396 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00397"/>00397 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00398"/>00398 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00399"/>00399 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00400"/>00400 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00401"/>00401 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_rename()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00402"/>00402 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;rename&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00403"/>00403 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00404"/>00404 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a2ce7c2db9fdb6aec06afaf3cfc5979c7">rename</link>(<emphasis role="stringliteral">&quot;/not-exists&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;/renamed&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00405"/>00405 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00406"/>00406 &#32;&#32;&#32;&#32;assert(errno&#32;==&#32;ENOENT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00407"/>00407 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00408"/>00408 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00409"/>00409 &#32;&#32;&#32;&#32;assert(fd&#32;!=&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00410"/>00410 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;write_buffer[512]&#32;=&#32;<emphasis role="stringliteral">&quot;Hello&#32;World!&quot;</emphasis>;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00411"/>00411 &#32;&#32;&#32;&#32;ssize_t&#32;write_length&#32;=&#32;write(fd,&#32;write_buffer,&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00412"/>00412 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)write_length&#32;==&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00413"/>00413 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00414"/>00414 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00415"/>00415 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00416"/>00416 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00417"/>00417 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a2ce7c2db9fdb6aec06afaf3cfc5979c7">rename</link>(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;/renamed&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00418"/>00418 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00419"/>00419 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00420"/>00420 &#32;&#32;&#32;&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/renamed&quot;</emphasis>,&#32;O_RDONLY);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00421"/>00421 &#32;&#32;&#32;&#32;assert(fd&#32;!=&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00422"/>00422 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;read_buffer[512]&#32;=&#32;{0};
<anchor xml:id="_integration_2test__vfs_8c_source_1l00423"/>00423 &#32;&#32;&#32;&#32;ssize_t&#32;read_length&#32;=&#32;read(fd,&#32;read_buffer,&#32;<emphasis role="keyword">sizeof</emphasis>(read_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00424"/>00424 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)read_length&#32;==&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00425"/>00425 &#32;&#32;&#32;&#32;assert(strcmp(read_buffer,&#32;write_buffer)&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00426"/>00426 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00427"/>00427 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00428"/>00428 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00429"/>00429 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00430"/>00430 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00431"/>00431 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00432"/>00432 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00433"/>00433 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_stat()&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00434"/>00434 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;lstat&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00435"/>00435 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00436"/>00436 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;regular&#32;file</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00437"/>00437 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00438"/>00438 &#32;&#32;&#32;&#32;assert(fd&#32;!=&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00439"/>00439 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;write_buffer[512]&#32;=&#32;<emphasis role="stringliteral">&quot;Hello&#32;World!&quot;</emphasis>;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00440"/>00440 &#32;&#32;&#32;&#32;ssize_t&#32;write_length&#32;=&#32;write(fd,&#32;write_buffer,&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00441"/>00441 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)write_length&#32;==&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00442"/>00442 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00443"/>00443 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00444"/>00444 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00445"/>00445 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00446"/>00446 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>stat&#32;finfo;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00447"/>00447 &#32;&#32;&#32;&#32;err&#32;=&#32;stat(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;&amp;finfo);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00448"/>00448 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00449"/>00449 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)finfo.st_size&#32;==&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00450"/>00450 &#32;&#32;&#32;&#32;assert(finfo.st_mode&#32;&amp;&#32;S_IFREG);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00451"/>00451 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00452"/>00452 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;directory</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00453"/>00453 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_vfs_8c_1a548e5b744ca2e97beb61ad7aa41114e2">mkdir</link>(<emphasis role="stringliteral">&quot;/dir&quot;</emphasis>,&#32;0777);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00454"/>00454 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0&#32;||&#32;(err&#32;==&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;EEXIST));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00455"/>00455 &#32;&#32;&#32;&#32;err&#32;=&#32;stat(<emphasis role="stringliteral">&quot;/dir&quot;</emphasis>,&#32;&amp;finfo);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00456"/>00456 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00457"/>00457 &#32;&#32;&#32;&#32;assert(finfo.st_mode&#32;&amp;&#32;S_IFDIR);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00458"/>00458 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00459"/>00459 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00460"/>00460 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00461"/>00461 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00462"/>00462 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_reformat(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00463"/>00463 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;fs_reformat&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00464"/>00464 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00465"/>00465 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00466"/>00466 &#32;&#32;&#32;&#32;assert(fd&#32;!=&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00467"/>00467 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;write_buffer[512]&#32;=&#32;<emphasis role="stringliteral">&quot;Hello&#32;World!&quot;</emphasis>;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00468"/>00468 &#32;&#32;&#32;&#32;ssize_t&#32;write_length&#32;=&#32;write(fd,&#32;write_buffer,&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00469"/>00469 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)write_length&#32;==&#32;strlen(write_buffer));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00470"/>00470 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00471"/>00471 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00472"/>00472 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00473"/>00473 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_group__filesystem_1ga72d0b65b57fe9e8c02c149a20c5fc0cd">fs_reformat</link>(<emphasis role="stringliteral">&quot;/&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00474"/>00474 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00475"/>00475 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00476"/>00476 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>stat&#32;finfo;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00477"/>00477 &#32;&#32;&#32;&#32;err&#32;=&#32;stat(<emphasis role="stringliteral">&quot;/file&quot;</emphasis>,&#32;&amp;finfo);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00478"/>00478 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;-1);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00479"/>00479 &#32;&#32;&#32;&#32;assert(errno&#32;==&#32;ENOENT);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00480"/>00480 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00481"/>00481 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00482"/>00482 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00483"/>00483 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00484"/>00484 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_unmount(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00485"/>00485 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;fs_unmount&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00486"/>00486 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00487"/>00487 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_group__filesystem_1ga16e3ebc7a28d4b1ba08759b03ec739ff">fs_unmount</link>(<emphasis role="stringliteral">&quot;/&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00488"/>00488 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00489"/>00489 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00490"/>00490 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00491"/>00491 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00492"/>00492 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00493"/>00493 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_api_mount_unmount_repeat(<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*fs,&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*device)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00494"/>00494 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;fs_mount,fs_unmount&#32;repeat&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00495"/>00495 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00496"/>00496 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;20;&#32;i++)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_group__filesystem_1ga85336fdeb00149559c5c2008256c3013">fs_mount</link>(<emphasis role="stringliteral">&quot;/&quot;</emphasis>,&#32;fs,&#32;device);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_group__filesystem_1ga16e3ebc7a28d4b1ba08759b03ec739ff">fs_unmount</link>(<emphasis role="stringliteral">&quot;/&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00501"/>00501 &#32;&#32;&#32;&#32;}
<anchor xml:id="_integration_2test__vfs_8c_source_1l00502"/>00502 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00503"/>00503 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00504"/>00504 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00505"/>00505 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00506"/>00506 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_loopback_file(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00507"/>00507 &#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;loopback&#32;image&#32;file&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00508"/>00508 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00509"/>00509 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>stat&#32;finfo;
<anchor xml:id="_integration_2test__vfs_8c_source_1l00510"/>00510 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;stat(<emphasis role="stringliteral">&quot;/flash/loopback.dmg&quot;</emphasis>,&#32;&amp;finfo);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00511"/>00511 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00512"/>00512 &#32;&#32;&#32;&#32;assert(finfo.st_mode&#32;&amp;&#32;S_IFREG);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00513"/>00513 &#32;&#32;&#32;&#32;assert((<emphasis role="keywordtype">size_t</emphasis>)finfo.st_size&#32;&gt;&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00514"/>00514 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00515"/>00515 &#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__vfs_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__vfs_8c_source_1l00516"/>00516 }
<anchor xml:id="_integration_2test__vfs_8c_source_1l00517"/>00517 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00518"/><link linkend="_pico-vfs-_r_e_g_i-_local_2tests_2integration_2main_8c_1a6b6e3fca2ed024f4d0fa99c0b09542fb">00518</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_integration_2test__vfs_8c_1a6b6e3fca2ed024f4d0fa99c0b09542fb">test_vfs</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="_integration_2test__vfs_8c_source_1l00519"/>00519 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;VFS&#32;FAT:\n&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00520"/>00520 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*flash&#32;=&#32;<link linkend="_group__blockdevice__flash_1gaa4f26759924c70f9a86436aa58f67cfc">blockdevice_flash_create</link>(<link linkend="_integration_2test__blockdevice_8c_1ae38550b2008b82c08588d2340f196914">FLASH_START_AT</link>,&#32;<link linkend="_fs__init__loopback_8c_1a1f06fce82ce957c8dd28c5e07da29d97">FLASH_LENGTH_ALL</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00521"/>00521 &#32;&#32;&#32;&#32;assert(flash&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00522"/>00522 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*fat&#32;=&#32;<link linkend="_group__filesystem__fat_1ga5b7bf00bfce64f76dd5cba01901781c5">filesystem_fat_create</link>();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00523"/>00523 &#32;&#32;&#32;&#32;assert(fat&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00524"/>00524 &#32;&#32;&#32;&#32;setup(flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00525"/>00525 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00526"/>00526 &#32;&#32;&#32;&#32;test_api_format(fat,&#32;flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00527"/>00527 &#32;&#32;&#32;&#32;test_api_mount(fat,&#32;flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00528"/>00528 &#32;&#32;&#32;&#32;test_api_file_open_close();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00529"/>00529 &#32;&#32;&#32;&#32;test_api_file_open_many();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00530"/>00530 &#32;&#32;&#32;&#32;test_api_file_write_read();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00531"/>00531 &#32;&#32;&#32;&#32;test_api_file_seek();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00532"/>00532 &#32;&#32;&#32;&#32;test_api_file_tell();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00533"/>00533 &#32;&#32;&#32;&#32;test_api_file_truncate();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00534"/>00534 &#32;&#32;&#32;&#32;test_api_stat();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00535"/>00535 &#32;&#32;&#32;&#32;test_api_remove();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00536"/>00536 &#32;&#32;&#32;&#32;test_api_rename();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00537"/>00537 &#32;&#32;&#32;&#32;test_api_mkdir();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00538"/>00538 &#32;&#32;&#32;&#32;test_api_dir_open();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00539"/>00539 &#32;&#32;&#32;&#32;test_api_dir_open_many();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00540"/>00540 &#32;&#32;&#32;&#32;test_api_dir_read();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00541"/>00541 &#32;&#32;&#32;&#32;test_api_reformat();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00542"/>00542 &#32;&#32;&#32;&#32;test_api_unmount();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00543"/>00543 &#32;&#32;&#32;&#32;test_api_mount_unmount_repeat(fat,&#32;flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00544"/>00544 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00545"/>00545 &#32;&#32;&#32;&#32;cleanup(flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00546"/>00546 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice__flash_1ga8d9d318677d2c372535f4c775c5a22c9">blockdevice_flash_free</link>(flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00547"/>00547 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem__fat_1gac9daf020a57d62f1b2fe7eef5ce5847e">filesystem_fat_free</link>(fat);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00548"/>00548 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00549"/>00549 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;VFS&#32;littlefs:\n&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00550"/>00550 &#32;&#32;&#32;&#32;flash&#32;=&#32;<link linkend="_group__blockdevice__flash_1gaa4f26759924c70f9a86436aa58f67cfc">blockdevice_flash_create</link>(<link linkend="_integration_2test__blockdevice_8c_1ae38550b2008b82c08588d2340f196914">FLASH_START_AT</link>,&#32;<link linkend="_fs__init__loopback_8c_1a1f06fce82ce957c8dd28c5e07da29d97">FLASH_LENGTH_ALL</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00551"/>00551 &#32;&#32;&#32;&#32;assert(flash&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00552"/>00552 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*lfs&#32;=&#32;<link linkend="_group__filesystem__littlefs_1ga6bf5205dec6fdf2ec2d190c44f5f2594">filesystem_littlefs_create</link>(<link linkend="_test__benchmark_8c_1a1c1a6c6d5b2ddab1836e6c57ace6e71d">LITTLEFS_BLOCK_CYCLE</link>,
<anchor xml:id="_integration_2test__vfs_8c_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test__benchmark_8c_1a73694eeb2680f0f6e6fa72fcd0ad458d">LITTLEFS_LOOKAHEAD_SIZE</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00554"/>00554 &#32;&#32;&#32;&#32;assert(lfs&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00555"/>00555 &#32;&#32;&#32;&#32;setup(flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00556"/>00556 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00557"/>00557 &#32;&#32;&#32;&#32;test_api_format(lfs,&#32;flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00558"/>00558 &#32;&#32;&#32;&#32;test_api_mount(lfs,&#32;flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00559"/>00559 &#32;&#32;&#32;&#32;test_api_file_open_close();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00560"/>00560 &#32;&#32;&#32;&#32;test_api_file_open_many();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00561"/>00561 &#32;&#32;&#32;&#32;test_api_file_write_read();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00562"/>00562 &#32;&#32;&#32;&#32;test_api_file_seek();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00563"/>00563 &#32;&#32;&#32;&#32;test_api_file_tell();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00564"/>00564 &#32;&#32;&#32;&#32;test_api_file_truncate();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00565"/>00565 &#32;&#32;&#32;&#32;test_api_stat();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00566"/>00566 &#32;&#32;&#32;&#32;test_api_remove();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00567"/>00567 &#32;&#32;&#32;&#32;test_api_rename();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00568"/>00568 &#32;&#32;&#32;&#32;test_api_mkdir();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00569"/>00569 &#32;&#32;&#32;&#32;test_api_dir_open();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00570"/>00570 &#32;&#32;&#32;&#32;test_api_dir_open_many();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00571"/>00571 &#32;&#32;&#32;&#32;test_api_dir_read();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00572"/>00572 &#32;&#32;&#32;&#32;test_api_reformat();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00573"/>00573 &#32;&#32;&#32;&#32;test_api_unmount();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00574"/>00574 &#32;&#32;&#32;&#32;test_api_mount_unmount_repeat(lfs,&#32;flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00575"/>00575 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00576"/>00576 &#32;&#32;&#32;&#32;cleanup(flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00577"/>00577 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice__flash_1ga8d9d318677d2c372535f4c775c5a22c9">blockdevice_flash_free</link>(flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00578"/>00578 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem__littlefs_1ga4cdb39bf1728e9ee86032ef5c4abd704">filesystem_littlefs_free</link>(lfs);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00579"/>00579 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00580"/>00580 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;VFS&#32;littlefs&#32;on&#32;the&#32;Heap:\n&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00581"/>00581 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*heap&#32;=&#32;<link linkend="_group__blockdevice__heap_1ga9500b5327f9bf0e2bf3ca11ec122748f">blockdevice_heap_create</link>(<link linkend="_integration_2test__vfs_8c_1a73f9ede05cd36c7e6943b56197e34593">BLOCKDEVICE_HEAP_SIZE</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00582"/>00582 &#32;&#32;&#32;&#32;assert(heap&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00583"/>00583 &#32;&#32;&#32;&#32;lfs&#32;=&#32;<link linkend="_group__filesystem__littlefs_1ga6bf5205dec6fdf2ec2d190c44f5f2594">filesystem_littlefs_create</link>(<link linkend="_test__benchmark_8c_1a1c1a6c6d5b2ddab1836e6c57ace6e71d">LITTLEFS_BLOCK_CYCLE</link>,
<anchor xml:id="_integration_2test__vfs_8c_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test__benchmark_8c_1a73694eeb2680f0f6e6fa72fcd0ad458d">LITTLEFS_LOOKAHEAD_SIZE</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00585"/>00585 &#32;&#32;&#32;&#32;assert(lfs&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00586"/>00586 &#32;&#32;&#32;&#32;setup(heap);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00587"/>00587 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00588"/>00588 &#32;&#32;&#32;&#32;test_api_format(lfs,&#32;heap);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00589"/>00589 &#32;&#32;&#32;&#32;test_api_mount(lfs,&#32;heap);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00590"/>00590 &#32;&#32;&#32;&#32;test_api_file_open_close();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00591"/>00591 &#32;&#32;&#32;&#32;test_api_file_open_many();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00592"/>00592 &#32;&#32;&#32;&#32;test_api_file_write_read();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00593"/>00593 &#32;&#32;&#32;&#32;test_api_file_seek();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00594"/>00594 &#32;&#32;&#32;&#32;test_api_file_tell();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00595"/>00595 &#32;&#32;&#32;&#32;test_api_file_truncate();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00596"/>00596 &#32;&#32;&#32;&#32;test_api_stat();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00597"/>00597 &#32;&#32;&#32;&#32;test_api_remove();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00598"/>00598 &#32;&#32;&#32;&#32;test_api_rename();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00599"/>00599 &#32;&#32;&#32;&#32;test_api_mkdir();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00600"/>00600 &#32;&#32;&#32;&#32;test_api_dir_open();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00601"/>00601 &#32;&#32;&#32;&#32;test_api_dir_open_many();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00602"/>00602 &#32;&#32;&#32;&#32;test_api_dir_read();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00603"/>00603 &#32;&#32;&#32;&#32;test_api_reformat();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00604"/>00604 &#32;&#32;&#32;&#32;test_api_unmount();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00605"/>00605 &#32;&#32;&#32;&#32;test_api_mount_unmount_repeat(lfs,&#32;heap);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00606"/>00606 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00607"/>00607 &#32;&#32;&#32;&#32;cleanup(heap);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00608"/>00608 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem__littlefs_1ga4cdb39bf1728e9ee86032ef5c4abd704">filesystem_littlefs_free</link>(lfs);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00609"/>00609 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice__heap_1ga6d78ccbc7b18231fadf2dd61c42f2a84">blockdevice_heap_free</link>(heap);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00610"/>00610 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00611"/>00611 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00612"/>00612 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;VFS&#32;loopback&#32;FAT&#32;on&#32;littlefs:\n&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00613"/>00613 &#32;&#32;&#32;&#32;flash&#32;=&#32;<link linkend="_group__blockdevice__flash_1gaa4f26759924c70f9a86436aa58f67cfc">blockdevice_flash_create</link>(<link linkend="_integration_2test__blockdevice_8c_1ae38550b2008b82c08588d2340f196914">FLASH_START_AT</link>,&#32;<link linkend="_fs__init__loopback_8c_1a1f06fce82ce957c8dd28c5e07da29d97">FLASH_LENGTH_ALL</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00614"/>00614 &#32;&#32;&#32;&#32;assert(flash&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00615"/>00615 &#32;&#32;&#32;&#32;lfs&#32;=&#32;<link linkend="_group__filesystem__littlefs_1ga6bf5205dec6fdf2ec2d190c44f5f2594">filesystem_littlefs_create</link>(<link linkend="_test__benchmark_8c_1a1c1a6c6d5b2ddab1836e6c57ace6e71d">LITTLEFS_BLOCK_CYCLE</link>,
<anchor xml:id="_integration_2test__vfs_8c_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_test__benchmark_8c_1a73694eeb2680f0f6e6fa72fcd0ad458d">LITTLEFS_LOOKAHEAD_SIZE</link>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00617"/>00617 &#32;&#32;&#32;&#32;assert(lfs&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00618"/>00618 &#32;&#32;&#32;&#32;setup(flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00619"/>00619 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_group__filesystem_1gac9f86bdbfdf77fb98f51551c4b6068ed">fs_format</link>(lfs,&#32;flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00620"/>00620 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00621"/>00621 &#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_group__filesystem_1ga85336fdeb00149559c5c2008256c3013">fs_mount</link>(<emphasis role="stringliteral">&quot;/flash&quot;</emphasis>,&#32;lfs,&#32;flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00622"/>00622 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00623"/>00623 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00624"/>00624 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*loopback&#32;=&#32;<link linkend="_group__blockdevice__loopback_1gaf43766de5178a14bc204b9ec3b2a474d">blockdevice_loopback_create</link>(<emphasis role="stringliteral">&quot;/flash/loopback.dmg&quot;</emphasis>,&#32;64&#32;*&#32;1024,&#32;512);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00625"/>00625 &#32;&#32;&#32;&#32;fat&#32;=&#32;<link linkend="_group__filesystem__fat_1ga5b7bf00bfce64f76dd5cba01901781c5">filesystem_fat_create</link>();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00626"/>00626 &#32;&#32;&#32;&#32;assert(loopback&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00627"/>00627 &#32;&#32;&#32;&#32;assert(fat&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00628"/>00628 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00629"/>00629 &#32;&#32;&#32;&#32;test_api_format(fat,&#32;loopback);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00630"/>00630 &#32;&#32;&#32;&#32;test_api_mount(fat,&#32;loopback);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00631"/>00631 &#32;&#32;&#32;&#32;test_api_file_open_close();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00632"/>00632 &#32;&#32;&#32;&#32;test_api_file_open_many();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00633"/>00633 &#32;&#32;&#32;&#32;test_api_file_write_read();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00634"/>00634 &#32;&#32;&#32;&#32;test_api_file_seek();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00635"/>00635 &#32;&#32;&#32;&#32;test_api_file_tell();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00636"/>00636 &#32;&#32;&#32;&#32;test_api_file_truncate();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00637"/>00637 &#32;&#32;&#32;&#32;test_api_stat();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00638"/>00638 &#32;&#32;&#32;&#32;test_api_remove();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00639"/>00639 &#32;&#32;&#32;&#32;test_api_rename();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00640"/>00640 &#32;&#32;&#32;&#32;test_api_mkdir();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00641"/>00641 &#32;&#32;&#32;&#32;test_api_dir_open();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00642"/>00642 &#32;&#32;&#32;&#32;test_api_dir_open_many();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00643"/>00643 &#32;&#32;&#32;&#32;test_api_dir_read();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00644"/>00644 &#32;&#32;&#32;&#32;test_api_reformat();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00645"/>00645 &#32;&#32;&#32;&#32;test_api_mount_unmount_repeat(fat,&#32;loopback);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00646"/>00646 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00647"/>00647 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem__fat_1gac9daf020a57d62f1b2fe7eef5ce5847e">filesystem_fat_free</link>(fat);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00648"/>00648 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice__loopback_1ga3c4a5393adc24e81505704fba94c1a15">blockdevice_loopback_free</link>(loopback);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00649"/>00649 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00650"/>00650 &#32;&#32;&#32;&#32;test_loopback_file();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00651"/>00651 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00652"/>00652 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem_1ga16e3ebc7a28d4b1ba08759b03ec739ff">fs_unmount</link>(<emphasis role="stringliteral">&quot;/flash&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00653"/>00653 &#32;&#32;&#32;&#32;cleanup(flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00654"/>00654 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice__flash_1ga8d9d318677d2c372535f4c775c5a22c9">blockdevice_flash_free</link>(flash);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00655"/>00655 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem__littlefs_1ga4cdb39bf1728e9ee86032ef5c4abd704">filesystem_littlefs_free</link>(lfs);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00656"/>00656 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00657"/>00657 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;VFS&#32;not&#32;connected&#32;SD&#32;card&#32;error&#32;handling:\n&quot;</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00658"/>00658 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*sd&#32;=&#32;<link linkend="_group__blockdevice__sd_1ga4711fc3f61142ce9387c984809bd3db8">blockdevice_sd_create</link>(spi1,&#32;&#32;<emphasis role="comment">//&#32;SPI1&#32;without&#32;connection</emphasis>
<anchor xml:id="_integration_2test__vfs_8c_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_integration_2test__vfs_8c_1a275e53ae2306013323ba05fad39168ab">PICO_SPI1_TX_PIN</link>,
<anchor xml:id="_integration_2test__vfs_8c_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_integration_2test__vfs_8c_1a5ba4c4aa36b4d4b343838d39ed4db240">PICO_SPI1_RX_PIN</link>,
<anchor xml:id="_integration_2test__vfs_8c_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_integration_2test__vfs_8c_1ab6e7784fe43df808a9103f9041af196a">PICO_SPI1_SCK_PIN</link>,
<anchor xml:id="_integration_2test__vfs_8c_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_integration_2test__vfs_8c_1abb61793f045373400bf402e12a351d74">PICO_SPI1_CSN_PIN</link>,
<anchor xml:id="_integration_2test__vfs_8c_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;10&#32;*&#32;MHZ,
<anchor xml:id="_integration_2test__vfs_8c_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00665"/>00665 &#32;&#32;&#32;&#32;assert(sd&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00666"/>00666 &#32;&#32;&#32;&#32;fat&#32;=&#32;<link linkend="_group__filesystem__fat_1ga5b7bf00bfce64f76dd5cba01901781c5">filesystem_fat_create</link>();
<anchor xml:id="_integration_2test__vfs_8c_source_1l00667"/>00667 &#32;&#32;&#32;&#32;assert(fat&#32;!=&#32;NULL);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00668"/>00668 &#32;&#32;&#32;&#32;setup(sd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00669"/>00669 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00670"/>00670 &#32;&#32;&#32;&#32;test_api_format_error(fat,&#32;sd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00671"/>00671 &#32;&#32;&#32;&#32;test_api_mount_error(fat,&#32;sd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00672"/>00672 
<anchor xml:id="_integration_2test__vfs_8c_source_1l00673"/>00673 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem__fat_1gac9daf020a57d62f1b2fe7eef5ce5847e">filesystem_fat_free</link>(fat);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00674"/>00674 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice__sd_1gada9c8624c3e06c29f3780fa5f77fb6d9">blockdevice_sd_free</link>(sd);
<anchor xml:id="_integration_2test__vfs_8c_source_1l00675"/>00675 }
</programlisting></section>
