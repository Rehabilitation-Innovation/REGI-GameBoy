<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_sd_8c_source" xml:lang="en-US">
<title>sd.c</title>
<indexterm><primary>lib/pico-vfs-REGI-Local/src/blockdevice/sd.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_sd_8c_source_1l00001"/>00001 <emphasis role="comment">/*&#32;Block&#32;device&#32;driver&#32;for&#32;SD&#32;and&#32;MMC&#32;cards&#32;via&#32;SPI</emphasis>
<anchor xml:id="_sd_8c_source_1l00002"/>00002 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_sd_8c_source_1l00003"/>00003 <emphasis role="comment">&#32;*&#32;Copyright&#32;2024,&#32;Hiroyuki&#32;OYAMA</emphasis>
<anchor xml:id="_sd_8c_source_1l00004"/>00004 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_sd_8c_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;SPDX-License-Identifier:&#32;BSD-3-Clause</emphasis>
<anchor xml:id="_sd_8c_source_1l00006"/>00006 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_sd_8c_source_1l00007"/>00007 <emphasis role="comment">&#32;*&#32;The&#32;source&#32;code&#32;was&#32;implemented&#32;with&#32;reference&#32;to&#32;the</emphasis>
<anchor xml:id="_sd_8c_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;[ARM&#32;Mbed&#32;OS](https://github.com/ARMmbed/mbed-os/blob/master/storage/blockdevice/COMPONENT_SD/source/SDBlockDevice.cpp);</emphasis>
<anchor xml:id="_sd_8c_source_1l00009"/>00009 <emphasis role="comment">&#32;*&#32;ARM&#32;Embed&#32;OS&#32;is&#32;licensed&#32;under&#32;the&#32;Apache&#32;2.0&#32;licence.</emphasis>
<anchor xml:id="_sd_8c_source_1l00010"/>00010 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_sd_8c_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
<anchor xml:id="_sd_8c_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&lt;errno.h&gt;</emphasis>
<anchor xml:id="_sd_8c_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_sd_8c_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
<anchor xml:id="_sd_8c_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&lt;inttypes.h&gt;</emphasis>
<anchor xml:id="_sd_8c_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&lt;hardware/clocks.h&gt;</emphasis>
<anchor xml:id="_sd_8c_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&lt;pico/mutex.h&gt;</emphasis>
<anchor xml:id="_sd_8c_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&lt;pico/stdlib.h&gt;</emphasis>
<anchor xml:id="_sd_8c_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_sd_8h">blockdevice/sd.h</link>&quot;</emphasis>
<anchor xml:id="_sd_8c_source_1l00020"/>00020 
<anchor xml:id="_sd_8c_source_1l00021"/><link linkend="_structblockdevice__sd__config__t">00021</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
<anchor xml:id="_sd_8c_source_1l00022"/><link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">00022</link> &#32;&#32;&#32;&#32;spi_inst_t*&#32;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>;
<anchor xml:id="_sd_8c_source_1l00023"/><link linkend="_structblockdevice__sd__config__t_1a4b1f87d959d02dd32e88faeb7bf11412">00023</link> &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_structblockdevice__sd__config__t_1a4b1f87d959d02dd32e88faeb7bf11412">mosi</link>;&#32;<emphasis role="comment">//&#32;PICO_DEFAULT_SPI_TX_PIN&#32;&#32;pin&#32;19</emphasis>
<anchor xml:id="_sd_8c_source_1l00024"/><link linkend="_structblockdevice__sd__config__t_1ae8df6ecd310556e45f8e9d10b29b8512">00024</link> &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_structblockdevice__sd__config__t_1ae8df6ecd310556e45f8e9d10b29b8512">miso</link>;&#32;<emphasis role="comment">//&#32;PICO_DEFAULT_SPI_RX_PIN&#32;&#32;pin&#32;16</emphasis>
<anchor xml:id="_sd_8c_source_1l00025"/><link linkend="_structblockdevice__sd__config__t_1a83bc8190d58c50dc4696e347f6d8b601">00025</link> &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_structblockdevice__sd__config__t_1a83bc8190d58c50dc4696e347f6d8b601">sclk</link>;&#32;<emphasis role="comment">//&#32;PICO_DEFAULT_SPI_SCK_PIN&#32;pin&#32;18</emphasis>
<anchor xml:id="_sd_8c_source_1l00026"/><link linkend="_structblockdevice__sd__config__t_1af0a9de7d996bcd6711ab7244e2db17d6">00026</link> &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_structblockdevice__sd__config__t_1af0a9de7d996bcd6711ab7244e2db17d6">cs</link>;&#32;&#32;&#32;<emphasis role="comment">//&#32;PICO_DEFAULT_SPI_CSN_PIN&#32;pin&#32;17</emphasis>
<anchor xml:id="_sd_8c_source_1l00027"/><link linkend="_structblockdevice__sd__config__t_1af7854657ebfe51492086bc83e74d15a8">00027</link> &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_structblockdevice__sd__config__t_1af7854657ebfe51492086bc83e74d15a8">hz</link>;&#32;&#32;<emphasis role="comment">//&#32;CONF_SD_TRX_FREQUENCY</emphasis>
<anchor xml:id="_sd_8c_source_1l00028"/><link linkend="_structblockdevice__sd__config__t_1ae7d08bfdf6ccc6ec15fef0f38c155794">00028</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structblockdevice__sd__config__t_1ae7d08bfdf6ccc6ec15fef0f38c155794">enable_crc</link>;
<anchor xml:id="_sd_8c_source_1l00029"/><link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">00029</link> &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>;
<anchor xml:id="_sd_8c_source_1l00030"/><link linkend="_structblockdevice__sd__config__t_1a4ba68242a9f77a5933812c9d46feabfe">00030</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structblockdevice__sd__config__t_1a4ba68242a9f77a5933812c9d46feabfe">is_initialized</link>;
<anchor xml:id="_sd_8c_source_1l00031"/><link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">00031</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>;
<anchor xml:id="_sd_8c_source_1l00032"/><link linkend="_structblockdevice__sd__config__t_1afcffbc4cfb38671d709c492b08764f59">00032</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_structblockdevice__sd__config__t_1afcffbc4cfb38671d709c492b08764f59">erase_size</link>;
<anchor xml:id="_sd_8c_source_1l00033"/><link linkend="_structblockdevice__sd__config__t_1aad8740c5c8c25b8e830654989112fc88">00033</link> &#32;&#32;&#32;&#32;uint64_t&#32;<link linkend="_structblockdevice__sd__config__t_1aad8740c5c8c25b8e830654989112fc88">total_sectors</link>;
<anchor xml:id="_sd_8c_source_1l00034"/><link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">00034</link> &#32;&#32;&#32;&#32;mutex_t&#32;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>;
<anchor xml:id="_sd_8c_source_1l00035"/>00035 }&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>;
<anchor xml:id="_sd_8c_source_1l00036"/>00036 
<anchor xml:id="_sd_8c_source_1l00037"/>00037 <emphasis role="preprocessor">#ifndef&#32;CONF_SD_CMD_TIMEOUT</emphasis>
<anchor xml:id="_sd_8c_source_1l00038"/><link linkend="_sd_8c_1a80cf6b88b88a1391eff989ff42067487">00038</link> <emphasis role="preprocessor">#define&#32;CONF_SD_CMD_TIMEOUT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;5000&#32;&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00039"/>00039 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_sd_8c_source_1l00040"/>00040 
<anchor xml:id="_sd_8c_source_1l00041"/>00041 <emphasis role="preprocessor">#ifndef&#32;CONF_SD_CMD0_IDLE_STATE_RETRIES</emphasis>
<anchor xml:id="_sd_8c_source_1l00042"/><link linkend="_sd_8c_1a98174285b120b92f2a9c1e5768a176b3">00042</link> <emphasis role="preprocessor">#define&#32;CONF_SD_CMD0_IDLE_STATE_RETRIES&#32;&#32;&#32;5&#32;&#32;</emphasis><emphasis role="comment">//&#32;Number&#32;of&#32;retries&#32;for&#32;sending&#32;CMD0</emphasis>
<anchor xml:id="_sd_8c_source_1l00043"/>00043 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_sd_8c_source_1l00044"/>00044 
<anchor xml:id="_sd_8c_source_1l00045"/><link linkend="_sd_8c_1a717a8dd1956ddc8608e30d577a0efa77">00045</link> <emphasis role="preprocessor">#define&#32;SD_COMMAND_TIMEOUT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CONF_SD_CMD_TIMEOUT</emphasis>
<anchor xml:id="_sd_8c_source_1l00046"/><link linkend="_sd_8c_1a190b6bcf9ab4d85b71e05bd20955758a">00046</link> <emphasis role="preprocessor">#define&#32;SD_CMD0_GO_IDLE_STATE_RETRIES&#32;&#32;&#32;&#32;&#32;CONF_SD_CMD0_IDLE_STATE_RETRIES</emphasis>
<anchor xml:id="_sd_8c_source_1l00047"/><link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">00047</link> <emphasis role="preprocessor">#define&#32;SD_DBG&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00048"/>00048 
<anchor xml:id="_sd_8c_source_1l00049"/><link linkend="_sd_8c_1a6379b6ca92270ced3e83ca3c1f5dc524">00049</link> <emphasis role="preprocessor">#define&#32;SD_BLOCK_DEVICE_ERROR_WOULD_BLOCK&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5001&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00050"/><link linkend="_sd_8c_1adcac3a18f2010c23804be1dddf7f5ba2">00050</link> <emphasis role="preprocessor">#define&#32;SD_BLOCK_DEVICE_ERROR_UNSUPPORTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5002&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00051"/><link linkend="_sd_8c_1a7204a59a7a908a0b8559c4868129f4c4">00051</link> <emphasis role="preprocessor">#define&#32;SD_BLOCK_DEVICE_ERROR_PARAMETER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5003&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00052"/><link linkend="_sd_8c_1a6e13316f0b76a30fd38db3f0d84e58d0">00052</link> <emphasis role="preprocessor">#define&#32;SD_BLOCK_DEVICE_ERROR_NO_INIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5004&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00053"/><link linkend="_sd_8c_1aafa7734f02804b218f71f2a988111b15">00053</link> <emphasis role="preprocessor">#define&#32;SD_BLOCK_DEVICE_ERROR_NO_DEVICE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5005&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00054"/><link linkend="_sd_8c_1a2ba3557e527c48137703786c54cf271f">00054</link> <emphasis role="preprocessor">#define&#32;SD_BLOCK_DEVICE_ERROR_WRITE_PROTECTED&#32;&#32;&#32;&#32;-5006&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00055"/><link linkend="_sd_8c_1afc41dc1dffb1f500b7a3f87e3de10f5c">00055</link> <emphasis role="preprocessor">#define&#32;SD_BLOCK_DEVICE_ERROR_UNUSABLE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5007&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00056"/><link linkend="_sd_8c_1a42fdf7470707e7b523c36bac1f15d98a">00056</link> <emphasis role="preprocessor">#define&#32;SD_BLOCK_DEVICE_ERROR_NO_RESPONSE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5008&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00057"/><link linkend="_sd_8c_1a07208e021a15e0c2b5425e3355c7c2a9">00057</link> <emphasis role="preprocessor">#define&#32;SD_BLOCK_DEVICE_ERROR_CRC&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5009&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00058"/><link linkend="_sd_8c_1a6a546df19eddae71eb0ccf0e62913143">00058</link> <emphasis role="preprocessor">#define&#32;SD_BLOCK_DEVICE_ERROR_ERASE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5010&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00059"/><link linkend="_sd_8c_1a0d74153e7cf51464b90cbc47cbc83b2e">00059</link> <emphasis role="preprocessor">#define&#32;SD_BLOCK_DEVICE_ERROR_WRITE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-5011&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00060"/>00060 
<anchor xml:id="_sd_8c_source_1l00061"/>00061 
<anchor xml:id="_sd_8c_source_1l00062"/><link linkend="_sd_8c_1ae29c04ecc4f5ee4f41694ac4d8a2fdd9">00062</link> <emphasis role="preprocessor">#define&#32;BLOCK_SIZE_HC&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;512&#32;&#32;&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00063"/><link linkend="_sd_8c_1acc071acf45c59c2a107bf01bdbd52b8a">00063</link> <emphasis role="preprocessor">#define&#32;SPI_CMD(x)&#32;(0x40&#32;|&#32;(x&#32;&amp;&#32;0x3f))</emphasis>
<anchor xml:id="_sd_8c_source_1l00064"/>00064 
<anchor xml:id="_sd_8c_source_1l00065"/>00065 <emphasis role="comment">/*&#32;R1&#32;Response&#32;Format&#32;*/</emphasis>
<anchor xml:id="_sd_8c_source_1l00066"/><link linkend="_sd_8c_1a9d214c6916e6ca7f6e0ef1f52255a9a4">00066</link> <emphasis role="preprocessor">#define&#32;R1_NO_RESPONSE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0xFF)</emphasis>
<anchor xml:id="_sd_8c_source_1l00067"/><link linkend="_sd_8c_1afa1084b6c1e98accf323f9eecb228db8">00067</link> <emphasis role="preprocessor">#define&#32;R1_RESPONSE_RECV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x80)</emphasis>
<anchor xml:id="_sd_8c_source_1l00068"/><link linkend="_sd_8c_1a7adb3673fe75b9397a1f241533e3f08a">00068</link> <emphasis role="preprocessor">#define&#32;R1_IDLE_STATE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(1&#32;&lt;&lt;&#32;0)</emphasis>
<anchor xml:id="_sd_8c_source_1l00069"/><link linkend="_sd_8c_1a4598fdd1bd123e39ca45cdcd30f2a0bb">00069</link> <emphasis role="preprocessor">#define&#32;R1_ERASE_RESET&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(1&#32;&lt;&lt;&#32;1)</emphasis>
<anchor xml:id="_sd_8c_source_1l00070"/><link linkend="_sd_8c_1a317730607b37d51a7a470e8f33fa0e4d">00070</link> <emphasis role="preprocessor">#define&#32;R1_ILLEGAL_COMMAND&#32;&#32;&#32;&#32;&#32;&#32;(1&#32;&lt;&lt;&#32;2)</emphasis>
<anchor xml:id="_sd_8c_source_1l00071"/><link linkend="_sd_8c_1ac9f596336ebcb43f5c9e314ad697a8e8">00071</link> <emphasis role="preprocessor">#define&#32;R1_COM_CRC_ERROR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(1&#32;&lt;&lt;&#32;3)</emphasis>
<anchor xml:id="_sd_8c_source_1l00072"/><link linkend="_sd_8c_1a310cf4b26d5025bc4e0ac18b7dfd968a">00072</link> <emphasis role="preprocessor">#define&#32;R1_ERASE_SEQUENCE_ERROR&#32;(1&#32;&lt;&lt;&#32;4)</emphasis>
<anchor xml:id="_sd_8c_source_1l00073"/><link linkend="_sd_8c_1a84256fd9d0fbf84f1c8fabd17d3f7adc">00073</link> <emphasis role="preprocessor">#define&#32;R1_ADDRESS_ERROR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(1&#32;&lt;&lt;&#32;5)</emphasis>
<anchor xml:id="_sd_8c_source_1l00074"/><link linkend="_sd_8c_1afaf04d83e2c97907a519100efe9c8d7c">00074</link> <emphasis role="preprocessor">#define&#32;R1_PARAMETER_ERROR&#32;&#32;&#32;&#32;&#32;&#32;(1&#32;&lt;&lt;&#32;6)</emphasis>
<anchor xml:id="_sd_8c_source_1l00075"/>00075 
<anchor xml:id="_sd_8c_source_1l00076"/>00076 <emphasis role="comment">/*&#32;R3&#32;Response&#32;:&#32;OCR&#32;Register&#32;*/</emphasis>
<anchor xml:id="_sd_8c_source_1l00077"/><link linkend="_sd_8c_1ace5b9334abefe4920fb519a5957b5cc3">00077</link> <emphasis role="preprocessor">#define&#32;OCR_HCS_CCS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x1&#32;&lt;&lt;&#32;30)</emphasis>
<anchor xml:id="_sd_8c_source_1l00078"/><link linkend="_sd_8c_1a34b06744e5bb1b37b90d671dff109fd2">00078</link> <emphasis role="preprocessor">#define&#32;OCR_LOW_VOLTAGE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x01&#32;&lt;&lt;&#32;24)</emphasis>
<anchor xml:id="_sd_8c_source_1l00079"/><link linkend="_sd_8c_1a9242e2740476a5965ace0b1276c9a24d">00079</link> <emphasis role="preprocessor">#define&#32;OCR_3_3V&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x1&#32;&lt;&lt;&#32;20)</emphasis>
<anchor xml:id="_sd_8c_source_1l00080"/>00080 
<anchor xml:id="_sd_8c_source_1l00081"/>00081 <emphasis role="comment">/*&#32;R7&#32;response&#32;pattern&#32;for&#32;CMD8&#32;*/</emphasis>
<anchor xml:id="_sd_8c_source_1l00082"/><link linkend="_sd_8c_1ac77e3b44a84e04fd34a6084e23d7a67f">00082</link> <emphasis role="preprocessor">#define&#32;CMD8_PATTERN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0xAA)</emphasis>
<anchor xml:id="_sd_8c_source_1l00083"/>00083 
<anchor xml:id="_sd_8c_source_1l00084"/>00084 <emphasis role="comment">/*&#32;Control&#32;Tokens&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_sd_8c_source_1l00085"/><link linkend="_sd_8c_1a0e561b17b7546b82dd822376f661c917">00085</link> <emphasis role="preprocessor">#define&#32;SPI_DATA_RESPONSE_MASK&#32;&#32;&#32;(0x1F)</emphasis>
<anchor xml:id="_sd_8c_source_1l00086"/><link linkend="_sd_8c_1adf4c36356a3259c4686dd6e534f3c75c">00086</link> <emphasis role="preprocessor">#define&#32;SPI_DATA_ACCEPTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x05)</emphasis>
<anchor xml:id="_sd_8c_source_1l00087"/><link linkend="_sd_8c_1a0ab76bad7e8faa76f8bad16e8de90ed6">00087</link> <emphasis role="preprocessor">#define&#32;SPI_DATA_CRC_ERROR&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x0B)</emphasis>
<anchor xml:id="_sd_8c_source_1l00088"/><link linkend="_sd_8c_1ade0c4048b2873fc3aab508f2caeac46c">00088</link> <emphasis role="preprocessor">#define&#32;SPI_DATA_WRITE_ERROR&#32;&#32;&#32;&#32;&#32;(0x0D)</emphasis>
<anchor xml:id="_sd_8c_source_1l00089"/><link linkend="_sd_8c_1a16316bd35058685a310b2782003f6461">00089</link> <emphasis role="preprocessor">#define&#32;SPI_START_BLOCK&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0xFE)&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00090"/><link linkend="_sd_8c_1adaa72ab93c9e5bdf1176098cb9c2c4a0">00090</link> <emphasis role="preprocessor">#define&#32;SPI_START_BLK_MUL_WRITE&#32;&#32;(0xFC)&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00091"/><link linkend="_sd_8c_1a0dd35214020ca96c70838c6e2d206cc6">00091</link> <emphasis role="preprocessor">#define&#32;SPI_STOP_TRAN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0xFD)&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00092"/>00092 
<anchor xml:id="_sd_8c_source_1l00093"/><link linkend="_sd_8c_1ac75d865e276033635f3fecc5c62b727c">00093</link> <emphasis role="preprocessor">#define&#32;SPI_DATA_READ_ERROR_MASK&#32;(0xF)&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00094"/><link linkend="_sd_8c_1a975383e5fd06d3994775d34a2a12e340">00094</link> <emphasis role="preprocessor">#define&#32;SPI_READ_ERROR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x1&#32;&lt;&lt;&#32;0)&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00095"/><link linkend="_sd_8c_1ad6333d33ce78082f55551b1cbf0e783a">00095</link> <emphasis role="preprocessor">#define&#32;SPI_READ_ERROR_CC&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x1&#32;&lt;&lt;&#32;1)&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00096"/><link linkend="_sd_8c_1a6def03ff2e8d35d7bf4fe37ba5894d48">00096</link> <emphasis role="preprocessor">#define&#32;SPI_READ_ERROR_ECC_C&#32;&#32;&#32;&#32;&#32;(0x1&#32;&lt;&lt;&#32;2)&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00097"/><link linkend="_sd_8c_1a2243216470168aba1fd33f3363fed215">00097</link> <emphasis role="preprocessor">#define&#32;SPI_READ_ERROR_OFR&#32;&#32;&#32;&#32;&#32;&#32;&#32;(0x1&#32;&lt;&lt;&#32;3)&#32;&#32;</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_sd_8c_source_1l00098"/>00098 
<anchor xml:id="_sd_8c_source_1l00099"/>00099 
<anchor xml:id="_sd_8c_source_1l00100"/><link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74">00100</link> <emphasis role="keyword">enum</emphasis>&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74">sdcard_type</link>&#32;{
<anchor xml:id="_sd_8c_source_1l00101"/><link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a5768fc056208e1ae24594a5995a94290">00101</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a5768fc056208e1ae24594a5995a94290">SDCARD_NONE</link>&#32;=&#32;0,
<anchor xml:id="_sd_8c_source_1l00102"/><link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a4eb0b19753b7d178f928445d207de38e">00102</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a4eb0b19753b7d178f928445d207de38e">SDCARD_V1</link>&#32;=&#32;1,
<anchor xml:id="_sd_8c_source_1l00103"/><link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a3850bb2d294863ab82502f429fd30c09">00103</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a3850bb2d294863ab82502f429fd30c09">SDCARD_V2</link>&#32;=&#32;2,
<anchor xml:id="_sd_8c_source_1l00104"/><link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a7ada6417d63a99e3745b744c2d8c0dba">00104</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a7ada6417d63a99e3745b744c2d8c0dba">SDCARD_V2HC</link>&#32;=&#32;3,
<anchor xml:id="_sd_8c_source_1l00105"/><link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a531e2d8187a657aeb5677e80000fc6f5">00105</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a531e2d8187a657aeb5677e80000fc6f5">CARD_UNKNOWN</link>&#32;=&#32;4,
<anchor xml:id="_sd_8c_source_1l00106"/>00106 };
<anchor xml:id="_sd_8c_source_1l00107"/>00107 
<anchor xml:id="_sd_8c_source_1l00108"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6f">00108</link> <emphasis role="keyword">enum</emphasis>&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6f">cmd_supported</link>&#32;{
<anchor xml:id="_sd_8c_source_1l00109"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa6b16dc9538b6f7288a025222e1cc8e6b">00109</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa6b16dc9538b6f7288a025222e1cc8e6b">CMD_NOT_SUPPORTED</link>&#32;=&#32;-1,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00110"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fac0d49d0be913ea0759b60172648bca63">00110</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fac0d49d0be913ea0759b60172648bca63">CMD0_GO_IDLE_STATE</link>&#32;=&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00111"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa687d0215f942c29c67ed8e116ba65c42">00111</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa687d0215f942c29c67ed8e116ba65c42">CMD1_SEND_OP_COND</link>&#32;=&#32;1,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00112"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa2a8ad2f917bc227d95d29a0f92b62340">00112</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa2a8ad2f917bc227d95d29a0f92b62340">CMD6_SWITCH_FUNC</link>&#32;=&#32;6,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00113"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa6b423cd241fe20485d3f14f0fb9926f4">00113</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa6b423cd241fe20485d3f14f0fb9926f4">CMD8_SEND_IF_COND</link>&#32;=&#32;8,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00114"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fac94c340b43f6e72a115bf05aee14a0c5">00114</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fac94c340b43f6e72a115bf05aee14a0c5">CMD9_SEND_CSD</link>&#32;=&#32;9,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00115"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fab0bed31cbc5377aeafbe82d456f105b4">00115</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fab0bed31cbc5377aeafbe82d456f105b4">CMD10_SEND_CID</link>&#32;=&#32;10,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00116"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa50a1b06fbfbfac3e88777e375713194b">00116</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa50a1b06fbfbfac3e88777e375713194b">CMD12_STOP_TRANSMISSION</link>&#32;=&#32;12,&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00117"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fac57a11a2b3cd582a797f5b33ecdca429">00117</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fac57a11a2b3cd582a797f5b33ecdca429">CMD13_SEND_STATUS</link>&#32;=&#32;13,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00118"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa69b3ca3db78b1f657a5958a36dab2d1e">00118</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa69b3ca3db78b1f657a5958a36dab2d1e">CMD16_SET_BLOCKLEN</link>&#32;=&#32;16,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00119"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faa8ea642c880b96150fe8d7387b3c869f">00119</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faa8ea642c880b96150fe8d7387b3c869f">CMD17_READ_SINGLE_BLOCK</link>&#32;=&#32;17,&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00120"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa0425449a99e80e959b0376b9facbf86c">00120</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa0425449a99e80e959b0376b9facbf86c">CMD18_READ_MULTIPLE_BLOCK</link>&#32;=&#32;18,&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00122"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6facaf0335a4dc52fec2cd69fa926c240d3">00122</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6facaf0335a4dc52fec2cd69fa926c240d3">CMD24_WRITE_BLOCK</link>&#32;=&#32;24,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00123"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fafaaf5657d5198f338bb555db8dbe0977">00123</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fafaaf5657d5198f338bb555db8dbe0977">CMD25_WRITE_MULTIPLE_BLOCK</link>&#32;=&#32;25,&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00125"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faf8a2ea974333f1b8b282e5fe1a78d452">00125</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faf8a2ea974333f1b8b282e5fe1a78d452">CMD27_PROGRAM_CSD</link>&#32;=&#32;27,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00126"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa42493da8336966eedb155f9fd5078725">00126</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa42493da8336966eedb155f9fd5078725">CMD32_ERASE_WR_BLK_START_ADDR</link>&#32;=&#32;32,&#32;
<anchor xml:id="_sd_8c_source_1l00128"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faab58521e43613f07685f8c125e53cc38">00128</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faab58521e43613f07685f8c125e53cc38">CMD33_ERASE_WR_BLK_END_ADDR</link>&#32;=&#32;33,&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00130"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faa179ed73c43cdbb988f56eeea98a0c64">00130</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faa179ed73c43cdbb988f56eeea98a0c64">CMD38_ERASE</link>&#32;=&#32;38,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00131"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fafe267879cd620c14cf8909eef99fd1c0">00131</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fafe267879cd620c14cf8909eef99fd1c0">CMD55_APP_CMD</link>&#32;=&#32;55,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00132"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa60ed3ef8573485f4d9b7b18aace3967a">00132</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa60ed3ef8573485f4d9b7b18aace3967a">CMD56_GEN_CMD</link>&#32;=&#32;56,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00133"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faab2940925eb3b338f558bdd9012d2c98">00133</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faab2940925eb3b338f558bdd9012d2c98">CMD58_READ_OCR</link>&#32;=&#32;58,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00134"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa82dd3da0189cad047996069a968cb3b7">00134</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa82dd3da0189cad047996069a968cb3b7">CMD59_CRC_ON_OFF</link>&#32;=&#32;59,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_sd_8c_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;App&#32;Commands</emphasis>
<anchor xml:id="_sd_8c_source_1l00136"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faa7ccea821c49cb23280b5954f0b6f718">00136</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faa7ccea821c49cb23280b5954f0b6f718">ACMD6_SET_BUS_WIDTH</link>&#32;=&#32;6,
<anchor xml:id="_sd_8c_source_1l00137"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fad00bb3f3cccda27fc142424dcbfef81b">00137</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fad00bb3f3cccda27fc142424dcbfef81b">ACMD13_SD_STATUS</link>&#32;=&#32;13,
<anchor xml:id="_sd_8c_source_1l00138"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa33335afba15c34e82ff7d9bf267ad577">00138</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa33335afba15c34e82ff7d9bf267ad577">ACMD22_SEND_NUM_WR_BLOCKS</link>&#32;=&#32;22,
<anchor xml:id="_sd_8c_source_1l00139"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa176498dc1b43efc905fc638ace570d5d">00139</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa176498dc1b43efc905fc638ace570d5d">ACMD23_SET_WR_BLK_ERASE_COUNT</link>&#32;=&#32;23,
<anchor xml:id="_sd_8c_source_1l00140"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fabd6a8e1e93a30cdb68240a81ac8925f4">00140</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fabd6a8e1e93a30cdb68240a81ac8925f4">ACMD41_SD_SEND_OP_COND</link>&#32;=&#32;41,
<anchor xml:id="_sd_8c_source_1l00141"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa025b3258a75b77a9f94815517674d989">00141</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa025b3258a75b77a9f94815517674d989">ACMD42_SET_CLR_CARD_DETECT</link>&#32;=&#32;42,
<anchor xml:id="_sd_8c_source_1l00142"/><link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa0fbb6c92dd6da700caaa3829a43720a5">00142</link> &#32;&#32;&#32;&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa0fbb6c92dd6da700caaa3829a43720a5">ACMD51_SEND_SCR</link>&#32;=&#32;51,
<anchor xml:id="_sd_8c_source_1l00143"/>00143 };
<anchor xml:id="_sd_8c_source_1l00144"/>00144 
<anchor xml:id="_sd_8c_source_1l00145"/><link linkend="_sd_8c_1aebdc7d8ca8e25ed8efc90bb88ef7ef5b">00145</link> <emphasis role="preprocessor">#define&#32;PACKET_SIZE&#32;&#32;&#32;6&#32;&#32;</emphasis><emphasis role="comment">//&#32;SD&#32;Packet&#32;size&#32;CMD+ARG+CRC</emphasis>
<anchor xml:id="_sd_8c_source_1l00146"/>00146 
<anchor xml:id="_sd_8c_source_1l00147"/>00147 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;DEVICE_NAME[]&#32;=&#32;<emphasis role="stringliteral">&quot;sd&quot;</emphasis>;
<anchor xml:id="_sd_8c_source_1l00148"/>00148 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;block_size&#32;=&#32;512;
<anchor xml:id="_sd_8c_source_1l00149"/>00149 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;SPI_FILL_CHAR&#32;=&#32;0xFF;
<anchor xml:id="_sd_8c_source_1l00150"/>00150 
<anchor xml:id="_sd_8c_source_1l00151"/>00151 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;CRC7_TABLE[256]&#32;=&#32;{
<anchor xml:id="_sd_8c_source_1l00152"/>00152 &#32;&#32;&#32;&#32;0x00,&#32;0x09,&#32;0x12,&#32;0x1B,&#32;0x24,&#32;0x2D,&#32;0x36,&#32;0x3F,
<anchor xml:id="_sd_8c_source_1l00153"/>00153 &#32;&#32;&#32;&#32;0x48,&#32;0x41,&#32;0x5A,&#32;0x53,&#32;0x6C,&#32;0x65,&#32;0x7E,&#32;0x77,
<anchor xml:id="_sd_8c_source_1l00154"/>00154 &#32;&#32;&#32;&#32;0x19,&#32;0x10,&#32;0x0B,&#32;0x02,&#32;0x3D,&#32;0x34,&#32;0x2F,&#32;0x26,
<anchor xml:id="_sd_8c_source_1l00155"/>00155 &#32;&#32;&#32;&#32;0x51,&#32;0x58,&#32;0x43,&#32;0x4A,&#32;0x75,&#32;0x7C,&#32;0x67,&#32;0x6E,
<anchor xml:id="_sd_8c_source_1l00156"/>00156 &#32;&#32;&#32;&#32;0x32,&#32;0x3B,&#32;0x20,&#32;0x29,&#32;0x16,&#32;0x1F,&#32;0x04,&#32;0x0D,
<anchor xml:id="_sd_8c_source_1l00157"/>00157 &#32;&#32;&#32;&#32;0x7A,&#32;0x73,&#32;0x68,&#32;0x61,&#32;0x5E,&#32;0x57,&#32;0x4C,&#32;0x45,
<anchor xml:id="_sd_8c_source_1l00158"/>00158 &#32;&#32;&#32;&#32;0x2B,&#32;0x22,&#32;0x39,&#32;0x30,&#32;0x0F,&#32;0x06,&#32;0x1D,&#32;0x14,
<anchor xml:id="_sd_8c_source_1l00159"/>00159 &#32;&#32;&#32;&#32;0x63,&#32;0x6A,&#32;0x71,&#32;0x78,&#32;0x47,&#32;0x4E,&#32;0x55,&#32;0x5C,
<anchor xml:id="_sd_8c_source_1l00160"/>00160 &#32;&#32;&#32;&#32;0x64,&#32;0x6D,&#32;0x76,&#32;0x7F,&#32;0x40,&#32;0x49,&#32;0x52,&#32;0x5B,
<anchor xml:id="_sd_8c_source_1l00161"/>00161 &#32;&#32;&#32;&#32;0x2C,&#32;0x25,&#32;0x3E,&#32;0x37,&#32;0x08,&#32;0x01,&#32;0x1A,&#32;0x13,
<anchor xml:id="_sd_8c_source_1l00162"/>00162 &#32;&#32;&#32;&#32;0x7D,&#32;0x74,&#32;0x6F,&#32;0x66,&#32;0x59,&#32;0x50,&#32;0x4B,&#32;0x42,
<anchor xml:id="_sd_8c_source_1l00163"/>00163 &#32;&#32;&#32;&#32;0x35,&#32;0x3C,&#32;0x27,&#32;0x2E,&#32;0x11,&#32;0x18,&#32;0x03,&#32;0x0A,
<anchor xml:id="_sd_8c_source_1l00164"/>00164 &#32;&#32;&#32;&#32;0x56,&#32;0x5F,&#32;0x44,&#32;0x4D,&#32;0x72,&#32;0x7B,&#32;0x60,&#32;0x69,
<anchor xml:id="_sd_8c_source_1l00165"/>00165 &#32;&#32;&#32;&#32;0x1E,&#32;0x17,&#32;0x0C,&#32;0x05,&#32;0x3A,&#32;0x33,&#32;0x28,&#32;0x21,
<anchor xml:id="_sd_8c_source_1l00166"/>00166 &#32;&#32;&#32;&#32;0x4F,&#32;0x46,&#32;0x5D,&#32;0x54,&#32;0x6B,&#32;0x62,&#32;0x79,&#32;0x70,
<anchor xml:id="_sd_8c_source_1l00167"/>00167 &#32;&#32;&#32;&#32;0x07,&#32;0x0E,&#32;0x15,&#32;0x1C,&#32;0x23,&#32;0x2A,&#32;0x31,&#32;0x38,
<anchor xml:id="_sd_8c_source_1l00168"/>00168 &#32;&#32;&#32;&#32;0x41,&#32;0x48,&#32;0x53,&#32;0x5A,&#32;0x65,&#32;0x6C,&#32;0x77,&#32;0x7E,
<anchor xml:id="_sd_8c_source_1l00169"/>00169 &#32;&#32;&#32;&#32;0x09,&#32;0x00,&#32;0x1B,&#32;0x12,&#32;0x2D,&#32;0x24,&#32;0x3F,&#32;0x36,
<anchor xml:id="_sd_8c_source_1l00170"/>00170 &#32;&#32;&#32;&#32;0x58,&#32;0x51,&#32;0x4A,&#32;0x43,&#32;0x7C,&#32;0x75,&#32;0x6E,&#32;0x67,
<anchor xml:id="_sd_8c_source_1l00171"/>00171 &#32;&#32;&#32;&#32;0x10,&#32;0x19,&#32;0x02,&#32;0x0B,&#32;0x34,&#32;0x3D,&#32;0x26,&#32;0x2F,
<anchor xml:id="_sd_8c_source_1l00172"/>00172 &#32;&#32;&#32;&#32;0x73,&#32;0x7A,&#32;0x61,&#32;0x68,&#32;0x57,&#32;0x5E,&#32;0x45,&#32;0x4C,
<anchor xml:id="_sd_8c_source_1l00173"/>00173 &#32;&#32;&#32;&#32;0x3B,&#32;0x32,&#32;0x29,&#32;0x20,&#32;0x1F,&#32;0x16,&#32;0x0D,&#32;0x04,
<anchor xml:id="_sd_8c_source_1l00174"/>00174 &#32;&#32;&#32;&#32;0x6A,&#32;0x63,&#32;0x78,&#32;0x71,&#32;0x4E,&#32;0x47,&#32;0x5C,&#32;0x55,
<anchor xml:id="_sd_8c_source_1l00175"/>00175 &#32;&#32;&#32;&#32;0x22,&#32;0x2B,&#32;0x30,&#32;0x39,&#32;0x06,&#32;0x0F,&#32;0x14,&#32;0x1D,
<anchor xml:id="_sd_8c_source_1l00176"/>00176 &#32;&#32;&#32;&#32;0x25,&#32;0x2C,&#32;0x37,&#32;0x3E,&#32;0x01,&#32;0x08,&#32;0x13,&#32;0x1A,
<anchor xml:id="_sd_8c_source_1l00177"/>00177 &#32;&#32;&#32;&#32;0x6D,&#32;0x64,&#32;0x7F,&#32;0x76,&#32;0x49,&#32;0x40,&#32;0x5B,&#32;0x52,
<anchor xml:id="_sd_8c_source_1l00178"/>00178 &#32;&#32;&#32;&#32;0x3C,&#32;0x35,&#32;0x2E,&#32;0x27,&#32;0x18,&#32;0x11,&#32;0x0A,&#32;0x03,
<anchor xml:id="_sd_8c_source_1l00179"/>00179 &#32;&#32;&#32;&#32;0x74,&#32;0x7D,&#32;0x66,&#32;0x6F,&#32;0x50,&#32;0x59,&#32;0x42,&#32;0x4B,
<anchor xml:id="_sd_8c_source_1l00180"/>00180 &#32;&#32;&#32;&#32;0x17,&#32;0x1E,&#32;0x05,&#32;0x0C,&#32;0x33,&#32;0x3A,&#32;0x21,&#32;0x28,
<anchor xml:id="_sd_8c_source_1l00181"/>00181 &#32;&#32;&#32;&#32;0x5F,&#32;0x56,&#32;0x4D,&#32;0x44,&#32;0x7B,&#32;0x72,&#32;0x69,&#32;0x60,
<anchor xml:id="_sd_8c_source_1l00182"/>00182 &#32;&#32;&#32;&#32;0x0E,&#32;0x07,&#32;0x1C,&#32;0x15,&#32;0x2A,&#32;0x23,&#32;0x38,&#32;0x31,
<anchor xml:id="_sd_8c_source_1l00183"/>00183 &#32;&#32;&#32;&#32;0x46,&#32;0x4F,&#32;0x54,&#32;0x5D,&#32;0x62,&#32;0x6B,&#32;0x70,&#32;0x79
<anchor xml:id="_sd_8c_source_1l00184"/>00184 };
<anchor xml:id="_sd_8c_source_1l00185"/>00185 
<anchor xml:id="_sd_8c_source_1l00186"/>00186 <emphasis role="keyword">static</emphasis>&#32;uint8_t&#32;_crc7(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;buffer,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length)&#32;{
<anchor xml:id="_sd_8c_source_1l00187"/>00187 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;b&#32;=&#32;buffer;
<anchor xml:id="_sd_8c_source_1l00188"/>00188 &#32;&#32;&#32;&#32;uint8_t&#32;crc&#32;=&#32;0;
<anchor xml:id="_sd_8c_source_1l00189"/>00189 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;length;&#32;i++)
<anchor xml:id="_sd_8c_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crc&#32;=&#32;CRC7_TABLE[(crc&#32;&lt;&lt;&#32;1)&#32;^&#32;b[i]];
<anchor xml:id="_sd_8c_source_1l00191"/>00191 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;crc;
<anchor xml:id="_sd_8c_source_1l00192"/>00192 }
<anchor xml:id="_sd_8c_source_1l00193"/>00193 
<anchor xml:id="_sd_8c_source_1l00194"/>00194 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint16_t&#32;CRC16_TABLE[256]&#32;=&#32;{
<anchor xml:id="_sd_8c_source_1l00195"/>00195 &#32;&#32;&#32;&#32;0x0000,&#32;0x1021,&#32;0x2042,&#32;0x3063,&#32;0x4084,&#32;0x50A5,&#32;0x60C6,&#32;0x70E7,
<anchor xml:id="_sd_8c_source_1l00196"/>00196 &#32;&#32;&#32;&#32;0x8108,&#32;0x9129,&#32;0xA14A,&#32;0xB16B,&#32;0xC18C,&#32;0xD1AD,&#32;0xE1CE,&#32;0xF1EF,
<anchor xml:id="_sd_8c_source_1l00197"/>00197 &#32;&#32;&#32;&#32;0x1231,&#32;0x0210,&#32;0x3273,&#32;0x2252,&#32;0x52B5,&#32;0x4294,&#32;0x72F7,&#32;0x62D6,
<anchor xml:id="_sd_8c_source_1l00198"/>00198 &#32;&#32;&#32;&#32;0x9339,&#32;0x8318,&#32;0xB37B,&#32;0xA35A,&#32;0xD3BD,&#32;0xC39C,&#32;0xF3FF,&#32;0xE3DE,
<anchor xml:id="_sd_8c_source_1l00199"/>00199 &#32;&#32;&#32;&#32;0x2462,&#32;0x3443,&#32;0x0420,&#32;0x1401,&#32;0x64E6,&#32;0x74C7,&#32;0x44A4,&#32;0x5485,
<anchor xml:id="_sd_8c_source_1l00200"/>00200 &#32;&#32;&#32;&#32;0xA56A,&#32;0xB54B,&#32;0x8528,&#32;0x9509,&#32;0xE5EE,&#32;0xF5CF,&#32;0xC5AC,&#32;0xD58D,
<anchor xml:id="_sd_8c_source_1l00201"/>00201 &#32;&#32;&#32;&#32;0x3653,&#32;0x2672,&#32;0x1611,&#32;0x0630,&#32;0x76D7,&#32;0x66F6,&#32;0x5695,&#32;0x46B4,
<anchor xml:id="_sd_8c_source_1l00202"/>00202 &#32;&#32;&#32;&#32;0xB75B,&#32;0xA77A,&#32;0x9719,&#32;0x8738,&#32;0xF7DF,&#32;0xE7FE,&#32;0xD79D,&#32;0xC7BC,
<anchor xml:id="_sd_8c_source_1l00203"/>00203 &#32;&#32;&#32;&#32;0x48C4,&#32;0x58E5,&#32;0x6886,&#32;0x78A7,&#32;0x0840,&#32;0x1861,&#32;0x2802,&#32;0x3823,
<anchor xml:id="_sd_8c_source_1l00204"/>00204 &#32;&#32;&#32;&#32;0xC9CC,&#32;0xD9ED,&#32;0xE98E,&#32;0xF9AF,&#32;0x8948,&#32;0x9969,&#32;0xA90A,&#32;0xB92B,
<anchor xml:id="_sd_8c_source_1l00205"/>00205 &#32;&#32;&#32;&#32;0x5AF5,&#32;0x4AD4,&#32;0x7AB7,&#32;0x6A96,&#32;0x1A71,&#32;0x0A50,&#32;0x3A33,&#32;0x2A12,
<anchor xml:id="_sd_8c_source_1l00206"/>00206 &#32;&#32;&#32;&#32;0xDBFD,&#32;0xCBDC,&#32;0xFBBF,&#32;0xEB9E,&#32;0x9B79,&#32;0x8B58,&#32;0xBB3B,&#32;0xAB1A,
<anchor xml:id="_sd_8c_source_1l00207"/>00207 &#32;&#32;&#32;&#32;0x6CA6,&#32;0x7C87,&#32;0x4CE4,&#32;0x5CC5,&#32;0x2C22,&#32;0x3C03,&#32;0x0C60,&#32;0x1C41,
<anchor xml:id="_sd_8c_source_1l00208"/>00208 &#32;&#32;&#32;&#32;0xEDAE,&#32;0xFD8F,&#32;0xCDEC,&#32;0xDDCD,&#32;0xAD2A,&#32;0xBD0B,&#32;0x8D68,&#32;0x9D49,
<anchor xml:id="_sd_8c_source_1l00209"/>00209 &#32;&#32;&#32;&#32;0x7E97,&#32;0x6EB6,&#32;0x5ED5,&#32;0x4EF4,&#32;0x3E13,&#32;0x2E32,&#32;0x1E51,&#32;0x0E70,
<anchor xml:id="_sd_8c_source_1l00210"/>00210 &#32;&#32;&#32;&#32;0xFF9F,&#32;0xEFBE,&#32;0xDFDD,&#32;0xCFFC,&#32;0xBF1B,&#32;0xAF3A,&#32;0x9F59,&#32;0x8F78,
<anchor xml:id="_sd_8c_source_1l00211"/>00211 &#32;&#32;&#32;&#32;0x9188,&#32;0x81A9,&#32;0xB1CA,&#32;0xA1EB,&#32;0xD10C,&#32;0xC12D,&#32;0xF14E,&#32;0xE16F,
<anchor xml:id="_sd_8c_source_1l00212"/>00212 &#32;&#32;&#32;&#32;0x1080,&#32;0x00A1,&#32;0x30C2,&#32;0x20E3,&#32;0x5004,&#32;0x4025,&#32;0x7046,&#32;0x6067,
<anchor xml:id="_sd_8c_source_1l00213"/>00213 &#32;&#32;&#32;&#32;0x83B9,&#32;0x9398,&#32;0xA3FB,&#32;0xB3DA,&#32;0xC33D,&#32;0xD31C,&#32;0xE37F,&#32;0xF35E,
<anchor xml:id="_sd_8c_source_1l00214"/>00214 &#32;&#32;&#32;&#32;0x02B1,&#32;0x1290,&#32;0x22F3,&#32;0x32D2,&#32;0x4235,&#32;0x5214,&#32;0x6277,&#32;0x7256,
<anchor xml:id="_sd_8c_source_1l00215"/>00215 &#32;&#32;&#32;&#32;0xB5EA,&#32;0xA5CB,&#32;0x95A8,&#32;0x8589,&#32;0xF56E,&#32;0xE54F,&#32;0xD52C,&#32;0xC50D,
<anchor xml:id="_sd_8c_source_1l00216"/>00216 &#32;&#32;&#32;&#32;0x34E2,&#32;0x24C3,&#32;0x14A0,&#32;0x0481,&#32;0x7466,&#32;0x6447,&#32;0x5424,&#32;0x4405,
<anchor xml:id="_sd_8c_source_1l00217"/>00217 &#32;&#32;&#32;&#32;0xA7DB,&#32;0xB7FA,&#32;0x8799,&#32;0x97B8,&#32;0xE75F,&#32;0xF77E,&#32;0xC71D,&#32;0xD73C,
<anchor xml:id="_sd_8c_source_1l00218"/>00218 &#32;&#32;&#32;&#32;0x26D3,&#32;0x36F2,&#32;0x0691,&#32;0x16B0,&#32;0x6657,&#32;0x7676,&#32;0x4615,&#32;0x5634,
<anchor xml:id="_sd_8c_source_1l00219"/>00219 &#32;&#32;&#32;&#32;0xD94C,&#32;0xC96D,&#32;0xF90E,&#32;0xE92F,&#32;0x99C8,&#32;0x89E9,&#32;0xB98A,&#32;0xA9AB,
<anchor xml:id="_sd_8c_source_1l00220"/>00220 &#32;&#32;&#32;&#32;0x5844,&#32;0x4865,&#32;0x7806,&#32;0x6827,&#32;0x18C0,&#32;0x08E1,&#32;0x3882,&#32;0x28A3,
<anchor xml:id="_sd_8c_source_1l00221"/>00221 &#32;&#32;&#32;&#32;0xCB7D,&#32;0xDB5C,&#32;0xEB3F,&#32;0xFB1E,&#32;0x8BF9,&#32;0x9BD8,&#32;0xABBB,&#32;0xBB9A,
<anchor xml:id="_sd_8c_source_1l00222"/>00222 &#32;&#32;&#32;&#32;0x4A75,&#32;0x5A54,&#32;0x6A37,&#32;0x7A16,&#32;0x0AF1,&#32;0x1AD0,&#32;0x2AB3,&#32;0x3A92,
<anchor xml:id="_sd_8c_source_1l00223"/>00223 &#32;&#32;&#32;&#32;0xFD2E,&#32;0xED0F,&#32;0xDD6C,&#32;0xCD4D,&#32;0xBDAA,&#32;0xAD8B,&#32;0x9DE8,&#32;0x8DC9,
<anchor xml:id="_sd_8c_source_1l00224"/>00224 &#32;&#32;&#32;&#32;0x7C26,&#32;0x6C07,&#32;0x5C64,&#32;0x4C45,&#32;0x3CA2,&#32;0x2C83,&#32;0x1CE0,&#32;0x0CC1,
<anchor xml:id="_sd_8c_source_1l00225"/>00225 &#32;&#32;&#32;&#32;0xEF1F,&#32;0xFF3E,&#32;0xCF5D,&#32;0xDF7C,&#32;0xAF9B,&#32;0xBFBA,&#32;0x8FD9,&#32;0x9FF8,
<anchor xml:id="_sd_8c_source_1l00226"/>00226 &#32;&#32;&#32;&#32;0x6E17,&#32;0x7E36,&#32;0x4E55,&#32;0x5E74,&#32;0x2E93,&#32;0x3EB2,&#32;0x0ED1,&#32;0x1EF0
<anchor xml:id="_sd_8c_source_1l00227"/>00227 };
<anchor xml:id="_sd_8c_source_1l00228"/>00228 
<anchor xml:id="_sd_8c_source_1l00229"/>00229 <emphasis role="keyword">static</emphasis>&#32;uint16_t&#32;_crc16(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;buffer,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length)&#32;{
<anchor xml:id="_sd_8c_source_1l00230"/>00230 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;data&#32;=&#32;buffer;
<anchor xml:id="_sd_8c_source_1l00231"/>00231 &#32;&#32;&#32;&#32;uint16_t&#32;crc&#32;=&#32;0;
<anchor xml:id="_sd_8c_source_1l00232"/>00232 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;length;&#32;i++)
<anchor xml:id="_sd_8c_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crc&#32;=&#32;(crc&#32;&lt;&lt;&#32;8)&#32;^&#32;CRC16_TABLE[((crc&#32;&gt;&gt;&#32;8)&#32;^&#32;data[i])&#32;&amp;&#32;0x00FF];
<anchor xml:id="_sd_8c_source_1l00234"/>00234 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;crc;
<anchor xml:id="_sd_8c_source_1l00235"/>00235 }
<anchor xml:id="_sd_8c_source_1l00236"/>00236 
<anchor xml:id="_sd_8c_source_1l00237"/>00237 <emphasis role="keyword">static</emphasis>&#32;uint8_t&#32;_spi_write(<emphasis role="keywordtype">void</emphasis>*&#32;_config,&#32;uint8_t&#32;data)&#32;{
<anchor xml:id="_sd_8c_source_1l00238"/>00238 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00239"/>00239 &#32;&#32;&#32;&#32;uint8_t*&#32;buffer&#32;=&#32;(uint8_t*)&amp;data;
<anchor xml:id="_sd_8c_source_1l00240"/>00240 &#32;&#32;&#32;&#32;spi_write_read_blocking(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;buffer,&#32;buffer,&#32;1);
<anchor xml:id="_sd_8c_source_1l00241"/>00241 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uint8_t)*buffer;
<anchor xml:id="_sd_8c_source_1l00242"/>00242 }
<anchor xml:id="_sd_8c_source_1l00243"/>00243 
<anchor xml:id="_sd_8c_source_1l00244"/>00244 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;_spi_wait(<emphasis role="keywordtype">void</emphasis>*&#32;_config,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;count)&#32;{
<anchor xml:id="_sd_8c_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00246"/>00246 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;count;&#32;i++)&#32;{
<anchor xml:id="_sd_8c_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spi_write_read_blocking(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;&amp;SPI_FILL_CHAR,&#32;NULL,&#32;<emphasis role="keyword">sizeof</emphasis>(SPI_FILL_CHAR));
<anchor xml:id="_sd_8c_source_1l00248"/>00248 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00249"/>00249 }
<anchor xml:id="_sd_8c_source_1l00250"/>00250 
<anchor xml:id="_sd_8c_source_1l00251"/>00251 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;_spi_init(<emphasis role="keywordtype">void</emphasis>*&#32;_config)&#32;{
<anchor xml:id="_sd_8c_source_1l00252"/>00252 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00253"/>00253 
<anchor xml:id="_sd_8c_source_1l00254"/>00254 &#32;&#32;&#32;&#32;gpio_set_function(config-&gt;<link linkend="_structblockdevice__sd__config__t_1a4b1f87d959d02dd32e88faeb7bf11412">mosi</link>,&#32;GPIO_FUNC_SPI);
<anchor xml:id="_sd_8c_source_1l00255"/>00255 &#32;&#32;&#32;&#32;gpio_set_function(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae8df6ecd310556e45f8e9d10b29b8512">miso</link>,&#32;GPIO_FUNC_SPI);
<anchor xml:id="_sd_8c_source_1l00256"/>00256 &#32;&#32;&#32;&#32;gpio_set_function(config-&gt;<link linkend="_structblockdevice__sd__config__t_1a83bc8190d58c50dc4696e347f6d8b601">sclk</link>,&#32;GPIO_FUNC_SPI);
<anchor xml:id="_sd_8c_source_1l00257"/>00257 &#32;&#32;&#32;&#32;gpio_init(config-&gt;<link linkend="_structblockdevice__sd__config__t_1af0a9de7d996bcd6711ab7244e2db17d6">cs</link>);
<anchor xml:id="_sd_8c_source_1l00258"/>00258 &#32;&#32;&#32;&#32;gpio_set_dir(config-&gt;<link linkend="_structblockdevice__sd__config__t_1af0a9de7d996bcd6711ab7244e2db17d6">cs</link>,&#32;GPIO_OUT);
<anchor xml:id="_sd_8c_source_1l00259"/>00259 &#32;&#32;&#32;&#32;gpio_pull_up(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae8df6ecd310556e45f8e9d10b29b8512">miso</link>);
<anchor xml:id="_sd_8c_source_1l00260"/>00260 &#32;&#32;&#32;&#32;gpio_set_drive_strength(config-&gt;<link linkend="_structblockdevice__sd__config__t_1a4b1f87d959d02dd32e88faeb7bf11412">mosi</link>,&#32;1);
<anchor xml:id="_sd_8c_source_1l00261"/>00261 &#32;&#32;&#32;&#32;gpio_set_drive_strength(config-&gt;<link linkend="_structblockdevice__sd__config__t_1a83bc8190d58c50dc4696e347f6d8b601">sclk</link>,&#32;1);
<anchor xml:id="_sd_8c_source_1l00262"/>00262 &#32;&#32;&#32;&#32;spi_init(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;<link linkend="_sd_8h_1a350d0200109d5c6deb52568dddf82d82">CONF_SD_INIT_FREQUENCY</link>);
<anchor xml:id="_sd_8c_source_1l00263"/>00263 &#32;&#32;&#32;&#32;spi_set_format(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;8,&#32;SPI_CPOL_0,&#32;SPI_CPHA_0,&#32;SPI_MSB_FIRST);
<anchor xml:id="_sd_8c_source_1l00264"/>00264 
<anchor xml:id="_sd_8c_source_1l00265"/>00265 &#32;&#32;&#32;&#32;gpio_put(config-&gt;<link linkend="_structblockdevice__sd__config__t_1af0a9de7d996bcd6711ab7244e2db17d6">cs</link>,&#32;1);
<anchor xml:id="_sd_8c_source_1l00266"/>00266 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;old_cs&#32;=&#32;gpio_get(config-&gt;<link linkend="_structblockdevice__sd__config__t_1af0a9de7d996bcd6711ab7244e2db17d6">cs</link>);
<anchor xml:id="_sd_8c_source_1l00267"/>00267 &#32;&#32;&#32;&#32;_spi_wait(config,&#32;10);
<anchor xml:id="_sd_8c_source_1l00268"/>00268 &#32;&#32;&#32;&#32;gpio_put(config-&gt;<link linkend="_structblockdevice__sd__config__t_1af0a9de7d996bcd6711ab7244e2db17d6">cs</link>,&#32;old_cs);
<anchor xml:id="_sd_8c_source_1l00269"/>00269 }
<anchor xml:id="_sd_8c_source_1l00270"/>00270 
<anchor xml:id="_sd_8c_source_1l00271"/>00271 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;_preclock_then_select(<emphasis role="keywordtype">void</emphasis>*&#32;_config)&#32;{
<anchor xml:id="_sd_8c_source_1l00272"/>00272 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00273"/>00273 &#32;&#32;&#32;&#32;spi_write_read_blocking(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;&amp;SPI_FILL_CHAR,&#32;NULL,&#32;<emphasis role="keyword">sizeof</emphasis>(SPI_FILL_CHAR));
<anchor xml:id="_sd_8c_source_1l00274"/>00274 &#32;&#32;&#32;&#32;gpio_put(config-&gt;<link linkend="_structblockdevice__sd__config__t_1af0a9de7d996bcd6711ab7244e2db17d6">cs</link>,&#32;0);
<anchor xml:id="_sd_8c_source_1l00275"/>00275 }
<anchor xml:id="_sd_8c_source_1l00276"/>00276 
<anchor xml:id="_sd_8c_source_1l00277"/>00277 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;_postclock_then_deselect(<emphasis role="keywordtype">void</emphasis>*&#32;_config)&#32;{
<anchor xml:id="_sd_8c_source_1l00278"/>00278 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00279"/>00279 &#32;&#32;&#32;&#32;spi_write_read_blocking(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;&amp;SPI_FILL_CHAR,&#32;NULL,&#32;<emphasis role="keyword">sizeof</emphasis>(SPI_FILL_CHAR));
<anchor xml:id="_sd_8c_source_1l00280"/>00280 &#32;&#32;&#32;&#32;gpio_put(config-&gt;<link linkend="_structblockdevice__sd__config__t_1af0a9de7d996bcd6711ab7244e2db17d6">cs</link>,&#32;1);
<anchor xml:id="_sd_8c_source_1l00281"/>00281 }
<anchor xml:id="_sd_8c_source_1l00282"/>00282 
<anchor xml:id="_sd_8c_source_1l00283"/>00283 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;debug_if(<emphasis role="keywordtype">int</emphasis>&#32;condition,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;format,&#32;...)&#32;{
<anchor xml:id="_sd_8c_source_1l00284"/>00284 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(condition)&#32;{
<anchor xml:id="_sd_8c_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;va_list&#32;args;
<anchor xml:id="_sd_8c_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;va_start(args,&#32;format);
<anchor xml:id="_sd_8c_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vprintf(format,&#32;args);
<anchor xml:id="_sd_8c_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;va_end(args);
<anchor xml:id="_sd_8c_source_1l00289"/>00289 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00290"/>00290 }
<anchor xml:id="_sd_8c_source_1l00291"/>00291 
<anchor xml:id="_sd_8c_source_1l00292"/>00292 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_wait_token(<emphasis role="keywordtype">void</emphasis>*&#32;_config,&#32;uint8_t&#32;token)&#32;{
<anchor xml:id="_sd_8c_source_1l00293"/>00293 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00294"/>00294 
<anchor xml:id="_sd_8c_source_1l00295"/>00295 &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="__dino_game_8cpp_1a87accd1af8e0aff4b818d891374f7cec">t</link>&#32;=&#32;to_ms_since_boot(get_absolute_time());
<anchor xml:id="_sd_8c_source_1l00296"/>00296 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(token&#32;==&#32;_spi_write(config,&#32;SPI_FILL_CHAR))&#32;{
<anchor xml:id="_sd_8c_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_sd_8c_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00300"/>00300 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(to_ms_since_boot(get_absolute_time())&#32;&lt;&#32;<link linkend="__dino_game_8cpp_1a87accd1af8e0aff4b818d891374f7cec">t</link>&#32;+&#32;300);&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Wait&#32;for&#32;300&#32;msec&#32;for&#32;start&#32;token</emphasis>
<anchor xml:id="_sd_8c_source_1l00301"/>00301 &#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;_wait_token:&#32;timeout\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00302"/>00302 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_sd_8c_source_1l00303"/>00303 }
<anchor xml:id="_sd_8c_source_1l00304"/>00304 
<anchor xml:id="_sd_8c_source_1l00305"/>00305 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_wait_ready(<emphasis role="keywordtype">void</emphasis>*&#32;_config,&#32;uint64_t&#32;timeout)&#32;{
<anchor xml:id="_sd_8c_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00307"/>00307 &#32;&#32;&#32;&#32;uint8_t&#32;response;
<anchor xml:id="_sd_8c_source_1l00308"/>00308 &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="__dino_game_8cpp_1a87accd1af8e0aff4b818d891374f7cec">t</link>&#32;=&#32;to_ms_since_boot(get_absolute_time());
<anchor xml:id="_sd_8c_source_1l00309"/>00309 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spi_write_read_blocking(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;&amp;SPI_FILL_CHAR,&#32;&amp;response,&#32;<emphasis role="keyword">sizeof</emphasis>(SPI_FILL_CHAR));
<anchor xml:id="_sd_8c_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(response&#32;==&#32;0xFF)&#32;{
<anchor xml:id="_sd_8c_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_sd_8c_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00314"/>00314 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(to_ms_since_boot(get_absolute_time())&#32;&lt;&#32;<link linkend="__dino_game_8cpp_1a87accd1af8e0aff4b818d891374f7cec">t</link>&#32;+&#32;timeout);
<anchor xml:id="_sd_8c_source_1l00315"/>00315 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_sd_8c_source_1l00316"/>00316 
<anchor xml:id="_sd_8c_source_1l00317"/>00317 }
<anchor xml:id="_sd_8c_source_1l00318"/>00318 
<anchor xml:id="_sd_8c_source_1l00319"/>00319 <emphasis role="keyword">static</emphasis>&#32;uint8_t&#32;_cmd_spi(<emphasis role="keywordtype">void</emphasis>*&#32;_config,&#32;<emphasis role="keywordtype">int</emphasis>&#32;cmd,&#32;uint32_t&#32;arg)&#32;{
<anchor xml:id="_sd_8c_source_1l00320"/>00320 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00321"/>00321 &#32;&#32;&#32;&#32;uint8_t&#32;response;
<anchor xml:id="_sd_8c_source_1l00322"/>00322 &#32;&#32;&#32;&#32;uint8_t&#32;cmd_packet[<link linkend="_sd_8c_1aebdc7d8ca8e25ed8efc90bb88ef7ef5b">PACKET_SIZE</link>]&#32;=&#32;{&#32;0&#32;};
<anchor xml:id="_sd_8c_source_1l00323"/>00323 
<anchor xml:id="_sd_8c_source_1l00324"/>00324 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prepare&#32;the&#32;command&#32;packet</emphasis>
<anchor xml:id="_sd_8c_source_1l00325"/>00325 &#32;&#32;&#32;&#32;cmd_packet[0]&#32;=&#32;<link linkend="_sd_8c_1acc071acf45c59c2a107bf01bdbd52b8a">SPI_CMD</link>(cmd);
<anchor xml:id="_sd_8c_source_1l00326"/>00326 &#32;&#32;&#32;&#32;cmd_packet[1]&#32;=&#32;(arg&#32;&gt;&gt;&#32;24);
<anchor xml:id="_sd_8c_source_1l00327"/>00327 &#32;&#32;&#32;&#32;cmd_packet[2]&#32;=&#32;(arg&#32;&gt;&gt;&#32;16);
<anchor xml:id="_sd_8c_source_1l00328"/>00328 &#32;&#32;&#32;&#32;cmd_packet[3]&#32;=&#32;(arg&#32;&gt;&gt;&#32;8);
<anchor xml:id="_sd_8c_source_1l00329"/>00329 &#32;&#32;&#32;&#32;cmd_packet[4]&#32;=&#32;(arg&#32;&gt;&gt;&#32;0);
<anchor xml:id="_sd_8c_source_1l00330"/>00330 
<anchor xml:id="_sd_8c_source_1l00331"/>00331 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7d08bfdf6ccc6ec15fef0f38c155794">enable_crc</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;crc&#32;=&#32;_crc7(cmd_packet,&#32;5);
<anchor xml:id="_sd_8c_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd_packet[5]&#32;=&#32;(crc&#32;&lt;&lt;&#32;1)&#32;|&#32;0x01;
<anchor xml:id="_sd_8c_source_1l00334"/>00334 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00335"/>00335 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(cmd)&#32;{
<anchor xml:id="_sd_8c_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fac0d49d0be913ea0759b60172648bca63">CMD0_GO_IDLE_STATE</link>:
<anchor xml:id="_sd_8c_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd_packet[5]&#32;=&#32;0x95;
<anchor xml:id="_sd_8c_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa6b423cd241fe20485d3f14f0fb9926f4">CMD8_SEND_IF_COND</link>:
<anchor xml:id="_sd_8c_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd_packet[5]&#32;=&#32;0x87;
<anchor xml:id="_sd_8c_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="_sd_8c_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd_packet[5]&#32;=&#32;0xFF;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;sure&#32;bit&#32;0-End&#32;bit&#32;is&#32;high</emphasis>
<anchor xml:id="_sd_8c_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00347"/>00347 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00348"/>00348 
<anchor xml:id="_sd_8c_source_1l00349"/>00349 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;send&#32;a&#32;command</emphasis>
<anchor xml:id="_sd_8c_source_1l00350"/>00350 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_sd_8c_1aebdc7d8ca8e25ed8efc90bb88ef7ef5b">PACKET_SIZE</link>;&#32;i++)&#32;{
<anchor xml:id="_sd_8c_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spi_write_read_blocking(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;(<emphasis role="keyword">const</emphasis>&#32;uint8_t*)&amp;cmd_packet[i],&#32;NULL,&#32;1);
<anchor xml:id="_sd_8c_source_1l00352"/>00352 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00353"/>00353 
<anchor xml:id="_sd_8c_source_1l00354"/>00354 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;received&#32;byte&#32;immediataly&#32;following&#32;CMD12&#32;is&#32;a&#32;stuff&#32;byte,</emphasis>
<anchor xml:id="_sd_8c_source_1l00355"/>00355 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;it&#32;should&#32;be&#32;discarded&#32;before&#32;receive&#32;the&#32;response&#32;of&#32;the&#32;CMD12.</emphasis>
<anchor xml:id="_sd_8c_source_1l00356"/>00356 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa50a1b06fbfbfac3e88777e375713194b">CMD12_STOP_TRANSMISSION</link>&#32;==&#32;cmd)&#32;{
<anchor xml:id="_sd_8c_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spi_write_read_blocking(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;&amp;SPI_FILL_CHAR,&#32;NULL,&#32;1);
<anchor xml:id="_sd_8c_source_1l00358"/>00358 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00359"/>00359 
<anchor xml:id="_sd_8c_source_1l00360"/>00360 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Loop&#32;for&#32;response:&#32;Response&#32;is&#32;sent&#32;back&#32;within&#32;command&#32;response&#32;time&#32;(NCR),&#32;0&#32;to&#32;8&#32;bytes&#32;for&#32;SDC</emphasis>
<anchor xml:id="_sd_8c_source_1l00361"/>00361 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;0x10;&#32;i++)&#32;{
<anchor xml:id="_sd_8c_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spi_write_read_blocking(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;&amp;SPI_FILL_CHAR,&#32;&amp;response,&#32;1);
<anchor xml:id="_sd_8c_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(response&#32;&amp;&#32;<link linkend="_sd_8c_1afa1084b6c1e98accf323f9eecb228db8">R1_RESPONSE_RECV</link>))&#32;{
<anchor xml:id="_sd_8c_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00366"/>00366 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00367"/>00367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;response;
<anchor xml:id="_sd_8c_source_1l00368"/>00368 }
<anchor xml:id="_sd_8c_source_1l00369"/>00369 
<anchor xml:id="_sd_8c_source_1l00370"/>00370 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_cmd(<emphasis role="keywordtype">void</emphasis>*&#32;_config,&#32;<emphasis role="keywordtype">int</emphasis>&#32;cmd,&#32;uint32_t&#32;arg,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_acmd,&#32;uint32_t*&#32;resp)&#32;{
<anchor xml:id="_sd_8c_source_1l00371"/>00371 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00372"/>00372 &#32;&#32;&#32;&#32;int32_t&#32;status&#32;=&#32;<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>;
<anchor xml:id="_sd_8c_source_1l00373"/>00373 &#32;&#32;&#32;&#32;uint32_t&#32;response;
<anchor xml:id="_sd_8c_source_1l00374"/>00374 
<anchor xml:id="_sd_8c_source_1l00375"/>00375 &#32;&#32;&#32;&#32;_preclock_then_select(config);
<anchor xml:id="_sd_8c_source_1l00376"/>00376 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;need&#32;to&#32;wait&#32;for&#32;card&#32;to&#32;be&#32;ready&#32;when&#32;sending&#32;the&#32;stop&#32;command</emphasis>
<anchor xml:id="_sd_8c_source_1l00377"/>00377 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa50a1b06fbfbfac3e88777e375713194b">CMD12_STOP_TRANSMISSION</link>&#32;!=&#32;cmd)&#32;{
<anchor xml:id="_sd_8c_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">false</emphasis>&#32;==&#32;_wait_ready(config,&#32;<link linkend="_sd_8c_1a717a8dd1956ddc8608e30d577a0efa77">SD_COMMAND_TIMEOUT</link>))&#32;{
<anchor xml:id="_sd_8c_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Card&#32;not&#32;ready&#32;yet&#32;\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00381"/>00381 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00382"/>00382 
<anchor xml:id="_sd_8c_source_1l00383"/>00383 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Re-try&#32;command</emphasis>
<anchor xml:id="_sd_8c_source_1l00384"/>00384 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3;&#32;i++)&#32;{
<anchor xml:id="_sd_8c_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;CMD55&#32;for&#32;APP&#32;command&#32;first</emphasis>
<anchor xml:id="_sd_8c_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_acmd)&#32;{
<anchor xml:id="_sd_8c_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;response&#32;=&#32;_cmd_spi(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fafe267879cd620c14cf8909eef99fd1c0">CMD55_APP_CMD</link>,&#32;0x0);
<anchor xml:id="_sd_8c_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Wait&#32;for&#32;card&#32;to&#32;be&#32;ready&#32;after&#32;CMD55</emphasis>
<anchor xml:id="_sd_8c_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">false</emphasis>&#32;==&#32;_wait_ready(config,&#32;<link linkend="_sd_8c_1a717a8dd1956ddc8608e30d577a0efa77">SD_COMMAND_TIMEOUT</link>))&#32;{
<anchor xml:id="_sd_8c_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Card&#32;not&#32;ready&#32;yet&#32;\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00393"/>00393 
<anchor xml:id="_sd_8c_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;command&#32;over&#32;SPI&#32;interface</emphasis>
<anchor xml:id="_sd_8c_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;response&#32;=&#32;_cmd_spi(config,&#32;cmd,&#32;arg);
<anchor xml:id="_sd_8c_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sd_8c_1a9d214c6916e6ca7f6e0ef1f52255a9a4">R1_NO_RESPONSE</link>&#32;==&#32;response)&#32;{
<anchor xml:id="_sd_8c_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;No&#32;response&#32;CMD:%d&#32;\n&quot;</emphasis>,&#32;cmd);
<anchor xml:id="_sd_8c_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="_sd_8c_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00401"/>00401 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00402"/>00402 
<anchor xml:id="_sd_8c_source_1l00403"/>00403 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pass&#32;the&#32;response&#32;to&#32;the&#32;command&#32;call&#32;if&#32;required</emphasis>
<anchor xml:id="_sd_8c_source_1l00404"/>00404 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(NULL&#32;!=&#32;resp)&#32;{
<anchor xml:id="_sd_8c_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*resp&#32;=&#32;response;
<anchor xml:id="_sd_8c_source_1l00406"/>00406 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00407"/>00407 
<anchor xml:id="_sd_8c_source_1l00408"/>00408 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Process&#32;the&#32;response&#32;R1&#32;&#32;:&#32;Exit&#32;on&#32;CRC/Illegal&#32;command&#32;error/No&#32;response</emphasis>
<anchor xml:id="_sd_8c_source_1l00409"/>00409 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sd_8c_1a9d214c6916e6ca7f6e0ef1f52255a9a4">R1_NO_RESPONSE</link>&#32;==&#32;response)&#32;{
<anchor xml:id="_sd_8c_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_postclock_then_deselect(config);
<anchor xml:id="_sd_8c_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;No&#32;response&#32;CMD:%d&#32;response:&#32;0x%&quot;</emphasis>&#32;PRIx32&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>,&#32;cmd,&#32;response);
<anchor xml:id="_sd_8c_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1aafa7734f02804b218f71f2a988111b15">SD_BLOCK_DEVICE_ERROR_NO_DEVICE</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;device</emphasis>
<anchor xml:id="_sd_8c_source_1l00413"/>00413 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00414"/>00414 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(response&#32;&amp;&#32;<link linkend="_sd_8c_1ac9f596336ebcb43f5c9e314ad697a8e8">R1_COM_CRC_ERROR</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_postclock_then_deselect(config);
<anchor xml:id="_sd_8c_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;CRC&#32;error&#32;CMD:%d&#32;response&#32;0x%&quot;</emphasis>&#32;PRIx32&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>,&#32;cmd,&#32;response);
<anchor xml:id="_sd_8c_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1a07208e021a15e0c2b5425e3355c7c2a9">SD_BLOCK_DEVICE_ERROR_CRC</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;CRC&#32;error</emphasis>
<anchor xml:id="_sd_8c_source_1l00418"/>00418 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00419"/>00419 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(response&#32;&amp;&#32;<link linkend="_sd_8c_1a317730607b37d51a7a470e8f33fa0e4d">R1_ILLEGAL_COMMAND</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_postclock_then_deselect(config);
<anchor xml:id="_sd_8c_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Illegal&#32;command&#32;CMD:%d&#32;response&#32;0x%&quot;</emphasis>&#32;PRIx32&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>,&#32;cmd,&#32;response);
<anchor xml:id="_sd_8c_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa6b423cd241fe20485d3f14f0fb9926f4">CMD8_SEND_IF_COND</link>&#32;==&#32;cmd)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Illegal&#32;command&#32;is&#32;for&#32;Ver1&#32;or&#32;not&#32;SD&#32;Card</emphasis>
<anchor xml:id="_sd_8c_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>&#32;=&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a531e2d8187a657aeb5677e80000fc6f5">CARD_UNKNOWN</link>;
<anchor xml:id="_sd_8c_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1adcac3a18f2010c23804be1dddf7f5ba2">SD_BLOCK_DEVICE_ERROR_UNSUPPORTED</link>;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Command&#32;not&#32;supported</emphasis>
<anchor xml:id="_sd_8c_source_1l00426"/>00426 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00427"/>00427 
<anchor xml:id="_sd_8c_source_1l00428"/>00428 &#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;CMD:%d&#32;\t&#32;arg:0x%&quot;</emphasis>&#32;PRIx32&#32;<emphasis role="stringliteral">&quot;&#32;\t&#32;Response:0x%&quot;</emphasis>&#32;PRIx32&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>,&#32;cmd,&#32;arg,&#32;response);
<anchor xml:id="_sd_8c_source_1l00429"/>00429 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;status&#32;for&#32;other&#32;errors</emphasis>
<anchor xml:id="_sd_8c_source_1l00430"/>00430 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((response&#32;&amp;&#32;<link linkend="_sd_8c_1a4598fdd1bd123e39ca45cdcd30f2a0bb">R1_ERASE_RESET</link>)&#32;||&#32;(response&#32;&amp;&#32;<link linkend="_sd_8c_1a310cf4b26d5025bc4e0ac18b7dfd968a">R1_ERASE_SEQUENCE_ERROR</link>))&#32;{
<anchor xml:id="_sd_8c_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<link linkend="_sd_8c_1a6a546df19eddae71eb0ccf0e62913143">SD_BLOCK_DEVICE_ERROR_ERASE</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Erase&#32;error</emphasis>
<anchor xml:id="_sd_8c_source_1l00432"/>00432 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00433"/>00433 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((response&#32;&amp;&#32;<link linkend="_sd_8c_1a84256fd9d0fbf84f1c8fabd17d3f7adc">R1_ADDRESS_ERROR</link>)&#32;||&#32;(response&#32;&amp;&#32;<link linkend="_sd_8c_1afaf04d83e2c97907a519100efe9c8d7c">R1_PARAMETER_ERROR</link>))&#32;{
<anchor xml:id="_sd_8c_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Misaligned&#32;address&#32;/&#32;invalid&#32;address&#32;block&#32;length</emphasis>
<anchor xml:id="_sd_8c_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<link linkend="_sd_8c_1a7204a59a7a908a0b8559c4868129f4c4">SD_BLOCK_DEVICE_ERROR_PARAMETER</link>;
<anchor xml:id="_sd_8c_source_1l00436"/>00436 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00437"/>00437 
<anchor xml:id="_sd_8c_source_1l00438"/>00438 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;rest&#32;of&#32;the&#32;response&#32;part&#32;for&#32;other&#32;commands</emphasis>
<anchor xml:id="_sd_8c_source_1l00439"/>00439 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(cmd)&#32;{
<anchor xml:id="_sd_8c_source_1l00440"/>00440 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa6b423cd241fe20485d3f14f0fb9926f4">CMD8_SEND_IF_COND</link>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Response&#32;R7</emphasis>
<anchor xml:id="_sd_8c_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;V2-Version&#32;Card\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>&#32;=&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a3850bb2d294863ab82502f429fd30c09">SDCARD_V2</link>;&#32;<emphasis role="comment">//&#32;fallthrough</emphasis>
<anchor xml:id="_sd_8c_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Note:&#32;No&#32;break&#32;here,&#32;need&#32;to&#32;read&#32;rest&#32;of&#32;the&#32;response</emphasis>
<anchor xml:id="_sd_8c_source_1l00444"/>00444 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faab2940925eb3b338f558bdd9012d2c98">CMD58_READ_OCR</link>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Response&#32;R3</emphasis>
<anchor xml:id="_sd_8c_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;response&#32;=&#32;(_spi_write(config,&#32;SPI_FILL_CHAR)&#32;&lt;&lt;&#32;24);
<anchor xml:id="_sd_8c_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;response&#32;|=&#32;(_spi_write(config,&#32;SPI_FILL_CHAR)&#32;&lt;&lt;&#32;16);
<anchor xml:id="_sd_8c_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;response&#32;|=&#32;(_spi_write(config,&#32;SPI_FILL_CHAR)&#32;&lt;&lt;&#32;8);
<anchor xml:id="_sd_8c_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;response&#32;|=&#32;_spi_write(config,&#32;SPI_FILL_CHAR);
<anchor xml:id="_sd_8c_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;R3/R7:&#32;0x%&quot;</emphasis>&#32;PRIx32&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>,&#32;response);
<anchor xml:id="_sd_8c_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00451"/>00451 
<anchor xml:id="_sd_8c_source_1l00452"/>00452 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa50a1b06fbfbfac3e88777e375713194b">CMD12_STOP_TRANSMISSION</link>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Response&#32;R1b</emphasis>
<anchor xml:id="_sd_8c_source_1l00453"/>00453 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faa179ed73c43cdbb988f56eeea98a0c64">CMD38_ERASE</link>:
<anchor xml:id="_sd_8c_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_wait_ready(config,&#32;<link linkend="_sd_8c_1a717a8dd1956ddc8608e30d577a0efa77">SD_COMMAND_TIMEOUT</link>);
<anchor xml:id="_sd_8c_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00456"/>00456 
<anchor xml:id="_sd_8c_source_1l00457"/>00457 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fad00bb3f3cccda27fc142424dcbfef81b">ACMD13_SD_STATUS</link>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Response&#32;R2</emphasis>
<anchor xml:id="_sd_8c_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;response&#32;=&#32;_spi_write(config,&#32;SPI_FILL_CHAR);
<anchor xml:id="_sd_8c_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;R2:&#32;0x%&quot;</emphasis>&#32;PRIx32&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>,&#32;response);
<anchor xml:id="_sd_8c_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00461"/>00461 
<anchor xml:id="_sd_8c_source_1l00462"/>00462 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Response&#32;R1</emphasis>
<anchor xml:id="_sd_8c_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00464"/>00464 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00465"/>00465 
<anchor xml:id="_sd_8c_source_1l00466"/>00466 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pass&#32;the&#32;updated&#32;response&#32;to&#32;the&#32;command</emphasis>
<anchor xml:id="_sd_8c_source_1l00467"/>00467 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(NULL&#32;!=&#32;resp)&#32;{
<anchor xml:id="_sd_8c_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*resp&#32;=&#32;response;
<anchor xml:id="_sd_8c_source_1l00469"/>00469 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00470"/>00470 
<anchor xml:id="_sd_8c_source_1l00471"/>00471 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Do&#32;not&#32;deselect&#32;card&#32;if&#32;read&#32;is&#32;in&#32;progress.</emphasis>
<anchor xml:id="_sd_8c_source_1l00472"/>00472 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fac94c340b43f6e72a115bf05aee14a0c5">CMD9_SEND_CSD</link>&#32;==&#32;cmd)&#32;||&#32;(<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa33335afba15c34e82ff7d9bf267ad577">ACMD22_SEND_NUM_WR_BLOCKS</link>&#32;==&#32;cmd)&#32;||
<anchor xml:id="_sd_8c_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6facaf0335a4dc52fec2cd69fa926c240d3">CMD24_WRITE_BLOCK</link>&#32;==&#32;cmd)&#32;||&#32;(<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fafaaf5657d5198f338bb555db8dbe0977">CMD25_WRITE_MULTIPLE_BLOCK</link>&#32;==&#32;cmd)&#32;||
<anchor xml:id="_sd_8c_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faa8ea642c880b96150fe8d7387b3c869f">CMD17_READ_SINGLE_BLOCK</link>&#32;==&#32;cmd)&#32;||&#32;(<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa0425449a99e80e959b0376b9facbf86c">CMD18_READ_MULTIPLE_BLOCK</link>&#32;==&#32;cmd))
<anchor xml:id="_sd_8c_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>&#32;==&#32;status))&#32;{
<anchor xml:id="_sd_8c_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>;
<anchor xml:id="_sd_8c_source_1l00477"/>00477 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00478"/>00478 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Deselect&#32;card</emphasis>
<anchor xml:id="_sd_8c_source_1l00479"/>00479 &#32;&#32;&#32;&#32;_postclock_then_deselect(config);
<anchor xml:id="_sd_8c_source_1l00480"/>00480 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00481"/>00481 }
<anchor xml:id="_sd_8c_source_1l00482"/>00482 
<anchor xml:id="_sd_8c_source_1l00483"/>00483 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_cmd8(<emphasis role="keywordtype">void</emphasis>*&#32;_config)&#32;{
<anchor xml:id="_sd_8c_source_1l00484"/>00484 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00485"/>00485 &#32;&#32;&#32;&#32;uint32_t&#32;arg&#32;=&#32;(<link linkend="_sd_8c_1ac77e3b44a84e04fd34a6084e23d7a67f">CMD8_PATTERN</link>&#32;&lt;&lt;&#32;0);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;[7:0]check&#32;pattern</emphasis>
<anchor xml:id="_sd_8c_source_1l00486"/>00486 &#32;&#32;&#32;&#32;uint32_t&#32;response&#32;=&#32;0;
<anchor xml:id="_sd_8c_source_1l00487"/>00487 &#32;&#32;&#32;&#32;int32_t&#32;status&#32;=&#32;<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>;
<anchor xml:id="_sd_8c_source_1l00488"/>00488 
<anchor xml:id="_sd_8c_source_1l00489"/>00489 &#32;&#32;&#32;&#32;arg&#32;|=&#32;(0x1&#32;&lt;&lt;&#32;8);&#32;&#32;<emphasis role="comment">//&#32;2.7-3.6V&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;[11:8]supply&#32;voltage(VHS)</emphasis>
<anchor xml:id="_sd_8c_source_1l00490"/>00490 
<anchor xml:id="_sd_8c_source_1l00491"/>00491 &#32;&#32;&#32;&#32;status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa6b423cd241fe20485d3f14f0fb9926f4">CMD8_SEND_IF_COND</link>,&#32;arg,&#32;<emphasis role="keyword">false</emphasis>,&#32;&amp;response);
<anchor xml:id="_sd_8c_source_1l00492"/>00492 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Verify&#32;voltage&#32;and&#32;pattern&#32;for&#32;V2&#32;version&#32;of&#32;card</emphasis>
<anchor xml:id="_sd_8c_source_1l00493"/>00493 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>&#32;==&#32;status)&#32;&amp;&amp;&#32;(<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a3850bb2d294863ab82502f429fd30c09">SDCARD_V2</link>&#32;==&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>))&#32;{
<anchor xml:id="_sd_8c_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;check&#32;pattern&#32;is&#32;not&#32;matched,&#32;CMD8&#32;communication&#32;is&#32;not&#32;valid</emphasis>
<anchor xml:id="_sd_8c_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((response&#32;&amp;&#32;0xFFF)&#32;!=&#32;arg)&#32;{
<anchor xml:id="_sd_8c_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;CMD8&#32;Pattern&#32;mismatch&#32;0x%&quot;</emphasis>&#32;PRIx32&#32;<emphasis role="stringliteral">&quot;&#32;:&#32;0x%&quot;</emphasis>&#32;PRIx32&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>,&#32;arg,&#32;response);
<anchor xml:id="_sd_8c_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>&#32;=&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a531e2d8187a657aeb5677e80000fc6f5">CARD_UNKNOWN</link>;
<anchor xml:id="_sd_8c_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<link linkend="_sd_8c_1afc41dc1dffb1f500b7a3f87e3de10f5c">SD_BLOCK_DEVICE_ERROR_UNUSABLE</link>;
<anchor xml:id="_sd_8c_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00500"/>00500 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00501"/>00501 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00502"/>00502 }
<anchor xml:id="_sd_8c_source_1l00503"/>00503 
<anchor xml:id="_sd_8c_source_1l00504"/>00504 <emphasis role="keyword">static</emphasis>&#32;uint32_t&#32;_go_idle_state(<emphasis role="keywordtype">void</emphasis>*&#32;_config)&#32;{
<anchor xml:id="_sd_8c_source_1l00505"/>00505 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00506"/>00506 &#32;&#32;&#32;&#32;uint32_t&#32;response;
<anchor xml:id="_sd_8c_source_1l00507"/>00507 
<anchor xml:id="_sd_8c_source_1l00508"/>00508 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_sd_8c_1a190b6bcf9ab4d85b71e05bd20955758a">SD_CMD0_GO_IDLE_STATE_RETRIES</link>;&#32;i++)&#32;{
<anchor xml:id="_sd_8c_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fac0d49d0be913ea0759b60172648bca63">CMD0_GO_IDLE_STATE</link>,&#32;0x0,&#32;0,&#32;&amp;response);
<anchor xml:id="_sd_8c_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sd_8c_1a7adb3673fe75b9397a1f241533e3f08a">R1_IDLE_STATE</link>&#32;==&#32;response)&#32;{
<anchor xml:id="_sd_8c_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(1);
<anchor xml:id="_sd_8c_source_1l00514"/>00514 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00515"/>00515 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;response;
<anchor xml:id="_sd_8c_source_1l00516"/>00516 }
<anchor xml:id="_sd_8c_source_1l00517"/>00517 
<anchor xml:id="_sd_8c_source_1l00518"/>00518 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;init_card(<emphasis role="keywordtype">void</emphasis>*&#32;_config)&#32;{
<anchor xml:id="_sd_8c_source_1l00519"/>00519 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00520"/>00520 &#32;&#32;&#32;&#32;int32_t&#32;status&#32;=&#32;<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>;
<anchor xml:id="_sd_8c_source_1l00521"/>00521 &#32;&#32;&#32;&#32;uint32_t&#32;response,&#32;arg;
<anchor xml:id="_sd_8c_source_1l00522"/>00522 
<anchor xml:id="_sd_8c_source_1l00523"/>00523 &#32;&#32;&#32;&#32;_spi_init(config);
<anchor xml:id="_sd_8c_source_1l00524"/>00524 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_go_idle_state(config)&#32;!=&#32;<link linkend="_sd_8c_1a7adb3673fe75b9397a1f241533e3f08a">R1_IDLE_STATE</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;No&#32;disk,&#32;or&#32;could&#32;not&#32;put&#32;SD&#32;card&#32;in&#32;to&#32;SPI&#32;idle&#32;state\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1aafa7734f02804b218f71f2a988111b15">SD_BLOCK_DEVICE_ERROR_NO_DEVICE</link>;
<anchor xml:id="_sd_8c_source_1l00527"/>00527 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00528"/>00528 
<anchor xml:id="_sd_8c_source_1l00529"/>00529 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;CMD8,&#32;if&#32;the&#32;card&#32;rejects&#32;the&#32;command&#32;then&#32;it&apos;s&#32;probably&#32;using&#32;the</emphasis>
<anchor xml:id="_sd_8c_source_1l00530"/>00530 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;legacy&#32;protocol,&#32;or&#32;is&#32;a&#32;MMC,&#32;or&#32;just&#32;flat-out&#32;broken</emphasis>
<anchor xml:id="_sd_8c_source_1l00531"/>00531 &#32;&#32;&#32;&#32;status&#32;=&#32;_cmd8(config);
<anchor xml:id="_sd_8c_source_1l00532"/>00532 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>&#32;!=&#32;status&#32;&amp;&amp;&#32;<link linkend="_sd_8c_1adcac3a18f2010c23804be1dddf7f5ba2">SD_BLOCK_DEVICE_ERROR_UNSUPPORTED</link>&#32;!=&#32;status)&#32;{
<anchor xml:id="_sd_8c_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00534"/>00534 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00535"/>00535 
<anchor xml:id="_sd_8c_source_1l00536"/>00536 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7d08bfdf6ccc6ec15fef0f38c155794">enable_crc</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa82dd3da0189cad047996069a968cb3b7">CMD59_CRC_ON_OFF</link>,&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7d08bfdf6ccc6ec15fef0f38c155794">enable_crc</link>,&#32;0,&#32;NULL);
<anchor xml:id="_sd_8c_source_1l00538"/>00538 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00539"/>00539 
<anchor xml:id="_sd_8c_source_1l00540"/>00540 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;OCR&#32;-&#32;CMD58&#32;Response&#32;contains&#32;OCR&#32;register</emphasis>
<anchor xml:id="_sd_8c_source_1l00541"/>00541 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>&#32;!=&#32;(status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faab2940925eb3b338f558bdd9012d2c98">CMD58_READ_OCR</link>,&#32;0x0,&#32;0x0,&#32;&amp;response)))&#32;{
<anchor xml:id="_sd_8c_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00543"/>00543 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00544"/>00544 
<anchor xml:id="_sd_8c_source_1l00545"/>00545 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;card&#32;supports&#32;voltage&#32;range:&#32;3.3V</emphasis>
<anchor xml:id="_sd_8c_source_1l00546"/>00546 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(response&#32;&amp;&#32;<link linkend="_sd_8c_1a9242e2740476a5965ace0b1276c9a24d">OCR_3_3V</link>))&#32;{
<anchor xml:id="_sd_8c_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>&#32;=&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a531e2d8187a657aeb5677e80000fc6f5">CARD_UNKNOWN</link>;
<anchor xml:id="_sd_8c_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<link linkend="_sd_8c_1afc41dc1dffb1f500b7a3f87e3de10f5c">SD_BLOCK_DEVICE_ERROR_UNUSABLE</link>;
<anchor xml:id="_sd_8c_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00550"/>00550 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00551"/>00551 
<anchor xml:id="_sd_8c_source_1l00552"/>00552 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HCS&#32;is&#32;set&#32;1&#32;for&#32;HC/XC&#32;capacity&#32;cards&#32;for&#32;ACMD41,&#32;if&#32;supported</emphasis>
<anchor xml:id="_sd_8c_source_1l00553"/>00553 &#32;&#32;&#32;&#32;arg&#32;=&#32;0x0;
<anchor xml:id="_sd_8c_source_1l00554"/>00554 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a3850bb2d294863ab82502f429fd30c09">SDCARD_V2</link>&#32;==&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg&#32;|=&#32;<link linkend="_sd_8c_1ace5b9334abefe4920fb519a5957b5cc3">OCR_HCS_CCS</link>;
<anchor xml:id="_sd_8c_source_1l00556"/>00556 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00557"/>00557 
<anchor xml:id="_sd_8c_source_1l00558"/>00558 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Idle&#32;state&#32;bit&#32;in&#32;the&#32;R1&#32;response&#32;of&#32;ACMD41&#32;is&#32;used&#32;by&#32;the&#32;card&#32;to&#32;inform&#32;the&#32;host</emphasis>
<anchor xml:id="_sd_8c_source_1l00559"/>00559 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;if&#32;initialization&#32;of&#32;ACMD41&#32;is&#32;completed.&#32;&quot;1&quot;&#32;indicates&#32;that&#32;the&#32;card&#32;is&#32;still&#32;initializing.</emphasis>
<anchor xml:id="_sd_8c_source_1l00560"/>00560 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;&quot;0&quot;&#32;indicates&#32;completion&#32;of&#32;initialization.&#32;The&#32;host&#32;repeatedly&#32;issues&#32;ACMD41&#32;until</emphasis>
<anchor xml:id="_sd_8c_source_1l00561"/>00561 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;this&#32;bit&#32;is&#32;set&#32;to&#32;&quot;0&quot;.</emphasis>
<anchor xml:id="_sd_8c_source_1l00562"/>00562 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_sd_8c_source_1l00563"/>00563 &#32;&#32;&#32;&#32;absolute_time_t&#32;timeout&#32;=&#32;make_timeout_time_ms(<link linkend="_sd_8c_1a717a8dd1956ddc8608e30d577a0efa77">SD_COMMAND_TIMEOUT</link>);
<anchor xml:id="_sd_8c_source_1l00564"/>00564 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fabd6a8e1e93a30cdb68240a81ac8925f4">ACMD41_SD_SEND_OP_COND</link>,&#32;arg,&#32;1,&#32;&amp;response);
<anchor xml:id="_sd_8c_source_1l00566"/>00566 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((response&#32;&amp;&#32;<link linkend="_sd_8c_1a7adb3673fe75b9397a1f241533e3f08a">R1_IDLE_STATE</link>)&#32;&amp;&amp;&#32;(0&#32;&lt;&#32;absolute_time_diff_us(get_absolute_time(),&#32;timeout)));
<anchor xml:id="_sd_8c_source_1l00567"/>00567 
<anchor xml:id="_sd_8c_source_1l00568"/>00568 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialization&#32;complete:&#32;ACMD41&#32;successful</emphasis>
<anchor xml:id="_sd_8c_source_1l00569"/>00569 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>&#32;!=&#32;status)&#32;||&#32;(0x00&#32;!=&#32;response))&#32;{
<anchor xml:id="_sd_8c_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>&#32;=&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a531e2d8187a657aeb5677e80000fc6f5">CARD_UNKNOWN</link>;
<anchor xml:id="_sd_8c_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Timeout&#32;waiting&#32;for&#32;card\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00573"/>00573 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00574"/>00574 
<anchor xml:id="_sd_8c_source_1l00575"/>00575 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a3850bb2d294863ab82502f429fd30c09">SDCARD_V2</link>&#32;==&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;card&#32;capacity&#32;CCS:&#32;CMD58</emphasis>
<anchor xml:id="_sd_8c_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>&#32;==&#32;(status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faab2940925eb3b338f558bdd9012d2c98">CMD58_READ_OCR</link>,&#32;0x0,&#32;0x0,&#32;&amp;response)))&#32;{
<anchor xml:id="_sd_8c_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;High&#32;Capacity&#32;card</emphasis>
<anchor xml:id="_sd_8c_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(response&#32;&amp;&#32;<link linkend="_sd_8c_1ace5b9334abefe4920fb519a5957b5cc3">OCR_HCS_CCS</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>&#32;=&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a7ada6417d63a99e3745b744c2d8c0dba">SDCARD_V2HC</link>;
<anchor xml:id="_sd_8c_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Card&#32;Initialized:&#32;High&#32;Capacity&#32;Card&#32;\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Card&#32;Initialized:&#32;Standard&#32;Capacity&#32;Card:&#32;Version&#32;2.x&#32;\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00587"/>00587 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00588"/>00588 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>&#32;=&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a4eb0b19753b7d178f928445d207de38e">SDCARD_V1</link>;
<anchor xml:id="_sd_8c_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Card&#32;Initialized:&#32;Version&#32;1.x&#32;Card\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00591"/>00591 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00592"/>00592 
<anchor xml:id="_sd_8c_source_1l00593"/>00593 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7d08bfdf6ccc6ec15fef0f38c155794">enable_crc</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Disable&#32;CRC</emphasis>
<anchor xml:id="_sd_8c_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa82dd3da0189cad047996069a968cb3b7">CMD59_CRC_ON_OFF</link>,&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7d08bfdf6ccc6ec15fef0f38c155794">enable_crc</link>,&#32;0x0,&#32;&amp;response);
<anchor xml:id="_sd_8c_source_1l00596"/>00596 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00597"/>00597 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa82dd3da0189cad047996069a968cb3b7">CMD59_CRC_ON_OFF</link>,&#32;0,&#32;0x0,&#32;&amp;response);
<anchor xml:id="_sd_8c_source_1l00599"/>00599 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00600"/>00600 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00601"/>00601 }
<anchor xml:id="_sd_8c_source_1l00602"/>00602 
<anchor xml:id="_sd_8c_source_1l00603"/>00603 <emphasis role="keyword">static</emphasis>&#32;uint32_t&#32;ext_bits(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;data,&#32;<emphasis role="keywordtype">int</emphasis>&#32;msb,&#32;<emphasis role="keywordtype">int</emphasis>&#32;lsb)
<anchor xml:id="_sd_8c_source_1l00604"/>00604 {
<anchor xml:id="_sd_8c_source_1l00605"/>00605 &#32;&#32;&#32;&#32;uint32_t&#32;bits&#32;=&#32;0;
<anchor xml:id="_sd_8c_source_1l00606"/>00606 &#32;&#32;&#32;&#32;uint32_t&#32;size&#32;=&#32;1&#32;+&#32;msb&#32;-&#32;lsb;
<anchor xml:id="_sd_8c_source_1l00607"/>00607 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint32_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;size;&#32;i++)&#32;{
<anchor xml:id="_sd_8c_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;position&#32;=&#32;lsb&#32;+&#32;i;
<anchor xml:id="_sd_8c_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;<emphasis role="keywordtype">byte</emphasis>&#32;=&#32;15&#32;-&#32;(position&#32;&gt;&gt;&#32;3);
<anchor xml:id="_sd_8c_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;bit&#32;=&#32;position&#32;&amp;&#32;0x7;
<anchor xml:id="_sd_8c_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;value&#32;=&#32;(data[byte]&#32;&gt;&gt;&#32;bit)&#32;&amp;&#32;1;
<anchor xml:id="_sd_8c_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bits&#32;|=&#32;value&#32;&lt;&lt;&#32;i;
<anchor xml:id="_sd_8c_source_1l00613"/>00613 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00614"/>00614 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bits;
<anchor xml:id="_sd_8c_source_1l00615"/>00615 }
<anchor xml:id="_sd_8c_source_1l00616"/>00616 
<anchor xml:id="_sd_8c_source_1l00617"/>00617 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_read_bytes(<emphasis role="keywordtype">void</emphasis>*&#32;_config,&#32;uint8_t*&#32;buffer,&#32;uint32_t&#32;length)&#32;{
<anchor xml:id="_sd_8c_source_1l00618"/>00618 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00619"/>00619 &#32;&#32;&#32;&#32;uint16_t&#32;crc;
<anchor xml:id="_sd_8c_source_1l00620"/>00620 
<anchor xml:id="_sd_8c_source_1l00621"/>00621 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;read&#32;until&#32;start&#32;byte&#32;(0xFE)</emphasis>
<anchor xml:id="_sd_8c_source_1l00622"/>00622 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">false</emphasis>&#32;==&#32;_wait_token(config,&#32;<link linkend="_sd_8c_1a16316bd35058685a310b2782003f6461">SPI_START_BLOCK</link>))&#32;{
<anchor xml:id="_sd_8c_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Read&#32;timeout\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_postclock_then_deselect(config);
<anchor xml:id="_sd_8c_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1a42fdf7470707e7b523c36bac1f15d98a">SD_BLOCK_DEVICE_ERROR_NO_RESPONSE</link>;
<anchor xml:id="_sd_8c_source_1l00626"/>00626 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00627"/>00627 
<anchor xml:id="_sd_8c_source_1l00628"/>00628 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;read&#32;data</emphasis>
<anchor xml:id="_sd_8c_source_1l00629"/>00629 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint32_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;length;&#32;i++)&#32;{
<anchor xml:id="_sd_8c_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;_spi_write(config,&#32;SPI_FILL_CHAR);
<anchor xml:id="_sd_8c_source_1l00631"/>00631 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00632"/>00632 
<anchor xml:id="_sd_8c_source_1l00633"/>00633 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;the&#32;CRC16&#32;checksum&#32;for&#32;the&#32;data&#32;block</emphasis>
<anchor xml:id="_sd_8c_source_1l00634"/>00634 &#32;&#32;&#32;&#32;crc&#32;=&#32;(_spi_write(config,&#32;SPI_FILL_CHAR)&#32;&lt;&lt;&#32;8);
<anchor xml:id="_sd_8c_source_1l00635"/>00635 &#32;&#32;&#32;&#32;crc&#32;|=&#32;_spi_write(config,&#32;SPI_FILL_CHAR);
<anchor xml:id="_sd_8c_source_1l00636"/>00636 
<anchor xml:id="_sd_8c_source_1l00637"/>00637 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7d08bfdf6ccc6ec15fef0f38c155794">enable_crc</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;crc_result&#32;=&#32;_crc16(buffer,&#32;length);
<anchor xml:id="_sd_8c_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Compute&#32;and&#32;verify&#32;checksum</emphasis>
<anchor xml:id="_sd_8c_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(crc_result&#32;!=&#32;crc)&#32;{
<anchor xml:id="_sd_8c_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;_read_bytes:&#32;Invalid&#32;CRC&#32;received&#32;0x%&quot;</emphasis>&#32;PRIx16&#32;<emphasis role="stringliteral">&quot;&#32;result&#32;of&#32;computation&#32;0x%&quot;</emphasis>&#32;PRIx32&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>,
<anchor xml:id="_sd_8c_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crc,&#32;crc_result);
<anchor xml:id="_sd_8c_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_postclock_then_deselect(config);
<anchor xml:id="_sd_8c_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1a07208e021a15e0c2b5425e3355c7c2a9">SD_BLOCK_DEVICE_ERROR_CRC</link>;
<anchor xml:id="_sd_8c_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00646"/>00646 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00647"/>00647 &#32;&#32;&#32;&#32;_postclock_then_deselect(config);
<anchor xml:id="_sd_8c_source_1l00648"/>00648 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_sd_8c_source_1l00649"/>00649 }
<anchor xml:id="_sd_8c_source_1l00650"/>00650 
<anchor xml:id="_sd_8c_source_1l00651"/>00651 <emphasis role="keyword">static</emphasis>&#32;uint64_t&#32;_sd_sectors(<emphasis role="keywordtype">void</emphasis>*&#32;_config)&#32;{
<anchor xml:id="_sd_8c_source_1l00652"/>00652 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00653"/>00653 &#32;&#32;&#32;&#32;uint32_t&#32;c_size,&#32;c_size_mult,&#32;read_bl_len;
<anchor xml:id="_sd_8c_source_1l00654"/>00654 &#32;&#32;&#32;&#32;uint32_t&#32;block_len,&#32;mult,&#32;blocknr;
<anchor xml:id="_sd_8c_source_1l00655"/>00655 &#32;&#32;&#32;&#32;uint32_t&#32;hc_c_size;
<anchor xml:id="_sd_8c_source_1l00656"/>00656 &#32;&#32;&#32;&#32;uint64_t&#32;blocks&#32;=&#32;0,&#32;capacity&#32;=&#32;0;
<anchor xml:id="_sd_8c_source_1l00657"/>00657 
<anchor xml:id="_sd_8c_source_1l00658"/>00658 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;CMD9,&#32;Response&#32;R2&#32;(R1&#32;byte&#32;+&#32;16-byte&#32;block&#32;read)</emphasis>
<anchor xml:id="_sd_8c_source_1l00659"/>00659 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fac94c340b43f6e72a115bf05aee14a0c5">CMD9_SEND_CSD</link>,&#32;0x0,&#32;0,&#32;NULL)&#32;!=&#32;0x0)&#32;{
<anchor xml:id="_sd_8c_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Didn&apos;t&#32;get&#32;a&#32;response&#32;from&#32;the&#32;disk\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_sd_8c_source_1l00662"/>00662 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00663"/>00663 &#32;&#32;&#32;&#32;uint8_t&#32;csd[16];
<anchor xml:id="_sd_8c_source_1l00664"/>00664 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_read_bytes(config,&#32;csd,&#32;16)&#32;!=&#32;0)&#32;{
<anchor xml:id="_sd_8c_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Couldn&apos;t&#32;read&#32;csd&#32;response&#32;from&#32;disk\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_sd_8c_source_1l00667"/>00667 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00668"/>00668 
<anchor xml:id="_sd_8c_source_1l00669"/>00669 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;csd_structure&#32;:&#32;csd[127:126]</emphasis>
<anchor xml:id="_sd_8c_source_1l00670"/>00670 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;csd_structure&#32;=&#32;ext_bits(csd,&#32;127,&#32;126);
<anchor xml:id="_sd_8c_source_1l00671"/>00671 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(csd_structure)&#32;{
<anchor xml:id="_sd_8c_source_1l00672"/>00672 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
<anchor xml:id="_sd_8c_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c_size&#32;=&#32;ext_bits(csd,&#32;73,&#32;62);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;c_size&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;csd[73:62]</emphasis>
<anchor xml:id="_sd_8c_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c_size_mult&#32;=&#32;ext_bits(csd,&#32;49,&#32;47);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;c_size_mult&#32;&#32;&#32;:&#32;csd[49:47]</emphasis>
<anchor xml:id="_sd_8c_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read_bl_len&#32;=&#32;ext_bits(csd,&#32;83,&#32;80);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;read_bl_len&#32;&#32;&#32;:&#32;csd[83:80]&#32;-&#32;the&#32;*maximum*&#32;read&#32;block&#32;length</emphasis>
<anchor xml:id="_sd_8c_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;block_len&#32;=&#32;1&#32;&lt;&lt;&#32;read_bl_len;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;BLOCK_LEN&#32;=&#32;2^READ_BL_LEN</emphasis>
<anchor xml:id="_sd_8c_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mult&#32;=&#32;1&#32;&lt;&lt;&#32;(c_size_mult&#32;+&#32;2);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MULT&#32;=&#32;2^C_SIZE_MULT+2&#32;(C_SIZE_MULT&#32;&lt;&#32;8)</emphasis>
<anchor xml:id="_sd_8c_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blocknr&#32;=&#32;(c_size&#32;+&#32;1)&#32;*&#32;mult;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;BLOCKNR&#32;=&#32;(C_SIZE+1)&#32;*&#32;MULT</emphasis>
<anchor xml:id="_sd_8c_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity&#32;=&#32;(uint64_t)blocknr&#32;*&#32;block_len;&#32;&#32;<emphasis role="comment">//&#32;memory&#32;capacity&#32;=&#32;BLOCKNR&#32;*&#32;BLOCK_LEN</emphasis>
<anchor xml:id="_sd_8c_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blocks&#32;=&#32;capacity&#32;/&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>;
<anchor xml:id="_sd_8c_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Standard&#32;Capacity:&#32;c_size:&#32;%&quot;</emphasis>&#32;PRIu32&#32;<emphasis role="stringliteral">&quot;&#32;\n&quot;</emphasis>,&#32;c_size);
<anchor xml:id="_sd_8c_source_1l00682"/>00682 
<anchor xml:id="_sd_8c_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ERASE_BLK_EN&#32;=&#32;1:&#32;Erase&#32;in&#32;multiple&#32;of&#32;512&#32;bytes&#32;supported</emphasis>
<anchor xml:id="_sd_8c_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ext_bits(csd,&#32;46,&#32;46))&#32;{
<anchor xml:id="_sd_8c_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1afcffbc4cfb38671d709c492b08764f59">erase_size</link>&#32;=&#32;<link linkend="_sd_8c_1ae29c04ecc4f5ee4f41694ac4d8a2fdd9">BLOCK_SIZE_HC</link>;
<anchor xml:id="_sd_8c_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ERASE_BLK_EN&#32;=&#32;1:&#32;Erase&#32;in&#32;multiple&#32;of&#32;SECTOR_SIZE&#32;supported</emphasis>
<anchor xml:id="_sd_8c_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1afcffbc4cfb38671d709c492b08764f59">erase_size</link>&#32;=&#32;<link linkend="_sd_8c_1ae29c04ecc4f5ee4f41694ac4d8a2fdd9">BLOCK_SIZE_HC</link>&#32;*&#32;(ext_bits(csd,&#32;45,&#32;39)&#32;+&#32;1);
<anchor xml:id="_sd_8c_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00692"/>00692 
<anchor xml:id="_sd_8c_source_1l00693"/>00693 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="_sd_8c_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hc_c_size&#32;=&#32;ext_bits(csd,&#32;69,&#32;48);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;device&#32;size&#32;:&#32;C_SIZE&#32;:&#32;[69:48]</emphasis>
<anchor xml:id="_sd_8c_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blocks&#32;=&#32;(hc_c_size&#32;+&#32;1)&#32;&lt;&lt;&#32;10;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;block&#32;count&#32;=&#32;C_SIZE+1)&#32;*&#32;1K&#32;byte&#32;(512B&#32;is&#32;block&#32;size)</emphasis>
<anchor xml:id="_sd_8c_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;SDHC/SDXC&#32;Card:&#32;hc_c_size:&#32;%&quot;</emphasis>&#32;PRIu32&#32;<emphasis role="stringliteral">&quot;&#32;\n&quot;</emphasis>,&#32;hc_c_size);
<anchor xml:id="_sd_8c_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ERASE_BLK_EN&#32;is&#32;fixed&#32;to&#32;1,&#32;which&#32;means&#32;host&#32;can&#32;erase&#32;one&#32;or&#32;multiple&#32;of&#32;512&#32;bytes.</emphasis>
<anchor xml:id="_sd_8c_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1afcffbc4cfb38671d709c492b08764f59">erase_size</link>&#32;=&#32;<link linkend="_sd_8c_1ae29c04ecc4f5ee4f41694ac4d8a2fdd9">BLOCK_SIZE_HC</link>;
<anchor xml:id="_sd_8c_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00700"/>00700 
<anchor xml:id="_sd_8c_source_1l00701"/>00701 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="_sd_8c_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;CSD&#32;struct&#32;unsupported\r\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_sd_8c_source_1l00704"/>00704 &#32;&#32;&#32;&#32;};
<anchor xml:id="_sd_8c_source_1l00705"/>00705 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;blocks;
<anchor xml:id="_sd_8c_source_1l00706"/>00706 }
<anchor xml:id="_sd_8c_source_1l00707"/>00707 
<anchor xml:id="_sd_8c_source_1l00708"/>00708 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_freq(<emphasis role="keywordtype">void</emphasis>*&#32;_config)&#32;{
<anchor xml:id="_sd_8c_source_1l00709"/>00709 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00710"/>00710 
<anchor xml:id="_sd_8c_source_1l00711"/>00711 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Max&#32;frequency&#32;supported&#32;is&#32;25MHZ</emphasis>
<anchor xml:id="_sd_8c_source_1l00712"/>00712 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(config-&gt;<link linkend="_structblockdevice__sd__config__t_1af7854657ebfe51492086bc83e74d15a8">hz</link>&#32;&lt;=&#32;25000000)&#32;{
<anchor xml:id="_sd_8c_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spi_set_baudrate(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1af7854657ebfe51492086bc83e74d15a8">hz</link>);
<anchor xml:id="_sd_8c_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_sd_8c_source_1l00715"/>00715 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00716"/>00716 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;Switch&#32;function&#32;to&#32;be&#32;implemented&#32;for&#32;higher&#32;frequency</emphasis>
<anchor xml:id="_sd_8c_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1af7854657ebfe51492086bc83e74d15a8">hz</link>&#32;=&#32;25000000;
<anchor xml:id="_sd_8c_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spi_set_baudrate(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1af7854657ebfe51492086bc83e74d15a8">hz</link>);
<anchor xml:id="_sd_8c_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-EINVAL;
<anchor xml:id="_sd_8c_source_1l00720"/>00720 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00721"/>00721 }
<anchor xml:id="_sd_8c_source_1l00722"/>00722 
<anchor xml:id="_sd_8c_source_1l00723"/>00723 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;init(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device)&#32;{
<anchor xml:id="_sd_8c_source_1l00724"/>00724 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;device-&gt;<link linkend="_structblockdevice_1a73a27f59d5175f4a31d4ab3cd2a7e3c0">config</link>;
<anchor xml:id="_sd_8c_source_1l00725"/>00725 &#32;&#32;&#32;&#32;mutex_enter_blocking(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00726"/>00726 
<anchor xml:id="_sd_8c_source_1l00727"/>00727 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;init_card(config);
<anchor xml:id="_sd_8c_source_1l00728"/>00728 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a4ba68242a9f77a5933812c9d46feabfe">is_initialized</link>&#32;=&#32;(err&#32;==&#32;<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>);
<anchor xml:id="_sd_8c_source_1l00729"/>00729 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!config-&gt;<link linkend="_structblockdevice__sd__config__t_1a4ba68242a9f77a5933812c9d46feabfe">is_initialized</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Fail&#32;to&#32;initialize&#32;card\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;err;
<anchor xml:id="_sd_8c_source_1l00733"/>00733 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00734"/>00734 &#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;init&#32;card&#32;=&#32;%d\n&quot;</emphasis>,&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a4ba68242a9f77a5933812c9d46feabfe">is_initialized</link>);
<anchor xml:id="_sd_8c_source_1l00735"/>00735 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1aad8740c5c8c25b8e830654989112fc88">total_sectors</link>&#32;=&#32;_sd_sectors(config);
<anchor xml:id="_sd_8c_source_1l00736"/>00736 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;CMD9&#32;failed</emphasis>
<anchor xml:id="_sd_8c_source_1l00737"/>00737 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0&#32;==&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1aad8740c5c8c25b8e830654989112fc88">total_sectors</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba228ff6ba36b53da202b8b66b772f4774">BD_ERROR_DEVICE_ERROR</link>;
<anchor xml:id="_sd_8c_source_1l00740"/>00740 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00741"/>00741 
<anchor xml:id="_sd_8c_source_1l00742"/>00742 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;block&#32;length&#32;to&#32;512&#32;(CMD16)</emphasis>
<anchor xml:id="_sd_8c_source_1l00743"/>00743 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa69b3ca3db78b1f657a5958a36dab2d1e">CMD16_SET_BLOCKLEN</link>,&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>,&#32;0,&#32;NULL)&#32;!=&#32;0)&#32;{
<anchor xml:id="_sd_8c_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Set&#32;%&quot;</emphasis>&#32;PRIu32&#32;<emphasis role="stringliteral">&quot;-byte&#32;block&#32;timed&#32;out\n&quot;</emphasis>,&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>);
<anchor xml:id="_sd_8c_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba228ff6ba36b53da202b8b66b772f4774">BD_ERROR_DEVICE_ERROR</link>;
<anchor xml:id="_sd_8c_source_1l00747"/>00747 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00748"/>00748 
<anchor xml:id="_sd_8c_source_1l00749"/>00749 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;SCK&#32;for&#32;data&#32;transfer</emphasis>
<anchor xml:id="_sd_8c_source_1l00750"/>00750 &#32;&#32;&#32;&#32;err&#32;=&#32;_freq(config);
<anchor xml:id="_sd_8c_source_1l00751"/>00751 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(err)&#32;{
<anchor xml:id="_sd_8c_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;err;
<anchor xml:id="_sd_8c_source_1l00754"/>00754 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00755"/>00755 
<anchor xml:id="_sd_8c_source_1l00756"/>00756 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a9a2c51cef39211e0d1c42fc3e395caa0">is_initialized</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_sd_8c_source_1l00757"/>00757 &#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00758"/>00758 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>;
<anchor xml:id="_sd_8c_source_1l00759"/>00759 }
<anchor xml:id="_sd_8c_source_1l00760"/>00760 
<anchor xml:id="_sd_8c_source_1l00761"/>00761 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_valid_read(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;addr,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;size)&#32;{
<anchor xml:id="_sd_8c_source_1l00762"/>00762 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(addr&#32;%&#32;device-&gt;<link linkend="_structblockdevice_1a44ac5dc03dd62d3c48abbdbd0c9fed4d">read_size</link>&#32;==&#32;0&#32;&amp;&amp;
<anchor xml:id="_sd_8c_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;%&#32;device-&gt;<link linkend="_structblockdevice_1a44ac5dc03dd62d3c48abbdbd0c9fed4d">read_size</link>&#32;==&#32;0&#32;&amp;&amp;
<anchor xml:id="_sd_8c_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addr&#32;+&#32;size&#32;&lt;=&#32;device-&gt;size(device));
<anchor xml:id="_sd_8c_source_1l00765"/>00765 }
<anchor xml:id="_sd_8c_source_1l00766"/>00766 
<anchor xml:id="_sd_8c_source_1l00767"/>00767 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_valid_program(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;addr,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;size)&#32;{
<anchor xml:id="_sd_8c_source_1l00768"/>00768 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(addr&#32;%&#32;device-&gt;<link linkend="_structblockdevice_1a79e2a5807006883bcbf1f60a91bdaf98">program_size</link>&#32;==&#32;0&#32;&amp;&amp;
<anchor xml:id="_sd_8c_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;%&#32;device-&gt;<link linkend="_structblockdevice_1a79e2a5807006883bcbf1f60a91bdaf98">program_size</link>&#32;==&#32;0&#32;&amp;&amp;
<anchor xml:id="_sd_8c_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addr&#32;+&#32;size&#32;&lt;=&#32;device-&gt;size(device));
<anchor xml:id="_sd_8c_source_1l00771"/>00771 }
<anchor xml:id="_sd_8c_source_1l00772"/>00772 
<anchor xml:id="_sd_8c_source_1l00773"/>00773 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;deinit(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device)&#32;{
<anchor xml:id="_sd_8c_source_1l00774"/>00774 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a9a2c51cef39211e0d1c42fc3e395caa0">is_initialized</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_sd_8c_source_1l00775"/>00775 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_sd_8c_source_1l00776"/>00776 }
<anchor xml:id="_sd_8c_source_1l00777"/>00777 
<anchor xml:id="_sd_8c_source_1l00778"/>00778 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sync(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device)&#32;{
<anchor xml:id="_sd_8c_source_1l00779"/>00779 &#32;&#32;&#32;&#32;(void)device;
<anchor xml:id="_sd_8c_source_1l00780"/>00780 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_sd_8c_source_1l00781"/>00781 }
<anchor xml:id="_sd_8c_source_1l00782"/>00782 
<anchor xml:id="_sd_8c_source_1l00783"/>00783 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;_read(<emphasis role="keywordtype">void</emphasis>*&#32;_config,&#32;uint8_t*&#32;buffer,&#32;uint32_t&#32;length)&#32;{
<anchor xml:id="_sd_8c_source_1l00784"/>00784 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00785"/>00785 
<anchor xml:id="_sd_8c_source_1l00786"/>00786 &#32;&#32;&#32;&#32;uint16_t&#32;crc;
<anchor xml:id="_sd_8c_source_1l00787"/>00787 
<anchor xml:id="_sd_8c_source_1l00788"/>00788 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;read&#32;until&#32;start&#32;byte&#32;(0xFE)</emphasis>
<anchor xml:id="_sd_8c_source_1l00789"/>00789 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">false</emphasis>&#32;==&#32;_wait_token(config,&#32;<link linkend="_sd_8c_1a16316bd35058685a310b2782003f6461">SPI_START_BLOCK</link>))&#32;{
<anchor xml:id="_sd_8c_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Read&#32;timeout\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1a42fdf7470707e7b523c36bac1f15d98a">SD_BLOCK_DEVICE_ERROR_NO_RESPONSE</link>;
<anchor xml:id="_sd_8c_source_1l00792"/>00792 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00793"/>00793 
<anchor xml:id="_sd_8c_source_1l00794"/>00794 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;read&#32;data</emphasis>
<anchor xml:id="_sd_8c_source_1l00795"/>00795 &#32;&#32;&#32;&#32;spi_read_blocking(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;0xFF,&#32;buffer,&#32;length);
<anchor xml:id="_sd_8c_source_1l00796"/>00796 
<anchor xml:id="_sd_8c_source_1l00797"/>00797 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;the&#32;CRC16&#32;checksum&#32;for&#32;the&#32;data&#32;block</emphasis>
<anchor xml:id="_sd_8c_source_1l00798"/>00798 &#32;&#32;&#32;&#32;crc&#32;=&#32;(_spi_write(config,&#32;SPI_FILL_CHAR)&#32;&lt;&lt;&#32;8);
<anchor xml:id="_sd_8c_source_1l00799"/>00799 &#32;&#32;&#32;&#32;crc&#32;|=&#32;_spi_write(config,&#32;SPI_FILL_CHAR);
<anchor xml:id="_sd_8c_source_1l00800"/>00800 
<anchor xml:id="_sd_8c_source_1l00801"/>00801 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7d08bfdf6ccc6ec15fef0f38c155794">enable_crc</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint16_t&#32;crc_result&#32;=&#32;_crc16(buffer,&#32;length);
<anchor xml:id="_sd_8c_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(crc_result&#32;!=&#32;crc)&#32;{
<anchor xml:id="_sd_8c_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;_read_bytes:&#32;Invalid&#32;CRC&#32;received&#32;0x%&quot;</emphasis>&#32;PRIx16&#32;<emphasis role="stringliteral">&quot;&#32;result&#32;of&#32;computation&#32;0x%&quot;</emphasis>&#32;PRIx16&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>,
<anchor xml:id="_sd_8c_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crc,&#32;crc_result);
<anchor xml:id="_sd_8c_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1a07208e021a15e0c2b5425e3355c7c2a9">SD_BLOCK_DEVICE_ERROR_CRC</link>;
<anchor xml:id="_sd_8c_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00808"/>00808 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00809"/>00809 
<anchor xml:id="_sd_8c_source_1l00810"/>00810 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_sd_8c_source_1l00811"/>00811 }
<anchor xml:id="_sd_8c_source_1l00812"/>00812 
<anchor xml:id="_sd_8c_source_1l00813"/>00813 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;read(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;_buffer,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;addr,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;size)&#32;{
<anchor xml:id="_sd_8c_source_1l00814"/>00814 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;device-&gt;<link linkend="_structblockdevice_1a73a27f59d5175f4a31d4ab3cd2a7e3c0">config</link>;
<anchor xml:id="_sd_8c_source_1l00815"/>00815 &#32;&#32;&#32;&#32;mutex_enter_blocking(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00816"/>00816 
<anchor xml:id="_sd_8c_source_1l00817"/>00817 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!is_valid_read(device,&#32;addr,&#32;size))&#32;{
<anchor xml:id="_sd_8c_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1a7204a59a7a908a0b8559c4868129f4c4">SD_BLOCK_DEVICE_ERROR_PARAMETER</link>;
<anchor xml:id="_sd_8c_source_1l00820"/>00820 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00821"/>00821 
<anchor xml:id="_sd_8c_source_1l00822"/>00822 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!config-&gt;<link linkend="_structblockdevice__sd__config__t_1a4ba68242a9f77a5933812c9d46feabfe">is_initialized</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1a7204a59a7a908a0b8559c4868129f4c4">SD_BLOCK_DEVICE_ERROR_PARAMETER</link>;
<anchor xml:id="_sd_8c_source_1l00825"/>00825 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00826"/>00826 
<anchor xml:id="_sd_8c_source_1l00827"/>00827 &#32;&#32;&#32;&#32;uint8_t*&#32;buffer&#32;=&#32;(uint8_t*)_buffer;
<anchor xml:id="_sd_8c_source_1l00828"/>00828 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;status&#32;=&#32;<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>;
<anchor xml:id="_sd_8c_source_1l00829"/>00829 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;block_count&#32;=&#32;size&#32;/&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>;
<anchor xml:id="_sd_8c_source_1l00830"/>00830 
<anchor xml:id="_sd_8c_source_1l00831"/>00831 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SDSC&#32;Card&#32;(CCS=0)&#32;uses&#32;byte&#32;unit&#32;address</emphasis>
<anchor xml:id="_sd_8c_source_1l00832"/>00832 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SDHC&#32;and&#32;SDXC&#32;Cards&#32;(CCS=1)&#32;use&#32;block&#32;unit&#32;address&#32;(512&#32;Bytes&#32;unit)</emphasis>
<anchor xml:id="_sd_8c_source_1l00833"/>00833 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a7ada6417d63a99e3745b744c2d8c0dba">SDCARD_V2HC</link>&#32;==&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addr&#32;=&#32;addr&#32;/&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>;
<anchor xml:id="_sd_8c_source_1l00835"/>00835 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00836"/>00836 
<anchor xml:id="_sd_8c_source_1l00837"/>00837 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;command&#32;ro&#32;receive&#32;data</emphasis>
<anchor xml:id="_sd_8c_source_1l00838"/>00838 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(block_count&#32;&gt;&#32;1)&#32;{
<anchor xml:id="_sd_8c_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa0425449a99e80e959b0376b9facbf86c">CMD18_READ_MULTIPLE_BLOCK</link>,&#32;addr,&#32;0,&#32;NULL);
<anchor xml:id="_sd_8c_source_1l00840"/>00840 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00841"/>00841 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faa8ea642c880b96150fe8d7387b3c869f">CMD17_READ_SINGLE_BLOCK</link>,&#32;addr,&#32;0,&#32;NULL);
<anchor xml:id="_sd_8c_source_1l00843"/>00843 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00844"/>00844 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>&#32;!=&#32;status)&#32;{
<anchor xml:id="_sd_8c_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00847"/>00847 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00848"/>00848 
<anchor xml:id="_sd_8c_source_1l00849"/>00849 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;receive&#32;the&#32;data&#32;:&#32;one&#32;block&#32;at&#32;a&#32;time</emphasis>
<anchor xml:id="_sd_8c_source_1l00850"/>00850 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(block_count)&#32;{
<anchor xml:id="_sd_8c_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(0&#32;!=&#32;_read(config,&#32;buffer,&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>))&#32;{
<anchor xml:id="_sd_8c_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<link linkend="_sd_8c_1a42fdf7470707e7b523c36bac1f15d98a">SD_BLOCK_DEVICE_ERROR_NO_RESPONSE</link>;
<anchor xml:id="_sd_8c_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;+=&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>;
<anchor xml:id="_sd_8c_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--block_count;
<anchor xml:id="_sd_8c_source_1l00857"/>00857 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00858"/>00858 &#32;&#32;&#32;&#32;_postclock_then_deselect(config);
<anchor xml:id="_sd_8c_source_1l00859"/>00859 
<anchor xml:id="_sd_8c_source_1l00860"/>00860 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;CMD12(0x00000000)&#32;to&#32;stop&#32;the&#32;transmission&#32;for&#32;multi-block&#32;transfer</emphasis>
<anchor xml:id="_sd_8c_source_1l00861"/>00861 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(size&#32;&gt;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa50a1b06fbfbfac3e88777e375713194b">CMD12_STOP_TRANSMISSION</link>,&#32;0x0,&#32;0,&#32;NULL);
<anchor xml:id="_sd_8c_source_1l00863"/>00863 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00864"/>00864 
<anchor xml:id="_sd_8c_source_1l00865"/>00865 &#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00866"/>00866 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00867"/>00867 }
<anchor xml:id="_sd_8c_source_1l00868"/>00868 
<anchor xml:id="_sd_8c_source_1l00869"/>00869 <emphasis role="keyword">static</emphasis>&#32;uint8_t&#32;_write(<emphasis role="keywordtype">void</emphasis>*&#32;_config,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;buffer,&#32;uint8_t&#32;token,&#32;uint32_t&#32;length)&#32;{
<anchor xml:id="_sd_8c_source_1l00870"/>00870 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;_config;
<anchor xml:id="_sd_8c_source_1l00871"/>00871 
<anchor xml:id="_sd_8c_source_1l00872"/>00872 &#32;&#32;&#32;&#32;uint32_t&#32;crc&#32;=&#32;(~0);
<anchor xml:id="_sd_8c_source_1l00873"/>00873 &#32;&#32;&#32;&#32;uint8_t&#32;response&#32;=&#32;0xFF;
<anchor xml:id="_sd_8c_source_1l00874"/>00874 
<anchor xml:id="_sd_8c_source_1l00875"/>00875 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;indicate&#32;start&#32;of&#32;block</emphasis>
<anchor xml:id="_sd_8c_source_1l00876"/>00876 &#32;&#32;&#32;&#32;_spi_write(config,&#32;token);
<anchor xml:id="_sd_8c_source_1l00877"/>00877 
<anchor xml:id="_sd_8c_source_1l00878"/>00878 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;write&#32;the&#32;data</emphasis>
<anchor xml:id="_sd_8c_source_1l00879"/>00879 &#32;&#32;&#32;&#32;spi_write_blocking(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>,&#32;buffer,&#32;length);
<anchor xml:id="_sd_8c_source_1l00880"/>00880 
<anchor xml:id="_sd_8c_source_1l00881"/>00881 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7d08bfdf6ccc6ec15fef0f38c155794">enable_crc</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00882"/>00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crc&#32;=&#32;_crc16(buffer,&#32;length);
<anchor xml:id="_sd_8c_source_1l00883"/>00883 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00884"/>00884 
<anchor xml:id="_sd_8c_source_1l00885"/>00885 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;write&#32;the&#32;checksum&#32;CRC-16</emphasis>
<anchor xml:id="_sd_8c_source_1l00886"/>00886 &#32;&#32;&#32;&#32;_spi_write(config,&#32;crc&#32;&gt;&gt;&#32;8);
<anchor xml:id="_sd_8c_source_1l00887"/>00887 &#32;&#32;&#32;&#32;_spi_write(config,&#32;crc);
<anchor xml:id="_sd_8c_source_1l00888"/>00888 
<anchor xml:id="_sd_8c_source_1l00889"/>00889 
<anchor xml:id="_sd_8c_source_1l00890"/>00890 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;the&#32;response&#32;token</emphasis>
<anchor xml:id="_sd_8c_source_1l00891"/>00891 &#32;&#32;&#32;&#32;response&#32;=&#32;_spi_write(config,&#32;SPI_FILL_CHAR);
<anchor xml:id="_sd_8c_source_1l00892"/>00892 
<anchor xml:id="_sd_8c_source_1l00893"/>00893 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Wait&#32;for&#32;last&#32;block&#32;to&#32;be&#32;written</emphasis>
<anchor xml:id="_sd_8c_source_1l00894"/>00894 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">false</emphasis>&#32;==&#32;_wait_ready(config,&#32;<link linkend="_sd_8c_1a717a8dd1956ddc8608e30d577a0efa77">SD_COMMAND_TIMEOUT</link>))&#32;{
<anchor xml:id="_sd_8c_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Card&#32;not&#32;ready&#32;yet&#32;\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l00896"/>00896 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00897"/>00897 
<anchor xml:id="_sd_8c_source_1l00898"/>00898 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(response&#32;&amp;&#32;<link linkend="_sd_8c_1a0e561b17b7546b82dd822376f661c917">SPI_DATA_RESPONSE_MASK</link>);
<anchor xml:id="_sd_8c_source_1l00899"/>00899 }
<anchor xml:id="_sd_8c_source_1l00900"/>00900 
<anchor xml:id="_sd_8c_source_1l00901"/>00901 
<anchor xml:id="_sd_8c_source_1l00902"/>00902 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;program(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;_buffer,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;addr,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;size)&#32;{
<anchor xml:id="_sd_8c_source_1l00903"/>00903 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;device-&gt;<link linkend="_structblockdevice_1a73a27f59d5175f4a31d4ab3cd2a7e3c0">config</link>;
<anchor xml:id="_sd_8c_source_1l00904"/>00904 &#32;&#32;&#32;&#32;mutex_enter_blocking(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00905"/>00905 
<anchor xml:id="_sd_8c_source_1l00906"/>00906 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!is_valid_program(device,&#32;addr,&#32;size))&#32;{
<anchor xml:id="_sd_8c_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1a7204a59a7a908a0b8559c4868129f4c4">SD_BLOCK_DEVICE_ERROR_PARAMETER</link>;
<anchor xml:id="_sd_8c_source_1l00909"/>00909 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00910"/>00910 
<anchor xml:id="_sd_8c_source_1l00911"/>00911 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!config-&gt;<link linkend="_structblockdevice__sd__config__t_1a4ba68242a9f77a5933812c9d46feabfe">is_initialized</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1a6e13316f0b76a30fd38db3f0d84e58d0">SD_BLOCK_DEVICE_ERROR_NO_INIT</link>;
<anchor xml:id="_sd_8c_source_1l00914"/>00914 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00915"/>00915 
<anchor xml:id="_sd_8c_source_1l00916"/>00916 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;buffer&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;uint8_t*)_buffer;
<anchor xml:id="_sd_8c_source_1l00917"/>00917 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;status&#32;=&#32;<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>;
<anchor xml:id="_sd_8c_source_1l00918"/>00918 &#32;&#32;&#32;&#32;uint8_t&#32;response;
<anchor xml:id="_sd_8c_source_1l00919"/>00919 
<anchor xml:id="_sd_8c_source_1l00920"/>00920 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;block&#32;count</emphasis>
<anchor xml:id="_sd_8c_source_1l00921"/>00921 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;block_count&#32;=&#32;size&#32;/&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>;
<anchor xml:id="_sd_8c_source_1l00922"/>00922 
<anchor xml:id="_sd_8c_source_1l00923"/>00923 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SDSC&#32;Card&#32;(CCS=0)&#32;uses&#32;byte&#32;unit&#32;address</emphasis>
<anchor xml:id="_sd_8c_source_1l00924"/>00924 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SDHC&#32;and&#32;SDXC&#32;Cards&#32;(CCS=1)&#32;use&#32;block&#32;unit&#32;address&#32;(512&#32;Bytes&#32;unit)</emphasis>
<anchor xml:id="_sd_8c_source_1l00925"/>00925 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a7ada6417d63a99e3745b744c2d8c0dba">SDCARD_V2HC</link>&#32;==&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00926"/>00926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addr&#32;=&#32;addr&#32;/&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>;
<anchor xml:id="_sd_8c_source_1l00927"/>00927 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00928"/>00928 
<anchor xml:id="_sd_8c_source_1l00929"/>00929 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;command&#32;to&#32;perform&#32;write&#32;operation</emphasis>
<anchor xml:id="_sd_8c_source_1l00930"/>00930 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(block_count&#32;==&#32;1)&#32;{
<anchor xml:id="_sd_8c_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Single&#32;block&#32;write&#32;command</emphasis>
<anchor xml:id="_sd_8c_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>&#32;!=&#32;(status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6facaf0335a4dc52fec2cd69fa926c240d3">CMD24_WRITE_BLOCK</link>,&#32;addr,&#32;0,&#32;NULL)))&#32;{
<anchor xml:id="_sd_8c_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00936"/>00936 
<anchor xml:id="_sd_8c_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;data&#32;</emphasis>
<anchor xml:id="_sd_8c_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;response&#32;=&#32;_write(config,&#32;buffer,&#32;<link linkend="_sd_8c_1a16316bd35058685a310b2782003f6461">SPI_START_BLOCK</link>,&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>);
<anchor xml:id="_sd_8c_source_1l00939"/>00939 
<anchor xml:id="_sd_8c_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;CRC&#32;and&#32;general&#32;write&#32;error&#32;are&#32;communicated&#32;via&#32;response&#32;token</emphasis>
<anchor xml:id="_sd_8c_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(response&#32;!=&#32;<link linkend="_sd_8c_1adf4c36356a3259c4686dd6e534f3c75c">SPI_DATA_ACCEPTED</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00942"/>00942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Single&#32;Block&#32;Write&#32;failed:&#32;0x%x&#32;\n&quot;</emphasis>,&#32;response);
<anchor xml:id="_sd_8c_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<link linkend="_sd_8c_1a0d74153e7cf51464b90cbc47cbc83b2e">SD_BLOCK_DEVICE_ERROR_WRITE</link>;
<anchor xml:id="_sd_8c_source_1l00944"/>00944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00945"/>00945 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00946"/>00946 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pre-erase&#32;setting&#32;prior&#32;to&#32;multiple&#32;block&#32;write&#32;operation</emphasis>
<anchor xml:id="_sd_8c_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa176498dc1b43efc905fc638ace570d5d">ACMD23_SET_WR_BLK_ERASE_COUNT</link>,&#32;block_count,&#32;1,&#32;NULL);
<anchor xml:id="_sd_8c_source_1l00949"/>00949 
<anchor xml:id="_sd_8c_source_1l00950"/>00950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Multiple&#32;block&#32;write&#32;command</emphasis>
<anchor xml:id="_sd_8c_source_1l00951"/>00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>&#32;!=&#32;(status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fafaaf5657d5198f338bb555db8dbe0977">CMD25_WRITE_MULTIPLE_BLOCK</link>,&#32;addr,&#32;0,&#32;NULL)))&#32;{
<anchor xml:id="_sd_8c_source_1l00952"/>00952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00955"/>00955 
<anchor xml:id="_sd_8c_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;the&#32;data:&#32;one&#32;block&#32;at&#32;a&#32;time</emphasis>
<anchor xml:id="_sd_8c_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;response&#32;=&#32;_write(config,&#32;buffer,&#32;<link linkend="_sd_8c_1adaa72ab93c9e5bdf1176098cb9c2c4a0">SPI_START_BLK_MUL_WRITE</link>,&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>);
<anchor xml:id="_sd_8c_source_1l00959"/>00959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(response&#32;!=&#32;<link linkend="_sd_8c_1adf4c36356a3259c4686dd6e534f3c75c">SPI_DATA_ACCEPTED</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;debug_if(<link linkend="_sd_8c_1a239e7e00cd09dfabb594162b0c450ccd">SD_DBG</link>,&#32;<emphasis role="stringliteral">&quot;Multiple&#32;Block&#32;Write&#32;failed:&#32;0x%x&#32;\n&quot;</emphasis>,&#32;response);
<anchor xml:id="_sd_8c_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sd_8c_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;+=&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>;
<anchor xml:id="_sd_8c_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(--block_count);&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Receive&#32;all&#32;blocks&#32;of&#32;data</emphasis>
<anchor xml:id="_sd_8c_source_1l00965"/>00965 
<anchor xml:id="_sd_8c_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;In&#32;a&#32;Multiple&#32;Block&#32;write&#32;operation,&#32;the&#32;stop&#32;transmission&#32;will&#32;be&#32;done&#32;by</emphasis>
<anchor xml:id="_sd_8c_source_1l00967"/>00967 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;sending&#32;&apos;Stop&#32;Tran&apos;&#32;token&#32;instead&#32;of&#32;&apos;Start&#32;Block&apos;&#32;token&#32;at&#32;the&#32;beginning</emphasis>
<anchor xml:id="_sd_8c_source_1l00968"/>00968 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;of&#32;the&#32;next&#32;block</emphasis>
<anchor xml:id="_sd_8c_source_1l00969"/>00969 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_sd_8c_source_1l00970"/>00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_spi_write(config,&#32;<link linkend="_sd_8c_1a0dd35214020ca96c70838c6e2d206cc6">SPI_STOP_TRAN</link>);
<anchor xml:id="_sd_8c_source_1l00971"/>00971 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l00972"/>00972 
<anchor xml:id="_sd_8c_source_1l00973"/>00973 &#32;&#32;&#32;&#32;_postclock_then_deselect(config);
<anchor xml:id="_sd_8c_source_1l00974"/>00974 &#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00975"/>00975 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l00976"/>00976 }
<anchor xml:id="_sd_8c_source_1l00977"/>00977 
<anchor xml:id="_sd_8c_source_1l00978"/>00978 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;erase(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;addr,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;size)&#32;{
<anchor xml:id="_sd_8c_source_1l00979"/>00979 &#32;&#32;&#32;&#32;(void)device;
<anchor xml:id="_sd_8c_source_1l00980"/>00980 &#32;&#32;&#32;&#32;(void)addr;
<anchor xml:id="_sd_8c_source_1l00981"/>00981 &#32;&#32;&#32;&#32;(void)size;
<anchor xml:id="_sd_8c_source_1l00982"/>00982 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_sd_8c_source_1l00983"/>00983 }
<anchor xml:id="_sd_8c_source_1l00984"/>00984 
<anchor xml:id="_sd_8c_source_1l00985"/>00985 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;_is_valid_trim(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;addr,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;size)&#32;{
<anchor xml:id="_sd_8c_source_1l00986"/>00986 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;device-&gt;<link linkend="_structblockdevice_1a73a27f59d5175f4a31d4ab3cd2a7e3c0">config</link>;
<anchor xml:id="_sd_8c_source_1l00987"/>00987 
<anchor xml:id="_sd_8c_source_1l00988"/>00988 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(addr&#32;%&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1afcffbc4cfb38671d709c492b08764f59">erase_size</link>&#32;==&#32;0&#32;&amp;&amp;
<anchor xml:id="_sd_8c_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;%&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1afcffbc4cfb38671d709c492b08764f59">erase_size</link>&#32;==&#32;0&#32;&amp;&amp;
<anchor xml:id="_sd_8c_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addr&#32;+&#32;size&#32;&lt;=&#32;device-&gt;size(device));
<anchor xml:id="_sd_8c_source_1l00991"/>00991 }
<anchor xml:id="_sd_8c_source_1l00992"/>00992 
<anchor xml:id="_sd_8c_source_1l00993"/>00993 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;trim(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;addr,&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;size)&#32;{
<anchor xml:id="_sd_8c_source_1l00994"/>00994 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;device-&gt;<link linkend="_structblockdevice_1a73a27f59d5175f4a31d4ab3cd2a7e3c0">config</link>;
<anchor xml:id="_sd_8c_source_1l00995"/>00995 &#32;&#32;&#32;&#32;mutex_enter_blocking(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00996"/>00996 
<anchor xml:id="_sd_8c_source_1l00997"/>00997 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!_is_valid_trim(device,&#32;addr,&#32;size))&#32;{
<anchor xml:id="_sd_8c_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1a7204a59a7a908a0b8559c4868129f4c4">SD_BLOCK_DEVICE_ERROR_PARAMETER</link>;
<anchor xml:id="_sd_8c_source_1l01000"/>01000 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l01001"/>01001 
<anchor xml:id="_sd_8c_source_1l01002"/>01002 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!config-&gt;<link linkend="_structblockdevice__sd__config__t_1a4ba68242a9f77a5933812c9d46feabfe">is_initialized</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l01003"/>01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l01004"/>01004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_sd_8c_1a6e13316f0b76a30fd38db3f0d84e58d0">SD_BLOCK_DEVICE_ERROR_NO_INIT</link>;
<anchor xml:id="_sd_8c_source_1l01005"/>01005 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l01006"/>01006 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;status&#32;=&#32;<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>;
<anchor xml:id="_sd_8c_source_1l01007"/>01007 
<anchor xml:id="_sd_8c_source_1l01008"/>01008 &#32;&#32;&#32;&#32;size&#32;-=&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>;
<anchor xml:id="_sd_8c_source_1l01009"/>01009 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SDSC&#32;Card&#32;(CCS=0)&#32;uses&#32;byte&#32;unit&#32;address</emphasis>
<anchor xml:id="_sd_8c_source_1l01010"/>01010 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SDHC&#32;and&#32;SDXC&#32;Cards&#32;(CCS=1)&#32;use&#32;block&#32;unit&#32;address&#32;(512&#32;Bytes&#32;unit)</emphasis>
<anchor xml:id="_sd_8c_source_1l01011"/>01011 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a7ada6417d63a99e3745b744c2d8c0dba">SDCARD_V2HC</link>&#32;==&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>)&#32;{
<anchor xml:id="_sd_8c_source_1l01012"/>01012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;=&#32;size&#32;/&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>;
<anchor xml:id="_sd_8c_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addr&#32;=&#32;addr&#32;/&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>;
<anchor xml:id="_sd_8c_source_1l01014"/>01014 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l01015"/>01015 
<anchor xml:id="_sd_8c_source_1l01016"/>01016 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Start&#32;lba&#32;sent&#32;in&#32;start&#32;command</emphasis>
<anchor xml:id="_sd_8c_source_1l01017"/>01017 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>&#32;!=&#32;(status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6fa42493da8336966eedb155f9fd5078725">CMD32_ERASE_WR_BLK_START_ADDR</link>,&#32;addr,&#32;0,&#32;NULL)))&#32;{
<anchor xml:id="_sd_8c_source_1l01018"/>01018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l01019"/>01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l01020"/>01020 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l01021"/>01021 
<anchor xml:id="_sd_8c_source_1l01022"/>01022 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;End&#32;lba&#32;=&#32;addr+size&#32;sent&#32;in&#32;end&#32;addr&#32;command</emphasis>
<anchor xml:id="_sd_8c_source_1l01023"/>01023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_blockdevice_8h_1a6202ecf5974ef985db5f3a2adfd81abba75df174773e6ad20c734b0cee152387c">BD_ERROR_OK</link>&#32;!=&#32;(status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faab58521e43613f07685f8c125e53cc38">CMD33_ERASE_WR_BLK_END_ADDR</link>,&#32;addr&#32;+&#32;size,&#32;0,&#32;NULL)))&#32;{
<anchor xml:id="_sd_8c_source_1l01024"/>01024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l01025"/>01025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l01026"/>01026 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l01027"/>01027 &#32;&#32;&#32;&#32;status&#32;=&#32;_cmd(config,&#32;<link linkend="_sd_8c_1a8c427e20c393ae6b71ec013e243a9f6faa179ed73c43cdbb988f56eeea98a0c64">CMD38_ERASE</link>,&#32;0x0,&#32;0,&#32;NULL);
<anchor xml:id="_sd_8c_source_1l01028"/>01028 
<anchor xml:id="_sd_8c_source_1l01029"/>01029 &#32;&#32;&#32;&#32;mutex_exit(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l01030"/>01030 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="_sd_8c_source_1l01031"/>01031 }
<anchor xml:id="_sd_8c_source_1l01032"/>01032 
<anchor xml:id="_sd_8c_source_1l01033"/>01033 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_blockdevice_8h_1a0457670798518d3ca4a2e67aec5d2cc6">bd_size_t</link>&#32;size(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device)&#32;{
<anchor xml:id="_sd_8c_source_1l01034"/>01034 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;device-&gt;<link linkend="_structblockdevice_1a73a27f59d5175f4a31d4ab3cd2a7e3c0">config</link>;
<anchor xml:id="_sd_8c_source_1l01035"/>01035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>&#32;*&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1aad8740c5c8c25b8e830654989112fc88">total_sectors</link>;
<anchor xml:id="_sd_8c_source_1l01036"/>01036 }
<anchor xml:id="_sd_8c_source_1l01037"/>01037 
<anchor xml:id="_sd_8c_source_1l01038"/><link linkend="_group__blockdevice__sd_1ga4711fc3f61142ce9387c984809bd3db8">01038</link> <link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;<link linkend="_group__blockdevice__sd_1ga4711fc3f61142ce9387c984809bd3db8">blockdevice_sd_create</link>(spi_inst_t*&#32;spi_inst,
<anchor xml:id="_sd_8c_source_1l01039"/>01039 &#32;&#32;&#32;&#32;uint8_t&#32;mosi,
<anchor xml:id="_sd_8c_source_1l01040"/>01040 &#32;&#32;&#32;&#32;uint8_t&#32;miso,
<anchor xml:id="_sd_8c_source_1l01041"/>01041 &#32;&#32;&#32;&#32;uint8_t&#32;sclk,
<anchor xml:id="_sd_8c_source_1l01042"/>01042 &#32;&#32;&#32;&#32;uint8_t&#32;cs,
<anchor xml:id="_sd_8c_source_1l01043"/>01043 &#32;&#32;&#32;&#32;uint32_t&#32;hz,
<anchor xml:id="_sd_8c_source_1l01044"/>01044 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;enable_crc)
<anchor xml:id="_sd_8c_source_1l01045"/>01045 {
<anchor xml:id="_sd_8c_source_1l01046"/>01046 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(spi_inst&#32;==&#32;spi0)
<anchor xml:id="_sd_8c_source_1l01047"/>01047 &#32;&#32;&#32;&#32;{
<anchor xml:id="_sd_8c_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(mosi&#32;==&#32;3&#32;||&#32;mosi&#32;==&#32;7&#32;||&#32;mosi&#32;==&#32;19&#32;||&#32;mosi&#32;==&#32;23&#32;||&#32;mosi&#32;==&#32;35&#32;||&#32;mosi&#32;==&#32;39);
<anchor xml:id="_sd_8c_source_1l01049"/>01049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(miso&#32;==&#32;0&#32;||&#32;miso&#32;==&#32;4&#32;||&#32;miso&#32;==&#32;16&#32;||&#32;miso&#32;==&#32;20&#32;||&#32;miso&#32;==&#32;32&#32;||&#32;miso&#32;==&#32;36);
<anchor xml:id="_sd_8c_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(sclk&#32;==&#32;2&#32;||&#32;sclk&#32;==&#32;6&#32;||&#32;sclk&#32;==&#32;18&#32;||&#32;sclk&#32;==&#32;22&#32;||&#32;sclk&#32;==&#32;34&#32;||&#32;sclk&#32;==&#32;38);
<anchor xml:id="_sd_8c_source_1l01051"/>01051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;assert(cs&#32;==&#32;1&#32;||&#32;cs&#32;==&#32;5&#32;||&#32;cs&#32;==&#32;17&#32;||&#32;cs&#32;==&#32;21);</emphasis>
<anchor xml:id="_sd_8c_source_1l01052"/>01052 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l01053"/>01053 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(spi_inst&#32;==&#32;spi1)
<anchor xml:id="_sd_8c_source_1l01054"/>01054 &#32;&#32;&#32;&#32;{
<anchor xml:id="_sd_8c_source_1l01055"/>01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(mosi&#32;==&#32;11&#32;||&#32;mosi&#32;==&#32;15&#32;||&#32;mosi&#32;==&#32;27&#32;||&#32;mosi&#32;==&#32;31&#32;||&#32;mosi&#32;==&#32;43&#32;||&#32;mosi&#32;==&#32;47);
<anchor xml:id="_sd_8c_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(miso&#32;==&#32;8&#32;||&#32;miso&#32;==&#32;12&#32;||&#32;miso&#32;==&#32;24&#32;||&#32;miso&#32;==&#32;28&#32;||&#32;miso&#32;==&#32;40&#32;||&#32;miso&#32;==&#32;44);
<anchor xml:id="_sd_8c_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(sclk&#32;==&#32;10&#32;||&#32;sclk&#32;==&#32;14&#32;||&#32;sclk&#32;==&#32;26&#32;||&#32;sclk&#32;==&#32;30&#32;||&#32;sclk&#32;==&#32;42&#32;||&#32;sclk&#32;==&#32;46);
<anchor xml:id="_sd_8c_source_1l01058"/>01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;assert(cs&#32;==&#32;9&#32;||&#32;cs&#32;==&#32;13&#32;||&#32;cs&#32;==&#32;25&#32;||&#32;cs&#32;==&#32;29);</emphasis>
<anchor xml:id="_sd_8c_source_1l01059"/>01059 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l01060"/>01060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_sd_8c_source_1l01061"/>01061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(spi_inst&#32;==&#32;spi0&#32;||&#32;spi_inst&#32;==&#32;spi1);
<anchor xml:id="_sd_8c_source_1l01062"/>01062 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l01063"/>01063 
<anchor xml:id="_sd_8c_source_1l01064"/>01064 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device&#32;=&#32;calloc(1,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>));
<anchor xml:id="_sd_8c_source_1l01065"/>01065 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(device&#32;==&#32;NULL)&#32;{
<anchor xml:id="_sd_8c_source_1l01066"/>01066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;blockdevice_sd_create:&#32;Out&#32;of&#32;memory\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l01067"/>01067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
<anchor xml:id="_sd_8c_source_1l01068"/>01068 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l01069"/>01069 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>*&#32;config&#32;=&#32;calloc(1,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structblockdevice__sd__config__t">blockdevice_sd_config_t</link>));
<anchor xml:id="_sd_8c_source_1l01070"/>01070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(config&#32;==&#32;NULL)&#32;{
<anchor xml:id="_sd_8c_source_1l01071"/>01071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;blockdevice_sd_create:&#32;Out&#32;of&#32;memory\n&quot;</emphasis>);
<anchor xml:id="_sd_8c_source_1l01072"/>01072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(device);
<anchor xml:id="_sd_8c_source_1l01073"/>01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
<anchor xml:id="_sd_8c_source_1l01074"/>01074 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sd_8c_source_1l01075"/>01075 
<anchor xml:id="_sd_8c_source_1l01076"/>01076 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1ad37adc41062aa442c1f80852285e0b35">init</link>&#32;=&#32;init;
<anchor xml:id="_sd_8c_source_1l01077"/>01077 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a49aee7ebd3ba09abcc167ba8b026e2a3">deinit</link>&#32;=&#32;deinit;
<anchor xml:id="_sd_8c_source_1l01078"/>01078 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1aaff48a348ee1441de6d05ffad85875ee">sync</link>&#32;=&#32;sync;
<anchor xml:id="_sd_8c_source_1l01079"/>01079 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1ae4801dd67b1481ac013520098523988e">read</link>&#32;=&#32;read;
<anchor xml:id="_sd_8c_source_1l01080"/>01080 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1aca297cb4c31042de2aeda00a9b8f8196">erase</link>&#32;=&#32;erase;
<anchor xml:id="_sd_8c_source_1l01081"/>01081 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a07d24eb0a566f88aa45cf1d236006822">program</link>&#32;=&#32;program;
<anchor xml:id="_sd_8c_source_1l01082"/>01082 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a0326c4dca54ff9e7966053c3aa96adcf">trim</link>&#32;=&#32;trim;
<anchor xml:id="_sd_8c_source_1l01083"/>01083 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1abba40bbe04d3a88d270634a788249477">size</link>&#32;=&#32;size;
<anchor xml:id="_sd_8c_source_1l01084"/>01084 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a44ac5dc03dd62d3c48abbdbd0c9fed4d">read_size</link>&#32;=&#32;block_size;
<anchor xml:id="_sd_8c_source_1l01085"/>01085 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1ab4bddfc59b1c4918514f359c4b509dd3">erase_size</link>&#32;=&#32;block_size;
<anchor xml:id="_sd_8c_source_1l01086"/>01086 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a79e2a5807006883bcbf1f60a91bdaf98">program_size</link>&#32;=&#32;block_size;
<anchor xml:id="_sd_8c_source_1l01087"/>01087 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1ac5845731ff9674fc82a752fbd270130d">name</link>&#32;=&#32;DEVICE_NAME;
<anchor xml:id="_sd_8c_source_1l01088"/>01088 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a9a2c51cef39211e0d1c42fc3e395caa0">is_initialized</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_sd_8c_source_1l01089"/>01089 
<anchor xml:id="_sd_8c_source_1l01090"/>01090 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7c06405b4676b1bd54189279f74c4ec">spi_inst</link>&#32;=&#32;spi_inst;
<anchor xml:id="_sd_8c_source_1l01091"/>01091 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a4b1f87d959d02dd32e88faeb7bf11412">mosi</link>&#32;=&#32;mosi;
<anchor xml:id="_sd_8c_source_1l01092"/>01092 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae8df6ecd310556e45f8e9d10b29b8512">miso</link>&#32;=&#32;miso;
<anchor xml:id="_sd_8c_source_1l01093"/>01093 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a83bc8190d58c50dc4696e347f6d8b601">sclk</link>&#32;=&#32;sclk;
<anchor xml:id="_sd_8c_source_1l01094"/>01094 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1af0a9de7d996bcd6711ab7244e2db17d6">cs</link>&#32;=&#32;cs;
<anchor xml:id="_sd_8c_source_1l01095"/>01095 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1af7854657ebfe51492086bc83e74d15a8">hz</link>&#32;=&#32;hz;
<anchor xml:id="_sd_8c_source_1l01096"/>01096 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1ae7d08bfdf6ccc6ec15fef0f38c155794">enable_crc</link>&#32;=&#32;enable_crc;
<anchor xml:id="_sd_8c_source_1l01097"/>01097 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a9de2e52cb964416fe7c8565304e60f86">card_type</link>&#32;=&#32;<link linkend="_sd_8c_1ab3b05bad6c468ddb44aff2f80a988b74a5768fc056208e1ae24594a5995a94290">SDCARD_NONE</link>;
<anchor xml:id="_sd_8c_source_1l01098"/>01098 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a7de1f8b1fe1eac89938593472e1e77c7">block_size</link>&#32;=&#32;512;
<anchor xml:id="_sd_8c_source_1l01099"/>01099 &#32;&#32;&#32;&#32;mutex_init(&amp;config-&gt;<link linkend="_structblockdevice__sd__config__t_1a067f7b4829219e283143546a90b876da">_mutex</link>);
<anchor xml:id="_sd_8c_source_1l01100"/>01100 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a73a27f59d5175f4a31d4ab3cd2a7e3c0">config</link>&#32;=&#32;config;
<anchor xml:id="_sd_8c_source_1l01101"/>01101 
<anchor xml:id="_sd_8c_source_1l01102"/>01102 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1ad37adc41062aa442c1f80852285e0b35">init</link>(device);
<anchor xml:id="_sd_8c_source_1l01103"/>01103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;device;
<anchor xml:id="_sd_8c_source_1l01104"/>01104 }
<anchor xml:id="_sd_8c_source_1l01105"/>01105 
<anchor xml:id="_sd_8c_source_1l01106"/><link linkend="_group__blockdevice__sd_1gada9c8624c3e06c29f3780fa5f77fb6d9">01106</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group__blockdevice__sd_1gada9c8624c3e06c29f3780fa5f77fb6d9">blockdevice_sd_free</link>(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>*&#32;device)&#32;{
<anchor xml:id="_sd_8c_source_1l01107"/>01107 &#32;&#32;&#32;&#32;free(device-&gt;<link linkend="_structblockdevice_1a73a27f59d5175f4a31d4ab3cd2a7e3c0">config</link>);
<anchor xml:id="_sd_8c_source_1l01108"/>01108 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a73a27f59d5175f4a31d4ab3cd2a7e3c0">config</link>&#32;=&#32;NULL;
<anchor xml:id="_sd_8c_source_1l01109"/>01109 &#32;&#32;&#32;&#32;free(device);
<anchor xml:id="_sd_8c_source_1l01110"/>01110 &#32;&#32;&#32;&#32;device&#32;=&#32;NULL;
<anchor xml:id="_sd_8c_source_1l01111"/>01111 }
</programlisting></section>
