<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group__blockdevice__flash" xml:lang="en-US">
<title>
<para>blockdevice_flash </para>
</title>
<indexterm><primary>blockdevice_flash</primary></indexterm>
<para>

<para>Raspberry Pi Pico on-board flash memory block device. </para>
 
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link> * <link linkend="_group__blockdevice__flash_1gaa4f26759924c70f9a86436aa58f67cfc">blockdevice_flash_create</link> (uint32_t start, size_t length)</para>

<para>Create Raspberry Pi Pico On-board Flash block device. </para>
</listitem>
            <listitem><para>void <link linkend="_group__blockdevice__flash_1ga8d9d318677d2c372535f4c775c5a22c9">blockdevice_flash_free</link> (<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link> *device)</para>

<para>Release the flash memory device. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Raspberry Pi Pico on-board flash memory block device. </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_group__blockdevice__flash_1gaa4f26759924c70f9a86436aa58f67cfc"/><section>
    <title>blockdevice_flash_create()</title>
<indexterm><primary>blockdevice_flash_create</primary><secondary>blockdevice_flash</secondary></indexterm>
<indexterm><primary>blockdevice_flash</primary><secondary>blockdevice_flash_create</secondary></indexterm>
<para><computeroutput><link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link> * blockdevice_flash_create (uint32_t start, size_t length)</computeroutput></para><para>

<para>Create Raspberry Pi Pico On-board Flash block device. </para>
</para>

<para>Create a block device object that uses the Raspberry Pi Pico onboard flash memory. The start position of the flash memory to be allocated to the block device is specified by start and the length by length. start and length must be aligned to a flash sector of 4096 bytes.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>start</entry><entry>
<para>Specifies the starting position of the flash memory to be allocated to the block device in bytes. </para>
</entry>
                            </row>
                            <row>
<entry>length</entry><entry>
<para>Size in bytes to be allocated to the block device. If zero is specified, all remaining space is used. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Block device object. Returnes NULL in case of failure. </para>
</formalpara>

                <formalpara>
                    <title>
Return values</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>NULL</entry><entry>
<para>Failed to create block device object. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_flash_8c_source_1l00125">125</link> of file <link linkend="_flash_8c_source">flash.c</link>.</para>
<programlisting linenumbering="unnumbered">00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00126 &#32;&#32;&#32;&#32;assert(start&#32;%&#32;FLASH_SECTOR_SIZE&#32;==&#32;0);
00127 &#32;&#32;&#32;&#32;assert(length&#32;%&#32;FLASH_SECTOR_SIZE&#32;==&#32;0);
00128 
00129 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*device&#32;=&#32;calloc(1,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>));
00130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(device&#32;==&#32;NULL)&#32;{
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;blockdevice_flash_create:&#32;Out&#32;of&#32;memory\n&quot;</emphasis>);
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
00133 &#32;&#32;&#32;&#32;}
00134 &#32;&#32;&#32;&#32;<link linkend="_structblockdevice__flash__config__t">blockdevice_flash_config_t</link>&#32;*config&#32;=&#32;calloc(1,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structblockdevice__flash__config__t">blockdevice_flash_config_t</link>));
00135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(config&#32;==&#32;NULL)&#32;{
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,&#32;<emphasis role="stringliteral">&quot;blockdevice_flash_create:&#32;Out&#32;of&#32;memory\n&quot;</emphasis>);
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(device);
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
00139 &#32;&#32;&#32;&#32;}
00140 
00141 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1ad37adc41062aa442c1f80852285e0b35">init</link>&#32;=&#32;init;
00142 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a49aee7ebd3ba09abcc167ba8b026e2a3">deinit</link>&#32;=&#32;deinit;
00143 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1ae4801dd67b1481ac013520098523988e">read</link>&#32;=&#32;read;
00144 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1aca297cb4c31042de2aeda00a9b8f8196">erase</link>&#32;=&#32;erase;
00145 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a07d24eb0a566f88aa45cf1d236006822">program</link>&#32;=&#32;program;
00146 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a0326c4dca54ff9e7966053c3aa96adcf">trim</link>&#32;=&#32;trim;
00147 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1aaff48a348ee1441de6d05ffad85875ee">sync</link>&#32;=&#32;sync;
00148 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1abba40bbe04d3a88d270634a788249477">size</link>&#32;=&#32;size;
00149 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a44ac5dc03dd62d3c48abbdbd0c9fed4d">read_size</link>&#32;=&#32;1;
00150 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1ab4bddfc59b1c4918514f359c4b509dd3">erase_size</link>&#32;=&#32;FLASH_SECTOR_SIZE;&#32;&#32;<emphasis role="comment">//&#32;4096&#32;byte</emphasis>
00151 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a79e2a5807006883bcbf1f60a91bdaf98">program_size</link>&#32;=&#32;FLASH_PAGE_SIZE;&#32;&#32;<emphasis role="comment">//&#32;256&#32;byte</emphasis>
00152 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1ac5845731ff9674fc82a752fbd270130d">name</link>&#32;=&#32;DEVICE_NAME;
00153 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a9a2c51cef39211e0d1c42fc3e395caa0">is_initialized</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00154 
00155 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__flash__config__t_1afe08d636949a8df67ac13538ce5c52b0">start</link>&#32;=&#32;start;
00156 &#32;&#32;&#32;&#32;config-&gt;<link linkend="_structblockdevice__flash__config__t_1a0476083842643a0772e611d8d56abade">length</link>&#32;=&#32;length&#32;&gt;&#32;0&#32;?&#32;length&#32;:&#32;(<link linkend="_regi__rev1_8h_1a7ad5a8273ffcd10db868c3c3e03d5bf0">PICO_FLASH_SIZE_BYTES</link>&#32;-&#32;start);
00157 &#32;&#32;&#32;&#32;mutex_init(&amp;config-&gt;<link linkend="_structblockdevice__flash__config__t_1a20c0f3240342a6919c8c389d8d5b1dfa">_mutex</link>);
00158 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1a73a27f59d5175f4a31d4ab3cd2a7e3c0">config</link>&#32;=&#32;config;
00159 &#32;&#32;&#32;&#32;device-&gt;<link linkend="_structblockdevice_1ad37adc41062aa442c1f80852285e0b35">init</link>(device);
00160 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;device;
00161 }
</programlisting></section>
<anchor xml:id="_group__blockdevice__flash_1ga8d9d318677d2c372535f4c775c5a22c9"/><section>
    <title>blockdevice_flash_free()</title>
<indexterm><primary>blockdevice_flash_free</primary><secondary>blockdevice_flash</secondary></indexterm>
<indexterm><primary>blockdevice_flash</primary><secondary>blockdevice_flash_free</secondary></indexterm>
<para><computeroutput>void blockdevice_flash_free (<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link> * device)</computeroutput></para><para>

<para>Release the flash memory device. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>device</entry><entry>
<para>Block device object. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_flash_8c_source_1l00163">163</link> of file <link linkend="_flash_8c_source">flash.c</link>.</para>
<programlisting linenumbering="unnumbered">00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00164 &#32;&#32;&#32;&#32;free(device-&gt;<link linkend="_structblockdevice_1a73a27f59d5175f4a31d4ab3cd2a7e3c0">config</link>);
00165 &#32;&#32;&#32;&#32;free(device);
00166 }
</programlisting></section>
</section>
</section>
