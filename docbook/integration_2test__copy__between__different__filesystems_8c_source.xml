<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_integration_2test__copy__between__different__filesystems_8c_source" xml:lang="en-US">
<title>test_copy_between_different_filesystems.c</title>
<indexterm><primary>lib/pico-vfs-REGI-Local/tests/integration/test_copy_between_different_filesystems.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;hardware/clocks.h&gt;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_flash_8h">blockdevice/flash.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_sd_8h">blockdevice/sd.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_littlefs_8h">filesystem/littlefs.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_fat_8h">filesystem/fat.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_vfs_8h">filesystem/vfs.h</link>&quot;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00012"/>00012 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00013"/>00013 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00014"/><link linkend="_integration_2test__copy__between__different__filesystems_8c_1a589fea3c63209fa4d21b6b30d8c365c3">00014</link> <emphasis role="preprocessor">#define&#32;COLOR_GREEN(format)&#32;&#32;(&quot;\e[32m&quot;&#32;format&#32;&quot;\e[0m&quot;)</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00015"/>00015 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00016"/>00016 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structcombination__map">combination_map</link>&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00017"/><link linkend="_structcombination__map_1a5d011206898e96c1bf4928d4bcaedf3e">00017</link> &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*<link linkend="_structcombination__map_1a5d011206898e96c1bf4928d4bcaedf3e">device1</link>;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00018"/><link linkend="_structcombination__map_1afbc8923aa5672188de0e81b9f1bad0d9">00018</link> &#32;&#32;&#32;&#32;<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*<link linkend="_structcombination__map_1afbc8923aa5672188de0e81b9f1bad0d9">filesystem1</link>;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00019"/><link linkend="_structcombination__map_1a15072b685b35279e1ba685eef6770079">00019</link> &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*<link linkend="_structcombination__map_1a15072b685b35279e1ba685eef6770079">device2</link>;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00020"/><link linkend="_structcombination__map_1ae263a6eb20a69d12ebd27eb4c318dc3e">00020</link> &#32;&#32;&#32;&#32;<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*<link linkend="_structcombination__map_1ae263a6eb20a69d12ebd27eb4c318dc3e">filesystem2</link>;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00021"/>00021 };
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00022"/>00022 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00023"/><link linkend="_integration_2test__copy__between__different__filesystems_8c_1a7edd94b16025f39d4aca113469771df9">00023</link> <emphasis role="preprocessor">#define&#32;NUM_COMBINATION&#32;&#32;&#32;&#32;6</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00024"/>00024 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structcombination__map">combination_map</link>&#32;combination[<link linkend="_pico-vfs-_r_e_g_i-_local_2examples_2benchmark_2main_8c_1a7edd94b16025f39d4aca113469771df9">NUM_COMBINATION</link>];
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00025"/>00025 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00026"/>00026 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00027"/>00027 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;init_filesystem_combination(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*flash1&#32;=&#32;<link linkend="_group__blockdevice__flash_1gaa4f26759924c70f9a86436aa58f67cfc">blockdevice_flash_create</link>(1&#32;*&#32;1024&#32;*&#32;1024,&#32;512&#32;*&#32;1024);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*<link linkend="_pico-vfs-_r_e_g_i-_local_2examples_2usb__logger_2main_8c_1ad8ecc24e18a9575a8814a8eafeb8a3b4">flash2</link>&#32;=&#32;<link linkend="_group__blockdevice__flash_1gaa4f26759924c70f9a86436aa58f67cfc">blockdevice_flash_create</link>(1&#32;*&#32;1024&#32;*&#32;1024&#32;+&#32;512&#32;*&#32;1024,&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<link linkend="_group__blockdevice_1ga4bc2c146f975b5250be7f8f5f219f5e4">blockdevice_t</link>&#32;*sd&#32;=&#32;<link linkend="_group__blockdevice__sd_1ga4711fc3f61142ce9387c984809bd3db8">blockdevice_sd_create</link>(spi0,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_regi__rev1_8h_1acd12af431f3d8c3752815d58f998c0ac">PICO_DEFAULT_SPI_TX_PIN</link>,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_regi__rev1_8h_1ab7eaa7dddacd975821969189da644cdb">PICO_DEFAULT_SPI_RX_PIN</link>,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_regi__rev1_8h_1adad46d9962adcf584b003bb52ef8e33e">PICO_DEFAULT_SPI_SCK_PIN</link>,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_regi__rev1_8h_1a1f76bedc8bb59acb457e1943dda8431d">PICO_DEFAULT_SPI_CSN_PIN</link>,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;24&#32;*&#32;MHZ,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*fat1&#32;=&#32;<link linkend="_group__filesystem__fat_1ga5b7bf00bfce64f76dd5cba01901781c5">filesystem_fat_create</link>();
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*fat2&#32;=&#32;<link linkend="_group__filesystem__fat_1ga5b7bf00bfce64f76dd5cba01901781c5">filesystem_fat_create</link>();
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*littlefs1&#32;=&#32;<link linkend="_group__filesystem__littlefs_1ga6bf5205dec6fdf2ec2d190c44f5f2594">filesystem_littlefs_create</link>(500,&#32;16);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<link linkend="_group__filesystem_1gad16024c6aa37d328b78a38f8c006ac83">filesystem_t</link>&#32;*littlefs2&#32;=&#32;<link linkend="_group__filesystem__littlefs_1ga6bf5205dec6fdf2ec2d190c44f5f2594">filesystem_littlefs_create</link>(500,&#32;16);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00041"/>00041 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00042"/>00042 &#32;&#32;&#32;&#32;combination[0]&#32;=&#32;(<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structcombination__map">combination_map</link>){
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.device1&#32;=&#32;flash1,&#32;.filesystem1&#32;=&#32;fat1,&#32;.device2&#32;=&#32;<link linkend="_pico-vfs-_r_e_g_i-_local_2examples_2usb__logger_2main_8c_1ad8ecc24e18a9575a8814a8eafeb8a3b4">flash2</link>,&#32;.filesystem2&#32;=&#32;fat2,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00044"/>00044 &#32;&#32;&#32;&#32;};
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00045"/>00045 &#32;&#32;&#32;&#32;combination[1]&#32;=&#32;(<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structcombination__map">combination_map</link>){
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.device1&#32;=&#32;flash1,&#32;.filesystem1&#32;=&#32;fat1,&#32;.device2&#32;=&#32;<link linkend="_pico-vfs-_r_e_g_i-_local_2examples_2usb__logger_2main_8c_1ad8ecc24e18a9575a8814a8eafeb8a3b4">flash2</link>,&#32;.filesystem2&#32;=&#32;littlefs2,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00047"/>00047 &#32;&#32;&#32;&#32;};
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00048"/>00048 &#32;&#32;&#32;&#32;combination[2]&#32;=&#32;(<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structcombination__map">combination_map</link>){
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.device1&#32;=&#32;flash1,&#32;.filesystem1&#32;=&#32;littlefs1,&#32;.device2&#32;=&#32;<link linkend="_pico-vfs-_r_e_g_i-_local_2examples_2usb__logger_2main_8c_1ad8ecc24e18a9575a8814a8eafeb8a3b4">flash2</link>,&#32;.filesystem2&#32;=&#32;littlefs2,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00050"/>00050 &#32;&#32;&#32;&#32;};
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00051"/>00051 &#32;&#32;&#32;&#32;combination[3]&#32;=&#32;(<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structcombination__map">combination_map</link>){
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.device1&#32;=&#32;flash1,&#32;.filesystem1&#32;=&#32;fat1,&#32;.device2&#32;=&#32;sd,&#32;.filesystem2&#32;=&#32;fat2,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00053"/>00053 &#32;&#32;&#32;&#32;};
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00054"/>00054 &#32;&#32;&#32;&#32;combination[4]&#32;=&#32;(<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structcombination__map">combination_map</link>){
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.device1&#32;=&#32;flash1,&#32;.filesystem1&#32;=&#32;fat1,&#32;.device2&#32;=&#32;sd,&#32;.filesystem2&#32;=&#32;littlefs2,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;};
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;combination[5]&#32;=&#32;(<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structcombination__map">combination_map</link>){
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.device1&#32;=&#32;flash1,&#32;.filesystem1&#32;=&#32;littlefs1,&#32;.device2&#32;=&#32;sd,&#32;.filesystem2&#32;=&#32;littlefs2,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00059"/>00059 &#32;&#32;&#32;&#32;};
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00060"/>00060 }
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00061"/>00061 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00062"/><link linkend="_integration_2test__copy__between__different__filesystems_8c_1add89fbb6b753518ca2f4fa0249456c8f">00062</link> <emphasis role="preprocessor">#define&#32;TEST_FILE_SIZE&#32;&#32;100&#32;*&#32;1024;</emphasis>
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00063"/>00063 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00064"/>00064 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_printf(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*format,&#32;...)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00065"/>00065 &#32;&#32;&#32;&#32;va_list&#32;args;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00066"/>00066 &#32;&#32;&#32;&#32;va_start(args,&#32;format);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;vprintf(format,&#32;args);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00068"/>00068 &#32;&#32;&#32;&#32;va_end(args);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00069"/>00069 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00070"/>00070 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;50&#32;-&#32;(size_t)n;&#32;i++)
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;.&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00073"/>00073 }
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00074"/>00074 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00075"/>00075 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_write(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*path)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00076"/>00076 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(path,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00078"/>00078 &#32;&#32;&#32;&#32;assert(fd&#32;&gt;=&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00079"/>00079 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00080"/>00080 &#32;&#32;&#32;&#32;uint8_t&#32;buffer[1024*64]&#32;=&#32;{0};
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;remind&#32;=&#32;<link linkend="_integration_2test__copy__between__different__filesystems_8c_1add89fbb6b753518ca2f4fa0249456c8f">TEST_FILE_SIZE</link>;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(remind&#32;&gt;&#32;0)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;chunk&#32;=&#32;remind&#32;%&#32;<emphasis role="keyword">sizeof</emphasis>(buffer)&#32;?&#32;remind&#32;%&#32;<emphasis role="keyword">sizeof</emphasis>(buffer)&#32;:&#32;<emphasis role="keyword">sizeof</emphasis>(buffer);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;chunk;&#32;i++)
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;rand()&#32;&amp;&#32;0xFF;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ssize_t&#32;write_size&#32;=&#32;write(fd,&#32;buffer,&#32;chunk);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(write_size&#32;&gt;&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00088"/>00088 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remind&#32;=&#32;remind&#32;-&#32;write_size;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00090"/>00090 &#32;&#32;&#32;&#32;}
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00092"/>00092 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00093"/>00093 }
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00094"/>00094 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00095"/>00095 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_copy(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*source,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*dist)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd_src&#32;=&#32;open(source,&#32;O_RDONLY);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00097"/>00097 &#32;&#32;&#32;&#32;assert(fd_src&#32;&gt;=&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd_dist&#32;=&#32;open(dist,&#32;O_WRONLY|O_CREAT);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00099"/>00099 &#32;&#32;&#32;&#32;assert(fd_dist&#32;&gt;=&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00100"/>00100 &#32;&#32;&#32;&#32;assert(fd_src&#32;!=&#32;fd_dist);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00101"/>00101 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00102"/>00102 &#32;&#32;&#32;&#32;uint8_t&#32;buffer[1024*64]&#32;=&#32;{0};
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ssize_t&#32;read_size&#32;=&#32;read(fd_src,&#32;buffer,&#32;<emphasis role="keyword">sizeof</emphasis>(buffer));
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(read_size&#32;==&#32;0)
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ssize_t&#32;write_size&#32;=&#32;write(fd_dist,&#32;buffer,&#32;read_size);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(read_size&#32;==&#32;write_size);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00109"/>00109 &#32;&#32;&#32;&#32;}
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00110"/>00110 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;close(fd_src);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00112"/>00112 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00113"/>00113 &#32;&#32;&#32;&#32;err&#32;=&#32;close(fd_dist);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00114"/>00114 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00115"/>00115 }
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00116"/>00116 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00117"/>00117 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;test_read(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*path)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00118"/>00118 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(path,&#32;O_RDONLY);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00120"/>00120 &#32;&#32;&#32;&#32;assert(fd&#32;&gt;=&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00121"/>00121 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00122"/>00122 &#32;&#32;&#32;&#32;uint8_t&#32;buffer[1024*64]&#32;=&#32;{0};
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ssize_t&#32;read_size&#32;=&#32;read(fd,&#32;buffer,&#32;<emphasis role="keyword">sizeof</emphasis>(buffer));
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(read_size&#32;==&#32;0)
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;(size_t)read_size;&#32;i++)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">volatile</emphasis>&#32;uint8_t&#32;r&#32;=&#32;rand()&#32;&amp;&#32;0xFF;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(buffer[i]&#32;==&#32;r);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00131"/>00131 &#32;&#32;&#32;&#32;}
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00132"/>00132 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00133"/>00133 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;close(fd);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00134"/>00134 &#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00135"/>00135 }
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00136"/>00136 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00137"/><link linkend="_pico-vfs-_r_e_g_i-_local_2tests_2integration_2main_8c_1aa39763d4cd60a15a1e2ba5a310e8401e">00137</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_integration_2test__copy__between__different__filesystems_8c_1aa39763d4cd60a15a1e2ba5a310e8401e">test_copy_between_different_filesystems</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00138"/>00138 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Copy&#32;between&#32;different&#32;file&#32;system:\n&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00139"/>00139 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00140"/>00140 &#32;&#32;&#32;&#32;init_filesystem_combination();
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00141"/>00141 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00142"/>00142 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_pico-vfs-_r_e_g_i-_local_2examples_2benchmark_2main_8c_1a7edd94b16025f39d4aca113469771df9">NUM_COMBINATION</link>;&#32;i++)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structcombination__map">combination_map</link>&#32;setting&#32;=&#32;combination[i];
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;from&#32;%s(%s)&#32;to&#32;%s(%s)&quot;</emphasis>,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setting.<link linkend="_structcombination__map_1afbc8923aa5672188de0e81b9f1bad0d9">filesystem1</link>-&gt;<link linkend="_structfilesystem_1a72ec4af591f1c4d4538ea3baaf5fb8db">name</link>,&#32;setting.<link linkend="_structcombination__map_1a5d011206898e96c1bf4928d4bcaedf3e">device1</link>-&gt;<link linkend="_structblockdevice_1ac5845731ff9674fc82a752fbd270130d">name</link>,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setting.<link linkend="_structcombination__map_1ae263a6eb20a69d12ebd27eb4c318dc3e">filesystem2</link>-&gt;<link linkend="_structfilesystem_1a72ec4af591f1c4d4538ea3baaf5fb8db">name</link>,&#32;setting.<link linkend="_structcombination__map_1a15072b685b35279e1ba685eef6770079">device2</link>-&gt;<link linkend="_structblockdevice_1ac5845731ff9674fc82a752fbd270130d">name</link>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00147"/>00147 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;<link linkend="_group__filesystem_1gac9f86bdbfdf77fb98f51551c4b6068ed">fs_format</link>(setting.<link linkend="_structcombination__map_1afbc8923aa5672188de0e81b9f1bad0d9">filesystem1</link>,&#32;setting.<link linkend="_structcombination__map_1a5d011206898e96c1bf4928d4bcaedf3e">device1</link>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(err&#32;==&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;5005)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;skip,&#32;device&#32;not&#32;connected\n&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_group__filesystem_1gac9f86bdbfdf77fb98f51551c4b6068ed">fs_format</link>(setting.<link linkend="_structcombination__map_1ae263a6eb20a69d12ebd27eb4c318dc3e">filesystem2</link>,&#32;setting.<link linkend="_structcombination__map_1a15072b685b35279e1ba685eef6770079">device2</link>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(err&#32;==&#32;-1&#32;&amp;&amp;&#32;errno&#32;==&#32;5005)&#32;{
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;skip,&#32;device&#32;not&#32;connected\n&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00160"/>00160 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_group__filesystem_1ga85336fdeb00149559c5c2008256c3013">fs_mount</link>(<emphasis role="stringliteral">&quot;/a&quot;</emphasis>,&#32;setting.<link linkend="_structcombination__map_1afbc8923aa5672188de0e81b9f1bad0d9">filesystem1</link>,&#32;setting.<link linkend="_structcombination__map_1a5d011206898e96c1bf4928d4bcaedf3e">device1</link>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_group__filesystem_1ga85336fdeb00149559c5c2008256c3013">fs_mount</link>(<emphasis role="stringliteral">&quot;/b&quot;</emphasis>,&#32;setting.<link linkend="_structcombination__map_1ae263a6eb20a69d12ebd27eb4c318dc3e">filesystem2</link>,&#32;setting.<link linkend="_structcombination__map_1a15072b685b35279e1ba685eef6770079">device2</link>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00165"/>00165 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srand(i);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test_write(<emphasis role="stringliteral">&quot;/a/source&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test_copy(<emphasis role="stringliteral">&quot;/a/source&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;/b/dist&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srand(i);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test_read(<emphasis role="stringliteral">&quot;/b/dist&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__copy__between__different__filesystems_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00172"/>00172 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test_printf(<emphasis role="stringliteral">&quot;from&#32;%s(%s)&#32;to&#32;%s(%s)&quot;</emphasis>,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setting.<link linkend="_structcombination__map_1ae263a6eb20a69d12ebd27eb4c318dc3e">filesystem2</link>-&gt;<link linkend="_structfilesystem_1a72ec4af591f1c4d4538ea3baaf5fb8db">name</link>,&#32;setting.<link linkend="_structcombination__map_1a15072b685b35279e1ba685eef6770079">device2</link>-&gt;<link linkend="_structblockdevice_1ac5845731ff9674fc82a752fbd270130d">name</link>,
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setting.<link linkend="_structcombination__map_1afbc8923aa5672188de0e81b9f1bad0d9">filesystem1</link>-&gt;<link linkend="_structfilesystem_1a72ec4af591f1c4d4538ea3baaf5fb8db">name</link>,&#32;setting.<link linkend="_structcombination__map_1a5d011206898e96c1bf4928d4bcaedf3e">device1</link>-&gt;<link linkend="_structblockdevice_1ac5845731ff9674fc82a752fbd270130d">name</link>),
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00176"/>00176 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srand(i);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test_write(<emphasis role="stringliteral">&quot;/b/source&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test_copy(<emphasis role="stringliteral">&quot;/b/source&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;/a/dist&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;srand(i);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;test_read(<emphasis role="stringliteral">&quot;/a/dist&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00182"/>00182 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_group__filesystem_1ga16e3ebc7a28d4b1ba08759b03ec739ff">fs_unmount</link>(<emphasis role="stringliteral">&quot;/a&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;err&#32;=&#32;<link linkend="_group__filesystem_1ga16e3ebc7a28d4b1ba08759b03ec739ff">fs_unmount</link>(<emphasis role="stringliteral">&quot;/b&quot;</emphasis>);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(err&#32;==&#32;0);
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00187"/>00187 
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<link linkend="_integration_2test__copy__between__different__filesystems_8c_1a589fea3c63209fa4d21b6b30d8c365c3">COLOR_GREEN</link>(<emphasis role="stringliteral">&quot;ok\n&quot;</emphasis>));
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00189"/>00189 &#32;&#32;&#32;&#32;}
<anchor xml:id="_integration_2test__copy__between__different__filesystems_8c_source_1l00190"/>00190 }
</programlisting></section>
