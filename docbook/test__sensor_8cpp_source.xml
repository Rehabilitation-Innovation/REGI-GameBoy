<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_test__sensor_8cpp_source" xml:lang="en-US">
<title>test_sensor.cpp</title>
<indexterm><primary>lib/pico-distance-sensor-main/pico-distance-sensor-main/test/unit_tests/tests/test_sensor.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_test__sensor_8cpp_source_1l00001"/>00001 
<anchor xml:id="_test__sensor_8cpp_source_1l00024"/>00024 
<anchor xml:id="_test__sensor_8cpp_source_1l00025"/>00025 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_distance__sensor_8h">distance_sensor.h</link>&quot;</emphasis>
<anchor xml:id="_test__sensor_8cpp_source_1l00026"/>00026 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_test__harness_8h">test_harness.h</link>&quot;</emphasis>
<anchor xml:id="_test__sensor_8cpp_source_1l00027"/>00027 <emphasis role="preprocessor">#include&#32;&lt;cassert&gt;</emphasis>
<anchor xml:id="_test__sensor_8cpp_source_1l00028"/>00028 <emphasis role="preprocessor">#include&#32;&lt;cstdio&gt;</emphasis>
<anchor xml:id="_test__sensor_8cpp_source_1l00029"/>00029 
<anchor xml:id="_test__sensor_8cpp_source_1l00033"/><link linkend="_pio_8h_1a9878b5628ef662af86683649f5a7f753">00033</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_test__sensor_8cpp_1a9878b5628ef662af86683649f5a7f753">pio_sm_put</link>(<link linkend="_pio_8h_1a05b1974aa3d59de9efe4ff87799ff3da">PIO</link>&#32;<link linkend="__dino_game_8cpp_1ac79a43604cef3e167780e935276174d0">pio</link>,&#32;<link linkend="_pico_8h_1a4f5fce8c1ef282264f9214809524d836">uint</link>&#32;<link linkend="__dino_game_8cpp_1abeba240b99c2caa6556ccab58b8c8ebb">sm</link>,&#32;uint32_t&#32;data)&#32;{
<anchor xml:id="_test__sensor_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;
<anchor xml:id="_test__sensor_8cpp_source_1l00035"/>00035 }
<anchor xml:id="_test__sensor_8cpp_source_1l00036"/>00036 
<anchor xml:id="_test__sensor_8cpp_source_1l00040"/><link linkend="_test__sensor_8cpp_1a04cef081f3e07f3a0ca451ee7942c842">00040</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_test__sensor_8cpp_1a04cef081f3e07f3a0ca451ee7942c842">test_IsProgramLoaded_AfterLoading</link>()&#32;{
<anchor xml:id="_test__sensor_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Load&#32;on&#32;pio0.</emphasis>
<anchor xml:id="_test__sensor_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Testing&#32;that&#32;programs&#32;are&#32;loaded&#32;in&#32;memory.&quot;</emphasis>);
<anchor xml:id="_test__sensor_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;assert(<link linkend="_class_test_harness_1aad8f631b26945bb71e799106705bf072">TestHarness::IsLoaded</link>(0)&#32;==&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_test__sensor_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;assert(<link linkend="_class_test_harness_1aad8f631b26945bb71e799106705bf072">TestHarness::IsLoaded</link>(1)&#32;==&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_test__sensor_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;puts(<emphasis role="stringliteral">&quot;&#32;Success&quot;</emphasis>);
<anchor xml:id="_test__sensor_8cpp_source_1l00046"/>00046 }
<anchor xml:id="_test__sensor_8cpp_source_1l00047"/>00047 
<anchor xml:id="_test__sensor_8cpp_source_1l00051"/><link linkend="_test__sensor_8cpp_1a077ff69d63e952252eae95bebc60f572">00051</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_test__sensor_8cpp_1a077ff69d63e952252eae95bebc60f572">test_IsProgramLoaded_AtFirst</link>()&#32;{
<anchor xml:id="_test__sensor_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Assert&#32;that&#32;at&#32;the&#32;start&#32;of&#32;the&#32;program</emphasis>
<anchor xml:id="_test__sensor_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;each&#32;distance&#32;sensor&#32;is&#32;not&#32;loaded</emphasis>
<anchor xml:id="_test__sensor_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Checking&#32;that&#32;programs&#32;are&#32;not&#32;loaded&#32;in&#32;memory:&#32;&quot;</emphasis>);
<anchor xml:id="_test__sensor_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;assert(<link linkend="_class_test_harness_1aad8f631b26945bb71e799106705bf072">TestHarness::IsLoaded</link>(0)&#32;==&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_test__sensor_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;assert(<link linkend="_class_test_harness_1aad8f631b26945bb71e799106705bf072">TestHarness::IsLoaded</link>(1)&#32;==&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_test__sensor_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;puts(<emphasis role="stringliteral">&quot;Success.&quot;</emphasis>);
<anchor xml:id="_test__sensor_8cpp_source_1l00058"/>00058 }
<anchor xml:id="_test__sensor_8cpp_source_1l00059"/>00059 
<anchor xml:id="_test__sensor_8cpp_source_1l00063"/><link linkend="_test__sensor_8cpp_1a3e9ca87c5950258b37888dd7d2a6ee5d">00063</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_test__sensor_8cpp_1a3e9ca87c5950258b37888dd7d2a6ee5d">test_SensorMapEmptyAtStart</link>()&#32;{
<anchor xml:id="_test__sensor_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Testing&#32;that&#32;all&#32;sensors&#32;are&#32;mapped&#32;to&#32;0&#32;at&#32;program&#32;load.&quot;</emphasis>);
<anchor xml:id="_test__sensor_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_pico_8h_1a4f5fce8c1ef282264f9214809524d836">uint</link>&#32;<link linkend="__dino_game_8cpp_1ac79a43604cef3e167780e935276174d0">pio</link>&#32;=&#32;0;&#32;<link linkend="__dino_game_8cpp_1ac79a43604cef3e167780e935276174d0">pio</link>&#32;&lt;&#32;2;&#32;<link linkend="__dino_game_8cpp_1ac79a43604cef3e167780e935276174d0">pio</link>++)&#32;{
<anchor xml:id="_test__sensor_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_pico_8h_1a4f5fce8c1ef282264f9214809524d836">uint</link>&#32;<link linkend="__dino_game_8cpp_1abeba240b99c2caa6556ccab58b8c8ebb">sm</link>&#32;=&#32;0;&#32;<link linkend="__dino_game_8cpp_1abeba240b99c2caa6556ccab58b8c8ebb">sm</link>&#32;&lt;&#32;4;&#32;<link linkend="__dino_game_8cpp_1abeba240b99c2caa6556ccab58b8c8ebb">sm</link>++)&#32;{
<anchor xml:id="_test__sensor_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;assert(<link linkend="_class_test_harness_1af877a434e8fd6b886275e9b6658000fd">TestHarness::GetMappedSensor</link>(<link linkend="__dino_game_8cpp_1ac79a43604cef3e167780e935276174d0">pio</link>,&#32;<link linkend="__dino_game_8cpp_1abeba240b99c2caa6556ccab58b8c8ebb">sm</link>)&#32;==&#32;0);
<anchor xml:id="_test__sensor_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_test__sensor_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;}
<anchor xml:id="_test__sensor_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;puts(<emphasis role="stringliteral">&quot;Success.&quot;</emphasis>);
<anchor xml:id="_test__sensor_8cpp_source_1l00071"/>00071 }
<anchor xml:id="_test__sensor_8cpp_source_1l00072"/>00072 
<anchor xml:id="_test__sensor_8cpp_source_1l00076"/><link linkend="_test__sensor_8cpp_1ac8040954a006b40ec2cb594ce7b35622">00076</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_test__sensor_8cpp_1ac8040954a006b40ec2cb594ce7b35622">test_SensorLocationIsCorrect</link>(<link linkend="_class_distance_sensor">DistanceSensor</link>*&#32;address,&#32;<link linkend="_pio_8h_1a05b1974aa3d59de9efe4ff87799ff3da">PIO</link>&#32;<link linkend="__dino_game_8cpp_1ac79a43604cef3e167780e935276174d0">pio</link>,&#32;<link linkend="_pico_8h_1a4f5fce8c1ef282264f9214809524d836">uint</link>&#32;<link linkend="__dino_game_8cpp_1abeba240b99c2caa6556ccab58b8c8ebb">sm</link>)&#32;{
<anchor xml:id="_test__sensor_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;assert(<link linkend="_class_test_harness_1af877a434e8fd6b886275e9b6658000fd">TestHarness::GetMappedSensor</link>(<link linkend="__dino_game_8cpp_1ac79a43604cef3e167780e935276174d0">pio</link>,&#32;<link linkend="__dino_game_8cpp_1abeba240b99c2caa6556ccab58b8c8ebb">sm</link>)&#32;==&#32;address);
<anchor xml:id="_test__sensor_8cpp_source_1l00078"/>00078 }
<anchor xml:id="_test__sensor_8cpp_source_1l00079"/>00079 
<anchor xml:id="_test__sensor_8cpp_source_1l00080"/><link linkend="_test__sensor_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">00080</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_test__sensor_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>()&#32;{
<anchor xml:id="_test__sensor_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<link linkend="_test__sensor_8cpp_1a3e9ca87c5950258b37888dd7d2a6ee5d">test_SensorMapEmptyAtStart</link>();
<anchor xml:id="_test__sensor_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<link linkend="_test__sensor_8cpp_1a077ff69d63e952252eae95bebc60f572">test_IsProgramLoaded_AtFirst</link>();
<anchor xml:id="_test__sensor_8cpp_source_1l00083"/>00083 
<anchor xml:id="_test__sensor_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;instances</emphasis>
<anchor xml:id="_test__sensor_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<link linkend="_class_distance_sensor">DistanceSensor</link>&#32;pio0_sensor{15,&#32;0,&#32;1};
<anchor xml:id="_test__sensor_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<link linkend="_class_distance_sensor">DistanceSensor</link>&#32;pio1_sensor{15,&#32;1,&#32;2};
<anchor xml:id="_test__sensor_8cpp_source_1l00087"/>00087 
<anchor xml:id="_test__sensor_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<link linkend="_test__sensor_8cpp_1a04cef081f3e07f3a0ca451ee7942c842">test_IsProgramLoaded_AfterLoading</link>();
<anchor xml:id="_test__sensor_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Test&#32;the&#32;sensor&#32;address&#32;mapping&#32;is&#32;right&#32;for&#32;the&#32;loaded&#32;pios</emphasis>
<anchor xml:id="_test__sensor_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<link linkend="_test__sensor_8cpp_1ac8040954a006b40ec2cb594ce7b35622">test_SensorLocationIsCorrect</link>(&amp;pio0_sensor,&#32;0,&#32;1);
<anchor xml:id="_test__sensor_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<link linkend="_test__sensor_8cpp_1ac8040954a006b40ec2cb594ce7b35622">test_SensorLocationIsCorrect</link>(&amp;pio1_sensor,&#32;1,&#32;2);
<anchor xml:id="_test__sensor_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Verify&#32;some&#32;other&#32;mappings&#32;are&#32;still&#32;0</emphasis>
<anchor xml:id="_test__sensor_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<link linkend="_test__sensor_8cpp_1ac8040954a006b40ec2cb594ce7b35622">test_SensorLocationIsCorrect</link>(0,&#32;0,&#32;3);
<anchor xml:id="_test__sensor_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<link linkend="_test__sensor_8cpp_1ac8040954a006b40ec2cb594ce7b35622">test_SensorLocationIsCorrect</link>(0,&#32;1,&#32;3);
<anchor xml:id="_test__sensor_8cpp_source_1l00095"/>00095 
<anchor xml:id="_test__sensor_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_test__sensor_8cpp_source_1l00097"/>00097 }
</programlisting></section>
