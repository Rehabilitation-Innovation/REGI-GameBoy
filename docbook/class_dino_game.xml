<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_dino_game" xml:lang="en-US">
<title>DinoGame Class Reference</title>
<indexterm><primary>DinoGame</primary></indexterm>
<para>
<computeroutput>#include &lt;DinoGame.h&gt;</computeroutput>
</para>
Inheritance diagram for DinoGame:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_dino_game__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for DinoGame:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_dino_game__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_dino_game_1a24898012db5fdb59f106958b2047bc87">DinoGame</link> (<link linkend="_class_tiny_engine_frame_buffer">TinyEngineFrameBuffer</link> &amp;_framebuffer, <link linkend="_class_tiny_engine_renderer_i">TinyEngineRendererI</link> &amp;_renderer, <link linkend="_class_tiny_engine">TinyEngine</link> &amp;_engine)</para>
</listitem>
            <listitem><para><link linkend="_class_dino_game_1aa28aa7f6869e9da56220b03800f3159a">~DinoGame</link> () override</para>
</listitem>
            <listitem><para>void <link linkend="_class_dino_game_1ae1d9e6cae7937318b7b0d39bc4b70990">create</link> () override</para>
</listitem>
            <listitem><para>void <link linkend="_class_dino_game_1abbbe0d7eb69274e8118e24baebd0c43f">render</link> () override</para>
</listitem>
            <listitem><para>void <link linkend="_class_dino_game_1ac19a132cf8cef2a477b518df8a3b3db8">update</link> (double frameTime) override</para>
</listitem>
            <listitem><para>void <link linkend="_class_dino_game_1afdfa24b50b4b98cca5ea1271bccf3c0d">destroy</link> () override</para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class_game_scene">GameScene</link>        <itemizedlist>
            <listitem><para><link linkend="_class_game_scene_1a9f20a87546afdf718a1ef0ff4fb53200">GameScene</link> (<link linkend="_class_tiny_engine_frame_buffer">TinyEngineFrameBuffer</link> &amp;_framebuffer, <link linkend="_class_tiny_engine_renderer_i">TinyEngineRendererI</link> &amp;_renderer, <link linkend="_class_tiny_engine">TinyEngine</link> &amp;_engine)</para>

<para>Construct a new <link linkend="_class_game">Game</link> Scene object. </para>
</listitem>
            <listitem><para><link linkend="_class_game_scene_1add5bc48c372aaa7f526c02558a8adf00">~GameScene</link> ()</para>

<para>Destroy the <link linkend="_class_game">Game</link> Scene object. </para>
</listitem>
            <listitem><para>void <link linkend="_class_game_scene_1ac4f0485291c1719b76b4ed425661143c">create</link> () override</para>

<para>Create the scene after the object is created. This is for having multiple refrences to the same scene. Memory and configuration should only happen in this function. </para>
</listitem>
            <listitem><para>void <link linkend="_class_game_scene_1af107c5ffdf361b4e0b718f486cbc7d0e">render</link> () override</para>

<para>All framebuffer operations are done here and this is called only once per frame. </para>
</listitem>
            <listitem><para>void <link linkend="_class_game_scene_1a9bb2bd694b9c8399ea22aed23a6a809f">update</link> (double frameTime) override</para>

<para><link linkend="_class_game">Game</link> updates and other time dependednt modifications should be done here, there is no gurentee this is run only. </para>
</listitem>
            <listitem><para>void <link linkend="_class_game_scene_1a79aa067bf23e490cdfcb4aec1b181b12">destroy</link> () override</para>
</listitem>
        </itemizedlist>
Public Member Functions inherited from <link linkend="_class_scene_i">SceneI</link>        <itemizedlist>
            <listitem><para>virtual <link linkend="_class_scene_i_1a9aca690ad096045ae588810c5dbcbd62">~SceneI</link> ()=default</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Attributes inherited from <link linkend="_class_game_scene">GameScene</link>        <itemizedlist>
            <listitem><para><link linkend="_class_tiny_engine_frame_buffer">TinyEngineFrameBuffer</link> &amp; <link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link></para>
</listitem>
            <listitem><para><link linkend="_class_tiny_engine_renderer_i">TinyEngineRendererI</link> &amp; <link linkend="_class_game_scene_1abbc67a7bac90f11d7ee08c28dc3f0810">m_renderer</link></para>
</listitem>
            <listitem><para><link linkend="_class_tiny_engine">TinyEngine</link> &amp; <link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link></para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_sprite">Sprite</link> * &gt; <link linkend="_class_game_scene_1a894a08b41ccad98c26c0eb588a307d3b">sprites</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__dino_game_8h_source_1l00008">8</link> of file <link linkend="__dino_game_8h_source">DinoGame.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_dino_game_1a24898012db5fdb59f106958b2047bc87"/><section>
    <title>DinoGame()</title>
<indexterm><primary>DinoGame</primary><secondary>DinoGame</secondary></indexterm>
<indexterm><primary>DinoGame</primary><secondary>DinoGame</secondary></indexterm>
<para><computeroutput>DinoGame::DinoGame (<link linkend="_class_tiny_engine_frame_buffer">TinyEngineFrameBuffer</link> &amp; _framebuffer, <link linkend="_class_tiny_engine_renderer_i">TinyEngineRendererI</link> &amp; _renderer, <link linkend="_class_tiny_engine">TinyEngine</link> &amp; _engine)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__dino_game_8h_source_1l00010">10</link> of file <link linkend="__dino_game_8h_source">DinoGame.h</link>.</para>
<programlisting linenumbering="unnumbered">00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class_game_scene_1a9f20a87546afdf718a1ef0ff4fb53200">GameScene</link>(_framebuffer,&#32;_renderer,&#32;_engine)&#x240D;
00012 &#32;&#32;&#32;&#32;{
00013 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_class_dino_game_1aa28aa7f6869e9da56220b03800f3159a"/><section>
    <title>~DinoGame()</title>
<indexterm><primary>~DinoGame</primary><secondary>DinoGame</secondary></indexterm>
<indexterm><primary>DinoGame</primary><secondary>~DinoGame</secondary></indexterm>
<para><computeroutput>DinoGame::~DinoGame ( )<computeroutput>[override]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__dino_game_8cpp_source_1l00158">158</link> of file <link linkend="__dino_game_8cpp_source">DinoGame.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00159 {
00160 }
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_dino_game_1ae1d9e6cae7937318b7b0d39bc4b70990"/><section>
    <title>create()</title>
<indexterm><primary>create</primary><secondary>DinoGame</secondary></indexterm>
<indexterm><primary>DinoGame</primary><secondary>create</secondary></indexterm>
<para><computeroutput>void DinoGame::create ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_scene_i_1a7f6b05370faed688686525fe2d3706a0">SceneI</link>.</para>
<para>
Definition at line <link linkend="__dino_game_8cpp_source_1l00173">173</link> of file <link linkend="__dino_game_8cpp_source">DinoGame.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00174 {
00175 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Init&#32;Machine&#32;&amp;&#32;dma&#32;channel!\n&quot;</emphasis>);
00176 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;int&#32;res&#32;=&#32;myPlayer.init(TONE_NON_BLOCKING,&#32;true);</emphasis>
00177 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;printf(&quot;Result&#32;of&#32;initializing&#32;tone&#32;=&#32;0x%X\n&quot;,&#32;res);</emphasis>
00178 &#32;&#32;&#32;&#32;adc_init();
00179 
00180 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;sure&#32;GPIO&#32;is&#32;high-impedance,&#32;no&#32;pullups&#32;etc</emphasis>
00181 &#32;&#32;&#32;&#32;adc_gpio_init(44);
00182 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Select&#32;ADC&#32;input&#32;0&#32;(GPIO26)</emphasis>
00183 &#32;&#32;&#32;&#32;adc_select_input(4);
00184 
00185 
00186 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;todo&#32;get&#32;free&#32;sm</emphasis>
00187 
00188 
00189 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;will&#32;find&#32;a&#32;free&#32;pio&#32;and&#32;state&#32;machine&#32;for&#32;our&#32;program&#32;and&#32;load&#32;it&#32;for&#32;us</emphasis>
00190 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;use&#32;pio_claim_free_sm_and_add_program_for_gpio_range&#32;(for_gpio_range&#32;variant)</emphasis>
00191 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;so&#32;we&#32;will&#32;get&#32;a&#32;PIO&#32;instance&#32;suitable&#32;for&#32;addressing&#32;gpios&#32;&gt;=&#32;32&#32;if&#32;needed&#32;and&#32;supported&#32;by&#32;the&#32;hardware</emphasis>
00192 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;success&#32;=&#32;pio_claim_free_sm_and_add_program_for_gpio_range(&amp;ws2812_program,&#32;&amp;<link linkend="__dino_game_8cpp_1ac79a43604cef3e167780e935276174d0">pio</link>,&#32;&amp;<link linkend="__dino_game_8cpp_1abeba240b99c2caa6556ccab58b8c8ebb">sm</link>,&#32;&amp;<link linkend="__dino_game_8cpp_1a1fd80d31707250feb35db451a8edb5a0">offsetpio</link>,&#32;<link linkend="__dino_game_8cpp_1af75dc8bf5891f41c539ef9b8ebd3d1c3">WS2812_PIN</link>,
00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1,
00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>);
00195 &#32;&#32;&#32;&#32;hard_assert(success);
00196 
00197 &#32;&#32;&#32;&#32;ws2812_program_init(<link linkend="__dino_game_8cpp_1ac79a43604cef3e167780e935276174d0">pio</link>,&#32;<link linkend="__dino_game_8cpp_1abeba240b99c2caa6556ccab58b8c8ebb">sm</link>,&#32;<link linkend="__dino_game_8cpp_1a1fd80d31707250feb35db451a8edb5a0">offsetpio</link>,&#32;<link linkend="__dino_game_8cpp_1af75dc8bf5891f41c539ef9b8ebd3d1c3">WS2812_PIN</link>,&#32;1000000,&#32;<link linkend="__dino_game_8cpp_1a493b9b7cc0c4de9e5d832a5b9c8fe0f0">IS_RGBW</link>);
00198 
00199 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__dino_game_8cpp_1a87accd1af8e0aff4b818d891374f7cec">t</link>&#32;=&#32;0;
00200 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;while&#32;(1)&#32;{</emphasis>
00201 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;int&#32;pat&#32;=&#32;rand()&#32;%&#32;count_of(pattern_table);</emphasis>
00202 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;int&#32;dir&#32;=&#32;(rand()&#32;&gt;&gt;&#32;30)&#32;&amp;&#32;1&#32;?&#32;1&#32;:&#32;-1;</emphasis>
00203 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;puts(pattern_table[pat].name);</emphasis>
00204 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;puts(dir&#32;==&#32;1&#32;?&#32;&quot;(forward)&quot;&#32;:&#32;&quot;(backward)&quot;);</emphasis>
00205 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;1000;&#32;++i)&#32;{</emphasis>
00206 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pattern_table[pat].pat(pio,&#32;sm,&#32;NUM_PIXELS,&#32;t);</emphasis>
00207 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(10);</emphasis>
00208 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;+=&#32;dir;</emphasis>
00209 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;}</emphasis>
00210 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
00211 
00212 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;This&#32;will&#32;free&#32;resources&#32;and&#32;unload&#32;our&#32;program</emphasis>
00213 &#32;&#32;&#32;&#32;pio_remove_program_and_unclaim_sm(&amp;ws2812_program,&#32;<link linkend="__dino_game_8cpp_1ac79a43604cef3e167780e935276174d0">pio</link>,&#32;<link linkend="__dino_game_8cpp_1abeba240b99c2caa6556ccab58b8c8ebb">sm</link>,&#32;<link linkend="__dino_game_8cpp_1a1fd80d31707250feb35db451a8edb5a0">offsetpio</link>);
00214 
00215 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1ac4f0485291c1719b76b4ed425661143c">GameScene::create</link>();
00216 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a81a7db0840e434f7c42887f2a04611ee">scoreboard</link>.<link linkend="_class_tiny_engine_u_i_text_box_1a77ff35ef4c08a5af7f150a691323b0f4">add_text</link>(<emphasis role="stringliteral">&quot;s&quot;</emphasis>,&#32;<link linkend="__dino_game_8cpp_1ae7476f289721ad311a513f54dfcb6b41">score</link>);
00217 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a81a7db0840e434f7c42887f2a04611ee">scoreboard</link>.<link linkend="_class_tiny_engine_u_i_text_box_1a77ff35ef4c08a5af7f150a691323b0f4">add_text</link>(<emphasis role="stringliteral">&quot;j&quot;</emphasis>,&#32;<link linkend="__dino_game_8cpp_1a914c844a0a68fe9209a0fe76b9d4a2ff">jumps</link>);
00218 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a81a7db0840e434f7c42887f2a04611ee">scoreboard</link>.<link linkend="_class_tiny_engine_u_i_text_box_1a77ff35ef4c08a5af7f150a691323b0f4">add_text</link>(<emphasis role="stringliteral">&quot;t&quot;</emphasis>,&#32;<link linkend="__dino_game_8cpp_1a7713b8e35a97e9bb1ae59df540f16e9a">time_</link>);
00219 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a81a7db0840e434f7c42887f2a04611ee">scoreboard</link>.<link linkend="_class_tiny_engine_u_i_text_box_1a77ff35ef4c08a5af7f150a691323b0f4">add_text</link>(<emphasis role="stringliteral">&quot;mj&quot;</emphasis>,&#32;<link linkend="__dino_game_8cpp_1a28a153104e54ba918bdf95684eeae963">missed_jumps</link>);
00220 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>&#32;=&#32;Sprite(
00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;te_sprite_t{
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.sprite_buffer&#32;=&#32;dino_data,
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.width&#32;=&#32;24,
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.height&#32;=&#32;24,
00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.sprite_palette&#32;=&#32;0
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;},
00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;te_sprite_animation_t{
00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.sprite_animation_frames&#32;=&#32;dino_frames,
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.animation_delay&#32;=&#32;5,
00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.total_frames&#32;=&#32;11,
00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.current_frame&#32;=&#32;0,
00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.start_frame&#32;=&#32;3,
00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.end_frame&#32;=&#32;8
00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
00235 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1af4281d1664fda219368b190c0b233bcd">set_m_animated</link>(<emphasis role="keyword">true</emphasis>);
00236 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1a7c1f3afb104aa43c406d59ed0ae01413">set_m_x</link>(100);
00237 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1a0cae8bdfccd92955e9050871ad085c1d">set_m_y</link>(150);
00238 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a15a14f7c02f67365a3fc8edfe7e915cd">dinoBox</link>.<link linkend="_structc2_a_a_b_b_1ac0a11c1e43a839f9777fed4f46360c0f">min</link>&#32;=&#32;{&#32;.x&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1a1c5fb11a08c7da650adbf5e82f8d4d1d">get_m_x</link>(),&#32;.y&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1ac6985150992aae6e2a9642b47501faa1">get_m_y</link>()&#32;};
00239 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a15a14f7c02f67365a3fc8edfe7e915cd">dinoBox</link>.<link linkend="_structc2_a_a_b_b_1a4f59ea4fe9378131665388398396ff39">max</link>&#32;=&#32;{
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.x&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1a1c5fb11a08c7da650adbf5e82f8d4d1d">get_m_x</link>()&#32;+&#32;<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1aabab23ab32f0cee58b1f2715597458de">get_m_sprite_data</link>()-&gt;<link linkend="_structte__sprite__t_1a0fe0406c1a75cb8db0fcae2dfbc29bf2">width</link>,
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.y&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1ac6985150992aae6e2a9642b47501faa1">get_m_y</link>()&#32;+&#32;<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1aabab23ab32f0cee58b1f2715597458de">get_m_sprite_data</link>()-&gt;<link linkend="_structte__sprite__t_1a6818a63ebf2d3c4908f8c9f4a5c61c9c">height</link>
00242 &#32;&#32;&#32;&#32;};
00243 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>&#32;=&#32;Sprite(
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;te_sprite_t{
00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.sprite_buffer&#32;=&#32;cactus_data,
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.width&#32;=&#32;cactus_width,
00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.height&#32;=&#32;cactus_height,
00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.sprite_palette&#32;=&#32;0
00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
00250 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1a7c1f3afb104aa43c406d59ed0ae01413">set_m_x</link>(240);
00251 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1a0cae8bdfccd92955e9050871ad085c1d">set_m_y</link>(150);
00252 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1abe6d359cb3612c4c13f4f2c705b23e18">cactusBox</link>.<link linkend="_structc2_a_a_b_b_1ac0a11c1e43a839f9777fed4f46360c0f">min</link>&#32;=&#32;{&#32;.x&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1a1c5fb11a08c7da650adbf5e82f8d4d1d">get_m_x</link>(),&#32;.y&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1ac6985150992aae6e2a9642b47501faa1">get_m_y</link>()&#32;};
00253 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1abe6d359cb3612c4c13f4f2c705b23e18">cactusBox</link>.<link linkend="_structc2_a_a_b_b_1a4f59ea4fe9378131665388398396ff39">max</link>&#32;=&#32;{
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.x&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1a1c5fb11a08c7da650adbf5e82f8d4d1d">get_m_x</link>()&#32;+&#32;<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1aabab23ab32f0cee58b1f2715597458de">get_m_sprite_data</link>()-&gt;<link linkend="_structte__sprite__t_1a0fe0406c1a75cb8db0fcae2dfbc29bf2">width</link>,
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.y&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1ac6985150992aae6e2a9642b47501faa1">get_m_y</link>()&#32;+&#32;<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1aabab23ab32f0cee58b1f2715597458de">get_m_sprite_data</link>()-&gt;<link linkend="_structte__sprite__t_1a6818a63ebf2d3c4908f8c9f4a5c61c9c">height</link>
00256 &#32;&#32;&#32;&#32;};
00257 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link>.bind_serial_input_event(
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;w&apos;</emphasis>,
00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[&amp;]
00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__dino_game_8cpp_1a520d5bf19a4fb31c15dd1200368b058c">gameStarted</link>)
00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;memset(m_framebuffer.pixel_buffer_back,&#32;0,&#32;m_framebuffer.m_pixel_buffer_size);</emphasis>
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.swap_blocking();</emphasis>
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a520d5bf19a4fb31c15dd1200368b058c">gameStarted</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">true</emphasis>&#32;==&#32;<link linkend="__dino_game_8cpp_1afcbf95c3f0a20a7d68c5d9a241853c66">onGround</link>)
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1adcbe47c53a6e849aa28bf58cbf47ee00">jump_counter</link>++;
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a1932044dc8b6aa5bd6ddf23c62a7ea1a">vely</link>&#32;=&#32;-10;
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1afcbf95c3f0a20a7d68c5d9a241853c66">onGround</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a10e04ce2c5a546147cbd9f4baee936cb">play_tone</link>&#32;=&#32;1;
00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;myPlayer.tone(15000,0.25);</emphasis>
00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;int&#32;pat&#32;=&#32;rand()&#32;%&#32;count_of(pattern_table);</emphasis>
00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;int&#32;dir&#32;=&#32;(rand()&#32;&gt;&gt;&#32;30)&#32;&amp;&#32;1&#32;?&#32;1&#32;:&#32;-1;</emphasis>
00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;puts(pattern_table[pat].name);</emphasis>
00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;puts(dir&#32;==&#32;1&#32;?&#32;&quot;(forward)&quot;&#32;:&#32;&quot;(backward)&quot;);</emphasis>
00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;1000;&#32;++i)&#32;{</emphasis>
00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pattern_table[pat].pat(pio,&#32;sm,&#32;NUM_PIXELS,&#32;t);</emphasis>
00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;sleep_ms(10);</emphasis>
00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;t&#32;+=&#32;dir;</emphasis>
00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;}</emphasis>
00284 
00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;put_pixel(pio,&#32;sm,&#32;urgb_u32(0xff,&#32;0,&#32;0));</emphasis>
00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;put_pixel(pio,&#32;sm,&#32;urgb_u32(0,&#32;0xff,&#32;0));</emphasis>
00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;put_pixel(pio,&#32;sm,&#32;urgb_u32(0,&#32;0,&#32;0xff));</emphasis>
00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00289 &#32;&#32;&#32;&#32;);
00290 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link>.bind_serial_input_event(
00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;x&apos;</emphasis>,
00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[&amp;]
00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a520d5bf19a4fb31c15dd1200368b058c">gameStarted</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00296 &#32;&#32;&#32;&#32;);
00297 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link>.bind_serial_input_event(
00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;r&apos;</emphasis>,
00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[&amp;]
00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;watchdog_reboot(0,&#32;0,&#32;10);
00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;gameStarted&#32;=&#32;false;</emphasis>
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00304 &#32;&#32;&#32;&#32;);
00305 
00306 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a3ddd4ba5bfabc73eebf7bba28c5ff534">m_engine</link>.bind_gpio_input_event(2,&#32;[&amp;]&#32;{
00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__dino_game_8cpp_1a520d5bf19a4fb31c15dd1200368b058c">gameStarted</link>)
00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;memset(m_framebuffer.pixel_buffer_back,&#32;0,&#32;m_framebuffer.m_pixel_buffer_size);</emphasis>
00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.swap_blocking();</emphasis>
00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a520d5bf19a4fb31c15dd1200368b058c">gameStarted</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">true</emphasis>&#32;==&#32;<link linkend="__dino_game_8cpp_1afcbf95c3f0a20a7d68c5d9a241853c66">onGround</link>)
00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1adcbe47c53a6e849aa28bf58cbf47ee00">jump_counter</link>++;
00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a1932044dc8b6aa5bd6ddf23c62a7ea1a">vely</link>&#32;=&#32;-10;
00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1afcbf95c3f0a20a7d68c5d9a241853c66">onGround</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a10e04ce2c5a546147cbd9f4baee936cb">play_tone</link>&#32;=&#32;1;
00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;myPlayer.tone(15000,0.25);</emphasis>
00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;int&#32;pat&#32;=&#32;rand()&#32;%&#32;count_of(pattern_table);</emphasis>
00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;int&#32;dir&#32;=&#32;(rand()&#32;&gt;&gt;&#32;30)&#32;&amp;&#32;1&#32;?&#32;1&#32;:&#32;-1;</emphasis>
00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;puts(pattern_table[pat].name);</emphasis>
00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;puts(dir&#32;==&#32;1&#32;?&#32;&quot;(forward)&quot;&#32;:&#32;&quot;(backward)&quot;);</emphasis>
00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;1000;&#32;++i)&#32;{</emphasis>
00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pattern_table[pat].pat(pio,&#32;sm,&#32;NUM_PIXELS,&#32;t);</emphasis>
00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;sleep_ms(10);</emphasis>
00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;t&#32;+=&#32;dir;</emphasis>
00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;}</emphasis>
00330 
00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;put_pixel(pio,&#32;sm,&#32;urgb_u32(0xff,&#32;0,&#32;0));</emphasis>
00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;put_pixel(pio,&#32;sm,&#32;urgb_u32(0,&#32;0xff,&#32;0));</emphasis>
00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;put_pixel(pio,&#32;sm,&#32;urgb_u32(0,&#32;0,&#32;0xff));</emphasis>
00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
00335 
00336 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.clear(0);
00337 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.swap_blocking();
00338 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.clear(0);
00339 }
</programlisting></section>
<anchor xml:id="_class_dino_game_1afdfa24b50b4b98cca5ea1271bccf3c0d"/><section>
    <title>destroy()</title>
<indexterm><primary>destroy</primary><secondary>DinoGame</secondary></indexterm>
<indexterm><primary>DinoGame</primary><secondary>destroy</secondary></indexterm>
<para><computeroutput>void DinoGame::destroy ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_scene_i_1aad87a877cb92b4ea71b2f50dc06e132b">SceneI</link>.</para>
<para>
Definition at line <link linkend="__dino_game_8cpp_source_1l00519">519</link> of file <link linkend="__dino_game_8cpp_source">DinoGame.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00520 {
00521 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a79aa067bf23e490cdfcb4aec1b181b12">GameScene::destroy</link>();
00522 }
</programlisting></section>
<anchor xml:id="_class_dino_game_1abbbe0d7eb69274e8118e24baebd0c43f"/><section>
    <title>render()</title>
<indexterm><primary>render</primary><secondary>DinoGame</secondary></indexterm>
<indexterm><primary>DinoGame</primary><secondary>render</secondary></indexterm>
<para><computeroutput>void DinoGame::render ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_scene_i_1a573a66b660ce2e704f035ea27ac9ccac">SceneI</link>.</para>
<para>
Definition at line <link linkend="__dino_game_8cpp_source_1l00379">379</link> of file <link linkend="__dino_game_8cpp_source">DinoGame.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00380 {
00381 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.clear(0);
00382 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_filled_rectangle(0,&#32;0,&#32;100,&#32;30,&#32;0);</emphasis>
00383 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_filled_rectangle(0,&#32;120,&#32;320,&#32;240-120,&#32;0);</emphasis>
00384 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_grid(10,&#32;15);</emphasis>
00385 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1af107c5ffdf361b4e0b718f486cbc7d0e">GameScene::render</link>();
00386 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_filled_rectangle(dinoSprite.get_m_x(),&#32;dinoSprite.get_m_y(),</emphasis>
00387 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dinoSprite.get_m_sprite_data()-&gt;width,&#32;dinoSprite.get_m_sprite_data()-&gt;height,</emphasis>
00388 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);</emphasis>
00389 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.draw_sprite(<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>);
00390 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_filled_rectangle(cactusSprite.get_m_x(),&#32;cactusSprite.get_m_y(),</emphasis>
00391 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cactusSprite.get_m_sprite_data()-&gt;width,</emphasis>
00392 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cactusSprite.get_m_sprite_data()-&gt;height,</emphasis>
00393 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);</emphasis>
00394 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.draw_sprite(<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>);
00395 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;input.render(m_framebuffer);</emphasis>
00396 &#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
00397 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;sprintf(detail,&#32;&quot;vely:&#32;%f&quot;,&#32;vely);</emphasis>
00398 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;m_framebuffer.draw_string(detail,&#32;5,&#32;70,&#32;130);</emphasis>
00399 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//</emphasis>
00400 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;sprintf(detail,&#32;&quot;Jump&#32;Input:&#32;%d&quot;,&#32;jump);</emphasis>
00401 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;m_framebuffer.draw_string(detail,&#32;5,&#32;80,&#32;140);</emphasis>
00402 &#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
00403 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;blit_rect_dma(m_framebuffer.pixel_buffer_back);</emphasis>
00404 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_filled_rectangle(50,&#32;50,&#32;100,&#32;100,&#32;15);</emphasis>
00405 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;score.render(m_framebuffer);</emphasis>
00406 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_filled_rectangle(scoreboard.get_m_x(),&#32;scoreboard.get_m_y(),</emphasis>
00407 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scoreboard.get_m_width(),&#32;scoreboard.get_m_height(),</emphasis>
00408 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);</emphasis>
00409 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a81a7db0840e434f7c42887f2a04611ee">scoreboard</link>.<link linkend="_class_tiny_engine_u_i_text_box_1ab1068f0b54dea4bbf10d29c6c59f84fc">render</link>(<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>);
00410 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__dino_game_8cpp_1a520d5bf19a4fb31c15dd1200368b058c">gameStarted</link>)
00411 &#32;&#32;&#32;&#32;{
00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_framebuffer.draw_filled_rectangle(banner.get_m_x(),&#32;banner.get_m_y(),</emphasis>
00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;banner.get_m_width(),&#32;banner.get_m_height(),</emphasis>
00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0);</emphasis>
00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a098666c0e1caa450afbee4d9b39c2296">banner</link>.<link linkend="_class_tiny_engine_u_i_blinking_text_box_1a2795076dc9e802deb255f674278776b5">render</link>(<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>);
00416 &#32;&#32;&#32;&#32;}
00417 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_renderer.wait_for_vsync();</emphasis>
00418 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a6ce64a6f7dc23c88abe2d43d594ee269">m_framebuffer</link>.swap_blocking();
00419 }
</programlisting></section>
<anchor xml:id="_class_dino_game_1ac19a132cf8cef2a477b518df8a3b3db8"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>DinoGame</secondary></indexterm>
<indexterm><primary>DinoGame</primary><secondary>update</secondary></indexterm>
<para><computeroutput>void DinoGame::update (double frameTime)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_scene_i_1a917d7c8e713381b6ff20b1878a997100">SceneI</link>.</para>
<para>
Definition at line <link linkend="__dino_game_8cpp_source_1l00425">425</link> of file <link linkend="__dino_game_8cpp_source">DinoGame.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00426 &#32;&#32;&#32;&#32;<link linkend="_class_game_scene_1a9bb2bd694b9c8399ea22aed23a6a809f">GameScene::update</link>(frameTime);
00427 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1a27f095629aeacb38f8dc1a3446ed29d9">set_m_frametime</link>(<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1acae1b5a7536cf89c73c29797e21b780f">get_m_frametime</link>()&#32;+&#32;frameTime&#32;*&#32;100);
00428 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a1932044dc8b6aa5bd6ddf23c62a7ea1a">vely</link>&#32;+=&#32;<link linkend="__dino_game_8cpp_1a31924e6c9b17aad7f861e818b8be5d8f">gravity</link>;
00429 
00430 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;put_pixel(pio,&#32;sm,&#32;urgb_u32(0xff&#32;-&#32;vely,&#32;0,&#32;0));</emphasis>
00431 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;put_pixel(pio,&#32;sm,&#32;urgb_u32(0,&#32;0xff&#32;-&#32;vely,&#32;0));</emphasis>
00432 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;put_pixel(pio,&#32;sm,&#32;urgb_u32(0,&#32;0,&#32;0xff&#32;-&#32;vely));</emphasis>
00433 
00434 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1a0cae8bdfccd92955e9050871ad085c1d">set_m_y</link>(<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1ac6985150992aae6e2a9642b47501faa1">get_m_y</link>()&#32;+&#32;<link linkend="__dino_game_8cpp_1a1932044dc8b6aa5bd6ddf23c62a7ea1a">vely</link>);
00435 
00436 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a15a14f7c02f67365a3fc8edfe7e915cd">dinoBox</link>.<link linkend="_structc2_a_a_b_b_1ac0a11c1e43a839f9777fed4f46360c0f">min</link>&#32;=&#32;{&#32;.x&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1a1c5fb11a08c7da650adbf5e82f8d4d1d">get_m_x</link>(),&#32;.y&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1ac6985150992aae6e2a9642b47501faa1">get_m_y</link>()&#32;};
00437 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a15a14f7c02f67365a3fc8edfe7e915cd">dinoBox</link>.<link linkend="_structc2_a_a_b_b_1a4f59ea4fe9378131665388398396ff39">max</link>&#32;=&#32;{
00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.x&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1a1c5fb11a08c7da650adbf5e82f8d4d1d">get_m_x</link>()&#32;+&#32;<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1aabab23ab32f0cee58b1f2715597458de">get_m_sprite_data</link>()-&gt;<link linkend="_structte__sprite__t_1a0fe0406c1a75cb8db0fcae2dfbc29bf2">width</link>,
00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.y&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1ac6985150992aae6e2a9642b47501faa1">get_m_y</link>()&#32;+&#32;<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1aabab23ab32f0cee58b1f2715597458de">get_m_sprite_data</link>()-&gt;<link linkend="_structte__sprite__t_1a6818a63ebf2d3c4908f8c9f4a5c61c9c">height</link>
00440 &#32;&#32;&#32;&#32;};
00441 
00442 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__dino_game_8cpp_1a520d5bf19a4fb31c15dd1200368b058c">gameStarted</link>)
00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1a7c1f3afb104aa43c406d59ed0ae01413">set_m_x</link>(<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1a1c5fb11a08c7da650adbf5e82f8d4d1d">get_m_x</link>()&#32;-&#32;frameTime&#32;*&#32;100);
00444 
00445 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1abe6d359cb3612c4c13f4f2c705b23e18">cactusBox</link>.<link linkend="_structc2_a_a_b_b_1ac0a11c1e43a839f9777fed4f46360c0f">min</link>&#32;=&#32;{&#32;.x&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1a1c5fb11a08c7da650adbf5e82f8d4d1d">get_m_x</link>(),&#32;.y&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1ac6985150992aae6e2a9642b47501faa1">get_m_y</link>()&#32;};
00446 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1abe6d359cb3612c4c13f4f2c705b23e18">cactusBox</link>.<link linkend="_structc2_a_a_b_b_1a4f59ea4fe9378131665388398396ff39">max</link>&#32;=&#32;{
00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.x&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1a1c5fb11a08c7da650adbf5e82f8d4d1d">get_m_x</link>()&#32;+&#32;<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1aabab23ab32f0cee58b1f2715597458de">get_m_sprite_data</link>()-&gt;<link linkend="_structte__sprite__t_1a0fe0406c1a75cb8db0fcae2dfbc29bf2">width</link>,
00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.y&#32;=&#32;(float)<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1ac6985150992aae6e2a9642b47501faa1">get_m_y</link>()&#32;+&#32;<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1aabab23ab32f0cee58b1f2715597458de">get_m_sprite_data</link>()-&gt;<link linkend="_structte__sprite__t_1a6818a63ebf2d3c4908f8c9f4a5c61c9c">height</link>
00449 &#32;&#32;&#32;&#32;};
00450 
00451 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1a1c5fb11a08c7da650adbf5e82f8d4d1d">get_m_x</link>()&#32;&lt;&#32;10)
00452 &#32;&#32;&#32;&#32;{
00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a65169b2e93e922142ca6273855d30060">alreadyHit</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1ab8ce246f91eb4b52e54fb7197fc23c9c">cactusSprite</link>.<link linkend="_class_sprite_1a7c1f3afb104aa43c406d59ed0ae01413">set_m_x</link>(310);
00455 &#32;&#32;&#32;&#32;}
00456 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_cute__c2_8h_1ac2ffe6c3fb0b4a2865ab3d4fd966bc57">c2AABBtoAABB</link>(<link linkend="__dino_game_8cpp_1a15a14f7c02f67365a3fc8edfe7e915cd">dinoBox</link>,&#32;<link linkend="__dino_game_8cpp_1abe6d359cb3612c4c13f4f2c705b23e18">cactusBox</link>)&#32;&amp;&amp;&#32;!<link linkend="__dino_game_8cpp_1a65169b2e93e922142ca6273855d30060">alreadyHit</link>)
00457 &#32;&#32;&#32;&#32;{
00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a65169b2e93e922142ca6273855d30060">alreadyHit</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1aff930da8859a062c15e30210acb11837">miss</link>++;
00460 &#32;&#32;&#32;&#32;}
00461 
00462 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1ac6985150992aae6e2a9642b47501faa1">get_m_y</link>()&#32;&gt;&#32;150)
00463 &#32;&#32;&#32;&#32;{
00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1afcbf95c3f0a20a7d68c5d9a241853c66">onGround</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a91d743c4b13d895bd19a0debffa433c9">dinoSprite</link>.<link linkend="_class_sprite_1a0cae8bdfccd92955e9050871ad085c1d">set_m_y</link>(150);
00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a1932044dc8b6aa5bd6ddf23c62a7ea1a">vely</link>&#32;=&#32;0.0f;
00467 &#32;&#32;&#32;&#32;}
00468 
00469 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a87accd1af8e0aff4b818d891374f7cec">t</link>&#32;+=&#32;frameTime;
00470 &#32;&#32;&#32;&#32;sprintf(<link linkend="__dino_game_8cpp_1acbe7ef91b8715ffcdfb80354ca7cc448">temp</link>,&#32;<emphasis role="stringliteral">&quot;Score:%.2f&quot;</emphasis>,&#32;frameTime);
00471 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1ae7476f289721ad311a513f54dfcb6b41">score</link>.<link linkend="_class_tiny_engine_u_i_text_1a31fc35aeceb06b9e31449f81f03ccc0f">set_text</link>(<link linkend="__dino_game_8cpp_1acbe7ef91b8715ffcdfb80354ca7cc448">temp</link>);
00472 &#32;&#32;&#32;&#32;sprintf(<link linkend="__dino_game_8cpp_1acbe7ef91b8715ffcdfb80354ca7cc448">temp</link>,&#32;<emphasis role="stringliteral">&quot;Jumps:%d&quot;</emphasis>,&#32;<link linkend="__dino_game_8cpp_1adcbe47c53a6e849aa28bf58cbf47ee00">jump_counter</link>);
00473 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a914c844a0a68fe9209a0fe76b9d4a2ff">jumps</link>.<link linkend="_class_tiny_engine_u_i_text_1a31fc35aeceb06b9e31449f81f03ccc0f">set_text</link>(<link linkend="__dino_game_8cpp_1acbe7ef91b8715ffcdfb80354ca7cc448">temp</link>);
00474 &#32;&#32;&#32;&#32;sprintf(<link linkend="__dino_game_8cpp_1acbe7ef91b8715ffcdfb80354ca7cc448">temp</link>,&#32;<emphasis role="stringliteral">&quot;Time:%1.0fs&quot;</emphasis>,&#32;<link linkend="__dino_game_8cpp_1a87accd1af8e0aff4b818d891374f7cec">t</link>);
00475 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a7713b8e35a97e9bb1ae59df540f16e9a">time_</link>.<link linkend="_class_tiny_engine_u_i_text_1a31fc35aeceb06b9e31449f81f03ccc0f">set_text</link>(<link linkend="__dino_game_8cpp_1acbe7ef91b8715ffcdfb80354ca7cc448">temp</link>);
00476 &#32;&#32;&#32;&#32;sprintf(<link linkend="__dino_game_8cpp_1acbe7ef91b8715ffcdfb80354ca7cc448">temp</link>,&#32;<emphasis role="stringliteral">&quot;Missed&#32;Jumps:%d&quot;</emphasis>,&#32;<link linkend="__dino_game_8cpp_1aff930da8859a062c15e30210acb11837">miss</link>);
00477 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a28a153104e54ba918bdf95684eeae963">missed_jumps</link>.<link linkend="_class_tiny_engine_u_i_text_1a31fc35aeceb06b9e31449f81f03ccc0f">set_text</link>(<link linkend="__dino_game_8cpp_1acbe7ef91b8715ffcdfb80354ca7cc448">temp</link>);
00478 
00479 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;12-bit&#32;conversion,&#32;assume&#32;max&#32;value&#32;==&#32;ADC_VREF&#32;==&#32;3.3&#32;V</emphasis>
00480 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">float</emphasis>&#32;conversion_factor&#32;=&#32;3.3f&#32;/&#32;(1&#32;&lt;&lt;&#32;12);
00481 &#32;&#32;&#32;&#32;uint16_t&#32;result&#32;=&#32;adc_read();
00482 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;printf(&quot;Raw&#32;value:&#32;0x%03x,&#32;voltage:&#32;%f&#32;V\n&quot;,&#32;result,&#32;result&#32;*&#32;conversion_factor);</emphasis>
00483 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sleep_ms(500);</emphasis>
00484 &#32;&#32;&#32;&#32;sprintf(<link linkend="__dino_game_8cpp_1acbe7ef91b8715ffcdfb80354ca7cc448">temp</link>,&#32;<emphasis role="stringliteral">&quot;Input:&#32;%f&quot;</emphasis>,&#32;result&#32;*&#32;conversion_factor);
00485 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a01094266c5c789fd93672e74f7f04a00">input</link>.<link linkend="_class_tiny_engine_u_i_text_1a31fc35aeceb06b9e31449f81f03ccc0f">set_text</link>(<link linkend="__dino_game_8cpp_1acbe7ef91b8715ffcdfb80354ca7cc448">temp</link>);
00486 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a098666c0e1caa450afbee4d9b39c2296">banner</link>.<link linkend="_class_tiny_engine_u_i_blinking_text_box_1a390c428161e594f7e06aaecdae83cb5f">update</link>(frameTime);
00487 
00488 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;tone_time&#32;=&#32;0;
00489 
00490 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;(play_tone&#32;&amp;&amp;&#32;tone_time&#32;&lt;=&#32;10)&#32;{</emphasis>
00491 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;myPlayer.play_melody(100,&#32;3,&#32;new&#32;int[]{NOTE_A1,&#32;NOTE_D1,&#32;NOTE_A2});</emphasis>
00492 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;myPlayer.tone(10000&#32;+&#32;frameTime&#32;*&#32;100,&#32;0.01);</emphasis>
00493 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;tone_time&#32;+=&#32;frameTime&#32;*&#32;100;</emphasis>
00494 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
00495 &#32;&#32;&#32;&#32;<emphasis role="comment">//</emphasis>
00496 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;(tone_time&#32;&gt;&#32;10)&#32;{</emphasis>
00497 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;tone_time&#32;=&#32;0;</emphasis>
00498 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;play_tone&#32;=&#32;0;</emphasis>
00499 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
00500 
00501 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__dino_game_8cpp_1a24a31bc0d344f77c0b94c05f47cbeede">pat</link>&#32;=&#32;rand()&#32;%&#32;count_of(<link linkend="__dino_game_8cpp_1a5a4c6b92e5ee81465b3510b5754da506">pattern_table</link>);
00502 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dir&#32;=&#32;(rand()&#32;&gt;&gt;&#32;30)&#32;&amp;&#32;1&#32;?&#32;1&#32;:&#32;-1;
00503 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;puts(pattern_table[pat].name);</emphasis>
00504 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;puts(dir&#32;==&#32;1&#32;?&#32;&quot;(forward)&quot;&#32;:&#32;&quot;(backward)&quot;);</emphasis>
00505 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;1000;&#32;++i)&#32;{</emphasis>
00506 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;static&#32;double&#32;rgb_time&#32;=&#32;0;</emphasis>
00507 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;//&#32;rgb_time&#32;+=&#32;frameTime&#32;;</emphasis>
00508 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;(rgb_time&#32;&gt;&#32;1)</emphasis>
00509 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;{</emphasis>
00510 &#32;&#32;&#32;&#32;<link linkend="__dino_game_8cpp_1a5a4c6b92e5ee81465b3510b5754da506">pattern_table</link>[1].pat(<link linkend="__dino_game_8cpp_1ac79a43604cef3e167780e935276174d0">pio</link>,&#32;<link linkend="__dino_game_8cpp_1abeba240b99c2caa6556ccab58b8c8ebb">sm</link>,&#32;<link linkend="__dino_game_8cpp_1a893011783fefc21f30baf08142cd3c35">NUM_PIXELS</link>,&#32;frameTime);
00511 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;rgb_time&#32;=&#32;0;</emphasis>
00512 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
00513 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rgb_time&#32;+=&#32;frameTime&#32;*&#32;10;</emphasis>
00514 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sleep_ms(10);</emphasis>
00515 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;t&#32;+=&#32;dir;</emphasis>
00516 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
00517 }
</programlisting></section>
<para>
The documentation for this class was generated from the following files:</para>
src/scenes/<link linkend="__dino_game_8h">DinoGame.h</link>src/scenes/<link linkend="__dino_game_8cpp">DinoGame.cpp</link></section>
</section>
