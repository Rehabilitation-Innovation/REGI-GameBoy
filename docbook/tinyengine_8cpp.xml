<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_tinyengine_8cpp" xml:lang="en-US">
<title>src/tinyengine.cpp File Reference</title>
<indexterm><primary>src/tinyengine.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;tinyengine.h&quot;<?linebreak?>#include &quot;pico/stdlib.h&quot;<?linebreak?>#include &lt;pico/time.h&gt;<?linebreak?>#include &quot;hardware/gpio.h&quot;<?linebreak?>#include &quot;hardware/exception.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_tinyengine_8cpp_1a1de69c73f829a03f46f5e7690da7e79a">UART_ID</link>&#160;&#160;&#160;uart0</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_tinyengine_8cpp_1a141e0e4cfccde883fde46e6908a6cf9e">set_frequency</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_tinyengine_8cpp_1ad7fec5b2b07b712822dc8182d1796c22">on_uart_rx</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_tinyengine_8cpp_1a7f6538b252b233c2a00eeabf455b6ac8">gpio_callback</link> (uint gpio, uint32_t events)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>std::vector&lt; uint8_t &gt; * <link linkend="_tinyengine_8cpp_1a0d3ac15188af7c6cabbbe6e0e8fdf77e">serial_input_queue</link></para>
</listitem>
            <listitem><para>std::vector&lt; uint8_t &gt; * <link linkend="_tinyengine_8cpp_1a28efb0fa699c7320eb9bd7d21efb205b">gpio_input_queue</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; uint8_t, uint32_t &gt; <link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">gpio_debouce_map</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_tinyengine_8cpp_1a1de69c73f829a03f46f5e7690da7e79a"/><section>
    <title>UART_ID</title>
<indexterm><primary>UART_ID</primary><secondary>tinyengine.cpp</secondary></indexterm>
<indexterm><primary>tinyengine.cpp</primary><secondary>UART_ID</secondary></indexterm>
<para><computeroutput>#define UART_ID&#160;&#160;&#160;uart0</computeroutput></para><para>
Definition at line <link linkend="_tinyengine_8cpp_source_1l00007">7</link> of file <link linkend="_tinyengine_8cpp_source">tinyengine.cpp</link>.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_tinyengine_8cpp_1a7f6538b252b233c2a00eeabf455b6ac8"/><section>
    <title>gpio_callback()</title>
<indexterm><primary>gpio_callback</primary><secondary>tinyengine.cpp</secondary></indexterm>
<indexterm><primary>tinyengine.cpp</primary><secondary>gpio_callback</secondary></indexterm>
<para><computeroutput>void gpio_callback (uint gpio, uint32_t events)</computeroutput></para><para>
Definition at line <link linkend="_tinyengine_8cpp_source_1l00132">132</link> of file <link linkend="_tinyengine_8cpp_source">tinyengine.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00133 
00134 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;(!gpio_debounce)&#32;{</emphasis>
00135 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;gpio_debounce&#32;=&#32;time_us_32();</emphasis>
00136 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;return;</emphasis>
00137 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
00138 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;((uint32_t)250000&#32;&lt;=&#32;(time_us_32()&#32;-&#32;gpio_debounce))&#32;{</emphasis>
00139 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;gpio_input_queue-&gt;emplace_back(gpio);</emphasis>
00140 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;gpio_debounce&#32;=&#32;0;</emphasis>
00141 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
00142 
00143 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">gpio_debouce_map</link>[gpio])&#32;{
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">gpio_debouce_map</link>[gpio]&#32;=&#32;time_us_32();
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00146 &#32;&#32;&#32;&#32;}
00147 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((uint32_t)250000&#32;&lt;=&#32;(time_us_32()&#32;-&#32;<link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">gpio_debouce_map</link>[gpio]))&#32;{
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tinyengine_8cpp_1a28efb0fa699c7320eb9bd7d21efb205b">gpio_input_queue</link>-&gt;emplace_back(gpio);
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">gpio_debouce_map</link>[gpio]&#32;=&#32;0;
00150 &#32;&#32;&#32;&#32;}
00151 
00152 }
</programlisting></section>
<anchor xml:id="_tinyengine_8cpp_1ad7fec5b2b07b712822dc8182d1796c22"/><section>
    <title>on_uart_rx()</title>
<indexterm><primary>on_uart_rx</primary><secondary>tinyengine.cpp</secondary></indexterm>
<indexterm><primary>tinyengine.cpp</primary><secondary>on_uart_rx</secondary></indexterm>
<para><computeroutput>void on_uart_rx ( )</computeroutput></para><para>
Definition at line <link linkend="_tinyengine_8cpp_source_1l00118">118</link> of file <link linkend="_tinyengine_8cpp_source">tinyengine.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00119 {
00120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(uart_is_readable(<link linkend="_tinyengine_8cpp_1a1de69c73f829a03f46f5e7690da7e79a">UART_ID</link>))
00121 &#32;&#32;&#32;&#32;{
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;ch&#32;=&#32;uart_getc(<link linkend="_tinyengine_8cpp_1a1de69c73f829a03f46f5e7690da7e79a">UART_ID</link>);
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tinyengine_8cpp_1a0d3ac15188af7c6cabbbe6e0e8fdf77e">serial_input_queue</link>-&gt;emplace_back(ch);
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chars_rxed++;
00125 &#32;&#32;&#32;&#32;}
00126 }
</programlisting></section>
<anchor xml:id="_tinyengine_8cpp_1a141e0e4cfccde883fde46e6908a6cf9e"/><section>
    <title>set_frequency()</title>
<indexterm><primary>set_frequency</primary><secondary>tinyengine.cpp</secondary></indexterm>
<indexterm><primary>tinyengine.cpp</primary><secondary>set_frequency</secondary></indexterm>
<para><computeroutput>void set_frequency ( )</computeroutput></para><para>
Definition at line <link linkend="_tinyengine_8cpp_source_1l00097">97</link> of file <link linkend="_tinyengine_8cpp_source">tinyengine.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00098 &#32;&#32;&#32;&#32;vreg_set_voltage(VREG_VOLTAGE_1_30);
00099 &#32;&#32;&#32;&#32;set_sys_clock_khz(315000,&#32;<emphasis role="keyword">false</emphasis>);
00100 &#32;&#32;&#32;&#32;clock_configure(
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;clk_peri,
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;glitchless&#32;mux</emphasis>
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CLOCKS_CLK_PERI_CTRL_AUXSRC_VALUE_CLKSRC_PLL_SYS,&#32;<emphasis role="comment">//&#32;System&#32;PLL&#32;on&#32;AUX&#32;mux</emphasis>
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;315000&#32;*&#32;1000,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Input&#32;frequency</emphasis>
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;315000&#32;*&#32;1000&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Output&#32;(must&#32;be&#32;same&#32;as&#32;no&#32;divider)</emphasis>
00106 &#32;&#32;&#32;&#32;);
00107 &#32;&#32;&#32;&#32;clock_configure(
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;clk_hstx,
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;glitchless&#32;mux</emphasis>
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CLOCKS_CLK_PERI_CTRL_AUXSRC_VALUE_CLKSRC_PLL_SYS,&#32;<emphasis role="comment">//&#32;System&#32;PLL&#32;on&#32;AUX&#32;mux</emphasis>
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;315000&#32;*&#32;1000,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Input&#32;frequency</emphasis>
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;315000&#32;/&#32;2&#32;*&#32;1000&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Output&#32;(must&#32;be&#32;same&#32;as&#32;no&#32;divider)</emphasis>
00113 &#32;&#32;&#32;&#32;);
00114 &#32;&#32;&#32;&#32;exception_set_exclusive_handler(HARDFAULT_EXCEPTION,&#32;hardfault);
00115 }
</programlisting></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8"/><section>
    <title>gpio_debouce_map</title>
<indexterm><primary>gpio_debouce_map</primary><secondary>tinyengine.cpp</secondary></indexterm>
<indexterm><primary>tinyengine.cpp</primary><secondary>gpio_debouce_map</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;uint8_t, uint32_t&gt; gpio_debouce_map</computeroutput></para><para>
Definition at line <link linkend="_tinyengine_8cpp_source_1l00129">129</link> of file <link linkend="_tinyengine_8cpp_source">tinyengine.cpp</link>.</para>
</section>
<anchor xml:id="_tinyengine_8cpp_1a28efb0fa699c7320eb9bd7d21efb205b"/><section>
    <title>gpio_input_queue</title>
<indexterm><primary>gpio_input_queue</primary><secondary>tinyengine.cpp</secondary></indexterm>
<indexterm><primary>tinyengine.cpp</primary><secondary>gpio_input_queue</secondary></indexterm>
<para><computeroutput>std::vector&lt;uint8_t&gt;* gpio_input_queue</computeroutput></para><para>
Definition at line <link linkend="_tinyengine_8cpp_source_1l00128">128</link> of file <link linkend="_tinyengine_8cpp_source">tinyengine.cpp</link>.</para>
</section>
<anchor xml:id="_tinyengine_8cpp_1a0d3ac15188af7c6cabbbe6e0e8fdf77e"/><section>
    <title>serial_input_queue</title>
<indexterm><primary>serial_input_queue</primary><secondary>tinyengine.cpp</secondary></indexterm>
<indexterm><primary>tinyengine.cpp</primary><secondary>serial_input_queue</secondary></indexterm>
<para><computeroutput>std::vector&lt;uint8_t&gt;* serial_input_queue</computeroutput></para><para>
Definition at line <link linkend="_tinyengine_8cpp_source_1l00010">10</link> of file <link linkend="_tinyengine_8cpp_source">tinyengine.cpp</link>.</para>
</section>
</section>
</section>
