<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_app6_8c_source" xml:lang="en-US">
<title>app6.c</title>
<indexterm><primary>lib/pico-vfs-REGI-Local/vendor/ff15/documents/res/app6.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_app6_8c_source_1l00001"/>00001 <emphasis role="comment">/*---------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_app6_8c_source_1l00002"/>00002 <emphasis role="comment">/*&#32;Raw&#32;Read/Write&#32;Throughput&#32;Checker&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_app6_8c_source_1l00003"/>00003 <emphasis role="comment">/*---------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_app6_8c_source_1l00004"/>00004 
<anchor xml:id="_app6_8c_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_app6_8c_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;systimer.h&gt;</emphasis>
<anchor xml:id="_app6_8c_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_diskio_8h">diskio.h</link>&quot;</emphasis>
<anchor xml:id="_app6_8c_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ff_8h">ff.h</link>&quot;</emphasis>
<anchor xml:id="_app6_8c_source_1l00009"/>00009 
<anchor xml:id="_app6_8c_source_1l00010"/>00010 
<anchor xml:id="_app6_8c_source_1l00011"/><link linkend="_app6_8c_1aefaa12616ed0724e96f62e899fe19864">00011</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_app6_8c_1aefaa12616ed0724e96f62e899fe19864">test_raw_speed</link>&#32;(
<anchor xml:id="_app6_8c_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<link linkend="_ff_8h_1a4ae1dab0fb4b072a66584546209e7d58">BYTE</link>&#32;pdrv,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Physical&#32;drive&#32;number&#32;*/</emphasis>
<anchor xml:id="_app6_8c_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<link linkend="_ff_8h_1ad342ac907eb044443153a22f964bf0af">DWORD</link>&#32;lba,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Start&#32;LBA&#32;for&#32;read/write&#32;test&#32;*/</emphasis>
<anchor xml:id="_app6_8c_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<link linkend="_ff_8h_1ad342ac907eb044443153a22f964bf0af">DWORD</link>&#32;len,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Number&#32;of&#32;bytes&#32;to&#32;read/write&#32;(must&#32;be&#32;multiple&#32;of&#32;sz_buff)&#32;*/</emphasis>
<anchor xml:id="_app6_8c_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;buff,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Read/write&#32;buffer&#32;*/</emphasis>
<anchor xml:id="_app6_8c_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<link linkend="_ff_8h_1a36cb3b01d81ffd844bbbfb54003e06ec">UINT</link>&#32;sz_buff&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Size&#32;of&#32;read/write&#32;buffer&#32;(must&#32;be&#32;multiple&#32;of&#32;FF_MAX_SS)&#32;*/</emphasis>
<anchor xml:id="_app6_8c_source_1l00017"/>00017 )
<anchor xml:id="_app6_8c_source_1l00018"/>00018 {
<anchor xml:id="_app6_8c_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<link linkend="_ff_8h_1a197942eefa7db30960ae396d68339b97">WORD</link>&#32;ss;
<anchor xml:id="_app6_8c_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<link linkend="_ff_8h_1ad342ac907eb044443153a22f964bf0af">DWORD</link>&#32;ofs,&#32;tmr;
<anchor xml:id="_app6_8c_source_1l00021"/>00021 
<anchor xml:id="_app6_8c_source_1l00022"/>00022 
<anchor xml:id="_app6_8c_source_1l00023"/>00023 <emphasis role="preprocessor">#if&#32;FF_MIN_SS&#32;!=&#32;FF_MAX_SS</emphasis>
<anchor xml:id="_app6_8c_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fat_8c_1ab00fa450a811dbdabe3c655c1a36fab4">disk_ioctl</link>(pdrv,&#32;<link linkend="_diskio_8h_1ac73b5cf2135cbd459d109b96c9aa346a">GET_SECTOR_SIZE</link>,&#32;&amp;ss)&#32;!=&#32;<link linkend="_diskio_8h_1aacdfef1dad6565f65c26d12fe0ea4b2ba2ea4b6ef3fffc17dd1d38ab5c2837737">RES_OK</link>)&#32;{
<anchor xml:id="_app6_8c_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;\ndisk_ioctl()&#32;failed.\n&quot;</emphasis>);
<anchor xml:id="_app6_8c_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_app6_8c_source_1l00027"/>00027 &#32;&#32;&#32;&#32;}
<anchor xml:id="_app6_8c_source_1l00028"/>00028 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_app6_8c_source_1l00029"/>00029 &#32;&#32;&#32;&#32;ss&#32;=&#32;<link linkend="_ffconf_8h_1a104c36ee46f9d6e76dadf37f3d9696cc">FF_MAX_SS</link>;
<anchor xml:id="_app6_8c_source_1l00030"/>00030 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_app6_8c_source_1l00031"/>00031 
<anchor xml:id="_app6_8c_source_1l00032"/>00032 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Starting&#32;raw&#32;write&#32;test&#32;at&#32;sector&#32;%lu&#32;in&#32;%u&#32;bytes&#32;of&#32;data&#32;chunks...&quot;</emphasis>,&#32;lba,&#32;sz_buff);
<anchor xml:id="_app6_8c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;tmr&#32;=&#32;systimer();
<anchor xml:id="_app6_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(ofs&#32;=&#32;0;&#32;ofs&#32;&lt;&#32;len&#32;/&#32;ss;&#32;ofs&#32;+=&#32;sz_buff&#32;/&#32;ss)&#32;{
<anchor xml:id="_app6_8c_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fat_8c_1ac24448955ef914f54a499df1fb45689d">disk_write</link>(pdrv,&#32;buff,&#32;lba&#32;+&#32;ofs,&#32;sz_buff&#32;/&#32;ss)&#32;!=&#32;<link linkend="_diskio_8h_1aacdfef1dad6565f65c26d12fe0ea4b2ba2ea4b6ef3fffc17dd1d38ab5c2837737">RES_OK</link>)&#32;{
<anchor xml:id="_app6_8c_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;\ndisk_write()&#32;failed.\n&quot;</emphasis>);
<anchor xml:id="_app6_8c_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_app6_8c_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_app6_8c_source_1l00039"/>00039 &#32;&#32;&#32;&#32;}
<anchor xml:id="_app6_8c_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fat_8c_1ab00fa450a811dbdabe3c655c1a36fab4">disk_ioctl</link>(pdrv,&#32;<link linkend="_diskio_8h_1a1b3c492f9aec325f0655941b75256f3c">CTRL_SYNC</link>,&#32;0)&#32;!=&#32;<link linkend="_diskio_8h_1aacdfef1dad6565f65c26d12fe0ea4b2ba2ea4b6ef3fffc17dd1d38ab5c2837737">RES_OK</link>)&#32;{
<anchor xml:id="_app6_8c_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;\ndisk_ioctl()&#32;failed.\n&quot;</emphasis>);
<anchor xml:id="_app6_8c_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_app6_8c_source_1l00043"/>00043 &#32;&#32;&#32;&#32;}
<anchor xml:id="_app6_8c_source_1l00044"/>00044 &#32;&#32;&#32;&#32;tmr&#32;=&#32;systimer()&#32;-&#32;tmr;
<anchor xml:id="_app6_8c_source_1l00045"/>00045 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;\n%lu&#32;bytes&#32;written&#32;and&#32;it&#32;took&#32;%lu&#32;timer&#32;ticks.\n&quot;</emphasis>,&#32;len,&#32;tmr);
<anchor xml:id="_app6_8c_source_1l00046"/>00046 
<anchor xml:id="_app6_8c_source_1l00047"/>00047 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Starting&#32;raw&#32;read&#32;test&#32;at&#32;sector&#32;%lu&#32;in&#32;%u&#32;bytes&#32;of&#32;data&#32;chunks...&quot;</emphasis>,&#32;lba,&#32;sz_buff);
<anchor xml:id="_app6_8c_source_1l00048"/>00048 &#32;&#32;&#32;&#32;tmr&#32;=&#32;systimer();
<anchor xml:id="_app6_8c_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(ofs&#32;=&#32;0;&#32;ofs&#32;&lt;&#32;len&#32;/&#32;ss;&#32;ofs&#32;+=&#32;sz_buff&#32;/&#32;ss)&#32;{
<anchor xml:id="_app6_8c_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fat_8c_1a0711b1d03b833e9d73b3be1a6397f461">disk_read</link>(pdrv,&#32;buff,&#32;lba&#32;+&#32;ofs,&#32;sz_buff&#32;/&#32;ss)&#32;!=&#32;<link linkend="_diskio_8h_1aacdfef1dad6565f65c26d12fe0ea4b2ba2ea4b6ef3fffc17dd1d38ab5c2837737">RES_OK</link>)&#32;{
<anchor xml:id="_app6_8c_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;\ndisk_read()&#32;failed.\n&quot;</emphasis>);
<anchor xml:id="_app6_8c_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_app6_8c_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_app6_8c_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="_app6_8c_source_1l00055"/>00055 &#32;&#32;&#32;&#32;tmr&#32;=&#32;systimer()&#32;-&#32;tmr;
<anchor xml:id="_app6_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;\n%lu&#32;bytes&#32;read&#32;and&#32;it&#32;took&#32;%lu&#32;timer&#32;ticks.\n&quot;</emphasis>,&#32;len,&#32;tmr);
<anchor xml:id="_app6_8c_source_1l00057"/>00057 
<anchor xml:id="_app6_8c_source_1l00058"/>00058 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Test&#32;completed.\n&quot;</emphasis>);
<anchor xml:id="_app6_8c_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_app6_8c_source_1l00060"/>00060 }
<anchor xml:id="_app6_8c_source_1l00061"/>00061 
</programlisting></section>
