<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_tinyengine_8cpp_source" xml:lang="en-US">
<title>tinyengine.cpp</title>
<indexterm><primary>src/tinyengine.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_tinyengine_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_tinyengine_8h">tinyengine.h</link>&quot;</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;pico/stdlib.h&quot;</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;pico/time.h&gt;</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;hardware/gpio.h&quot;</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;hardware/exception.h&quot;</emphasis>&#32;
<anchor xml:id="_tinyengine_8cpp_source_1l00006"/>00006 
<anchor xml:id="_tinyengine_8cpp_source_1l00007"/><link linkend="_tinyengine_8cpp_1a1de69c73f829a03f46f5e7690da7e79a">00007</link> <emphasis role="preprocessor">#define&#32;UART_ID&#32;uart0</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00008"/>00008 
<anchor xml:id="_tinyengine_8cpp_source_1l00009"/>00009 <emphasis role="keyword">volatile</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;chars_rxed&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00010"/><link linkend="_tinyengine_8cpp_1a0d3ac15188af7c6cabbbe6e0e8fdf77e">00010</link> std::vector&lt;uint8_t&gt;*&#32;<link linkend="_tinyengine_8cpp_1a0d3ac15188af7c6cabbbe6e0e8fdf77e">serial_input_queue</link>;
<anchor xml:id="_tinyengine_8cpp_source_1l00011"/>00011 
<anchor xml:id="_tinyengine_8cpp_source_1l00012"/>00012 <emphasis role="comment">//&#32;//&#32;callback&#32;when&#32;data&#32;is&#32;received&#32;on&#32;a&#32;CDC&#32;interface</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00013"/>00013 <emphasis role="comment">//&#32;void&#32;tud_cdc_rx_cb(uint8_t&#32;itf)</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00014"/>00014 <emphasis role="comment">//&#32;{</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00015"/>00015 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;allocate&#32;buffer&#32;for&#32;the&#32;data&#32;in&#32;the&#32;stack</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00016"/>00016 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;uint8_t&#32;buf[CFG_TUD_CDC_RX_BUFSIZE];</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00017"/>00017 
<anchor xml:id="_tinyengine_8cpp_source_1l00018"/>00018 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;printf(&quot;RX&#32;CDC&#32;%d\n&quot;,&#32;itf);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00019"/>00019 
<anchor xml:id="_tinyengine_8cpp_source_1l00020"/>00020 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;read&#32;the&#32;available&#32;data</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00021"/>00021 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;|&#32;IMPORTANT:&#32;also&#32;do&#32;this&#32;for&#32;CDC0&#32;because&#32;otherwise</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00022"/>00022 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;|&#32;you&#32;won&apos;t&#32;be&#32;able&#32;to&#32;print&#32;anymore&#32;to&#32;CDC0</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00023"/>00023 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;|&#32;next&#32;time&#32;this&#32;function&#32;is&#32;called</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00024"/>00024 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;uint32_t&#32;count&#32;=&#32;tud_cdc_n_read(itf,&#32;buf,&#32;sizeof(buf));</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00025"/>00025 
<anchor xml:id="_tinyengine_8cpp_source_1l00026"/>00026 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;check&#32;if&#32;the&#32;data&#32;was&#32;received&#32;on&#32;the&#32;second&#32;cdc&#32;interface</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00027"/>00027 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;if&#32;(itf&#32;==&#32;1)&#32;{</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00028"/>00028 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;process&#32;the&#32;received&#32;data</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00029"/>00029 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(&quot;%c&quot;,&#32;buf[0]);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00030"/>00030 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serial_input_queue-&gt;emplace_back(buf[0]);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00031"/>00031 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chars_rxed++;</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00032"/>00032 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;buf[count]&#32;=&#32;0;&#32;//&#32;null-terminate&#32;the&#32;string</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00033"/>00033 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;now&#32;echo&#32;data&#32;back&#32;to&#32;the&#32;console&#32;on&#32;CDC&#32;0</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00034"/>00034 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;printf(&quot;Received&#32;on&#32;CDC&#32;1:&#32;%s\n&quot;,&#32;buf);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00035"/>00035 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00036"/>00036 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;//&#32;and&#32;echo&#32;back&#32;OK&#32;on&#32;CDC&#32;1</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00037"/>00037 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;tud_cdc_n_write(itf,&#32;(uint8_t&#32;const&#32;*)&#32;&quot;OK\r\n&quot;,&#32;4);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00038"/>00038 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;tud_cdc_n_write_flush(itf);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00039"/>00039 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00040"/>00040 <emphasis role="comment">//&#32;}</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00041"/>00041 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;hardfault()&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<link linkend="_tinyengine_8h_1abdeb08b95394f8152bb146fd9a9139c4">telog</link>(<emphasis role="stringliteral">&quot;HARD&#32;FAULT!!&quot;</emphasis>);
<anchor xml:id="_tinyengine_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;gpio_init(0);
<anchor xml:id="_tinyengine_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;gpio_set_dir(0,&#32;GPIO_OUT);
<anchor xml:id="_tinyengine_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;gpio_init(1);
<anchor xml:id="_tinyengine_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;gpio_set_dir(1,&#32;GPIO_OUT);
<anchor xml:id="_tinyengine_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;gpio_init(6);
<anchor xml:id="_tinyengine_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;gpio_set_dir(6,&#32;GPIO_OUT);
<anchor xml:id="_tinyengine_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;gpio_init(7);
<anchor xml:id="_tinyengine_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;gpio_set_dir(7,&#32;GPIO_OUT);
<anchor xml:id="_tinyengine_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;gpio_init(9);
<anchor xml:id="_tinyengine_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;gpio_set_dir(9,&#32;GPIO_OUT);
<anchor xml:id="_tinyengine_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;gpio_init(45);
<anchor xml:id="_tinyengine_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;gpio_set_dir(45,&#32;GPIO_OUT);
<anchor xml:id="_tinyengine_8cpp_source_1l00055"/>00055 
<anchor xml:id="_tinyengine_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(1)&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(0,&#32;1);
<anchor xml:id="_tinyengine_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00059"/>00059 
<anchor xml:id="_tinyengine_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(1,&#32;1);
<anchor xml:id="_tinyengine_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00062"/>00062 
<anchor xml:id="_tinyengine_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(6,&#32;1);
<anchor xml:id="_tinyengine_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00065"/>00065 
<anchor xml:id="_tinyengine_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(7,&#32;1);
<anchor xml:id="_tinyengine_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00068"/>00068 
<anchor xml:id="_tinyengine_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(9,&#32;1);
<anchor xml:id="_tinyengine_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00071"/>00071 
<anchor xml:id="_tinyengine_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(45,&#32;1);
<anchor xml:id="_tinyengine_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00074"/>00074 
<anchor xml:id="_tinyengine_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(0,&#32;0);
<anchor xml:id="_tinyengine_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00077"/>00077 
<anchor xml:id="_tinyengine_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(1,&#32;0);
<anchor xml:id="_tinyengine_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00080"/>00080 
<anchor xml:id="_tinyengine_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(6,&#32;0);
<anchor xml:id="_tinyengine_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00083"/>00083 
<anchor xml:id="_tinyengine_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(7,&#32;0);
<anchor xml:id="_tinyengine_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00086"/>00086 
<anchor xml:id="_tinyengine_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(9,&#32;0);
<anchor xml:id="_tinyengine_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00089"/>00089 
<anchor xml:id="_tinyengine_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gpio_put(45,&#32;0);
<anchor xml:id="_tinyengine_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sleep_ms(100);
<anchor xml:id="_tinyengine_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00093"/>00093 
<anchor xml:id="_tinyengine_8cpp_source_1l00094"/>00094 }
<anchor xml:id="_tinyengine_8cpp_source_1l00095"/>00095 
<anchor xml:id="_tinyengine_8cpp_source_1l00096"/>00096 
<anchor xml:id="_tinyengine_8cpp_source_1l00097"/><link linkend="_tinyengine_8h_1a141e0e4cfccde883fde46e6908a6cf9e">00097</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tinyengine_8cpp_1a141e0e4cfccde883fde46e6908a6cf9e">set_frequency</link>()&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;vreg_set_voltage(VREG_VOLTAGE_1_30);
<anchor xml:id="_tinyengine_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;set_sys_clock_khz(315000,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_tinyengine_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;clock_configure(
<anchor xml:id="_tinyengine_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;clk_peri,
<anchor xml:id="_tinyengine_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;glitchless&#32;mux</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CLOCKS_CLK_PERI_CTRL_AUXSRC_VALUE_CLKSRC_PLL_SYS,&#32;<emphasis role="comment">//&#32;System&#32;PLL&#32;on&#32;AUX&#32;mux</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;315000&#32;*&#32;1000,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Input&#32;frequency</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;315000&#32;*&#32;1000&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Output&#32;(must&#32;be&#32;same&#32;as&#32;no&#32;divider)</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;);
<anchor xml:id="_tinyengine_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;clock_configure(
<anchor xml:id="_tinyengine_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;clk_hstx,
<anchor xml:id="_tinyengine_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;glitchless&#32;mux</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CLOCKS_CLK_PERI_CTRL_AUXSRC_VALUE_CLKSRC_PLL_SYS,&#32;<emphasis role="comment">//&#32;System&#32;PLL&#32;on&#32;AUX&#32;mux</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;315000&#32;*&#32;1000,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Input&#32;frequency</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;315000&#32;/&#32;2&#32;*&#32;1000&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Output&#32;(must&#32;be&#32;same&#32;as&#32;no&#32;divider)</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;);
<anchor xml:id="_tinyengine_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;exception_set_exclusive_handler(HARDFAULT_EXCEPTION,&#32;hardfault);
<anchor xml:id="_tinyengine_8cpp_source_1l00115"/>00115 }
<anchor xml:id="_tinyengine_8cpp_source_1l00116"/>00116 
<anchor xml:id="_tinyengine_8cpp_source_1l00117"/>00117 <emphasis role="comment">//&#32;RX&#32;interrupt&#32;handler</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00118"/><link linkend="_tinyengine_8cpp_1ad7fec5b2b07b712822dc8182d1796c22">00118</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tinyengine_8cpp_1ad7fec5b2b07b712822dc8182d1796c22">on_uart_rx</link>()
<anchor xml:id="_tinyengine_8cpp_source_1l00119"/>00119 {
<anchor xml:id="_tinyengine_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(uart_is_readable(<link linkend="_tinyengine_8cpp_1a1de69c73f829a03f46f5e7690da7e79a">UART_ID</link>))
<anchor xml:id="_tinyengine_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;ch&#32;=&#32;uart_getc(<link linkend="_tinyengine_8cpp_1a1de69c73f829a03f46f5e7690da7e79a">UART_ID</link>);
<anchor xml:id="_tinyengine_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tinyengine_8cpp_1a0d3ac15188af7c6cabbbe6e0e8fdf77e">serial_input_queue</link>-&gt;emplace_back(ch);
<anchor xml:id="_tinyengine_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chars_rxed++;
<anchor xml:id="_tinyengine_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00126"/>00126 }
<anchor xml:id="_tinyengine_8cpp_source_1l00127"/>00127 
<anchor xml:id="_tinyengine_8cpp_source_1l00128"/><link linkend="_tinyengine_8cpp_1a28efb0fa699c7320eb9bd7d21efb205b">00128</link> std::vector&lt;uint8_t&gt;*&#32;<link linkend="_tinyengine_8cpp_1a28efb0fa699c7320eb9bd7d21efb205b">gpio_input_queue</link>;
<anchor xml:id="_tinyengine_8cpp_source_1l00129"/><link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">00129</link> std::unordered_map&lt;uint8_t,&#32;uint32_t&gt;&#32;<link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">gpio_debouce_map</link>;
<anchor xml:id="_tinyengine_8cpp_source_1l00130"/>00130 <emphasis role="keyword">static</emphasis>&#32;uint32_t&#32;gpio_debounce&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00131"/>00131 
<anchor xml:id="_tinyengine_8cpp_source_1l00132"/><link linkend="_tinyengine_8cpp_1a7f6538b252b233c2a00eeabf455b6ac8">00132</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_tinyengine_8cpp_1a7f6538b252b233c2a00eeabf455b6ac8">gpio_callback</link>(uint&#32;gpio,&#32;uint32_t&#32;events)&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00133"/>00133 
<anchor xml:id="_tinyengine_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;(!gpio_debounce)&#32;{</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;gpio_debounce&#32;=&#32;time_us_32();</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;return;</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;((uint32_t)250000&#32;&lt;=&#32;(time_us_32()&#32;-&#32;gpio_debounce))&#32;{</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;gpio_input_queue-&gt;emplace_back(gpio);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;gpio_debounce&#32;=&#32;0;</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;}</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00142"/>00142 
<anchor xml:id="_tinyengine_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">gpio_debouce_map</link>[gpio])&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">gpio_debouce_map</link>[gpio]&#32;=&#32;time_us_32();
<anchor xml:id="_tinyengine_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_tinyengine_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((uint32_t)250000&#32;&lt;=&#32;(time_us_32()&#32;-&#32;<link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">gpio_debouce_map</link>[gpio]))&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tinyengine_8cpp_1a28efb0fa699c7320eb9bd7d21efb205b">gpio_input_queue</link>-&gt;emplace_back(gpio);
<anchor xml:id="_tinyengine_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">gpio_debouce_map</link>[gpio]&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00151"/>00151 
<anchor xml:id="_tinyengine_8cpp_source_1l00152"/>00152 }
<anchor xml:id="_tinyengine_8cpp_source_1l00153"/>00153 
<anchor xml:id="_tinyengine_8cpp_source_1l00154"/><link linkend="_class_tiny_engine_1a088cee984149455d5ae7aa308b23e506">00154</link> <link linkend="_tinyengine_8h_1a99e26dc5d9e1752ba606841d6b5c3d40">tinyengine_status_t</link>&#32;<link linkend="_class_tiny_engine_1a088cee984149455d5ae7aa308b23e506">TinyEngine::init</link>()
<anchor xml:id="_tinyengine_8cpp_source_1l00155"/>00155 {
<anchor xml:id="_tinyengine_8cpp_source_1l00156"/>00156 
<anchor xml:id="_tinyengine_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<link linkend="_tinyengine_8cpp_1a0d3ac15188af7c6cabbbe6e0e8fdf77e">serial_input_queue</link>&#32;=&#32;&amp;m_serial_input_buffer;
<anchor xml:id="_tinyengine_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;up&#32;a&#32;RX&#32;interrupt</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;need&#32;to&#32;set&#32;up&#32;the&#32;handler&#32;first</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Select&#32;correct&#32;interrupt&#32;for&#32;the&#32;UART&#32;we&#32;are&#32;using</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;UART_IRQ&#32;=&#32;<link linkend="_tinyengine_8cpp_1a1de69c73f829a03f46f5e7690da7e79a">UART_ID</link>&#32;==&#32;uart0&#32;?&#32;<link linkend="_lib_2pico-distance-sensor-main_2pico-distance-sensor-main_2pico-sdk_2src_2extra__doxygen_2intctrl_8h_1a876b9495995a81dff786f07a1975c3b8a504e54f28a2e2928bd6a1604ee0a24fb">UART0_IRQ</link>&#32;:&#32;<link linkend="_lib_2pico-distance-sensor-main_2pico-distance-sensor-main_2pico-sdk_2src_2extra__doxygen_2intctrl_8h_1a876b9495995a81dff786f07a1975c3b8a1062848ec5bc51fcdd58a95d40fc266b">UART1_IRQ</link>;
<anchor xml:id="_tinyengine_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;And&#32;set&#32;up&#32;and&#32;enable&#32;the&#32;interrupt&#32;handlers</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;irq_set_exclusive_handler(UART_IRQ,&#32;<link linkend="_tinyengine_8cpp_1ad7fec5b2b07b712822dc8182d1796c22">on_uart_rx</link>);
<anchor xml:id="_tinyengine_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;irq_set_enabled(UART_IRQ,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_tinyengine_8cpp_source_1l00165"/>00165 
<anchor xml:id="_tinyengine_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;enable&#32;the&#32;UART&#32;to&#32;send&#32;interrupts&#32;-&#32;RX&#32;only</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;uart_set_irq_enables(<link linkend="_tinyengine_8cpp_1a1de69c73f829a03f46f5e7690da7e79a">UART_ID</link>,&#32;<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="_tinyengine_8cpp_source_1l00168"/>00168 
<anchor xml:id="_tinyengine_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;<link linkend="_tinyengine_8cpp_1a28efb0fa699c7320eb9bd7d21efb205b">gpio_input_queue</link>&#32;=&#32;&amp;m_gpio_input_buffer;
<anchor xml:id="_tinyengine_8cpp_source_1l00170"/>00170 
<anchor xml:id="_tinyengine_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;pre_init_clbk();
<anchor xml:id="_tinyengine_8cpp_source_1l00172"/>00172 
<anchor xml:id="_tinyengine_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_tinyengine_8h_1a99e26dc5d9e1752ba606841d6b5c3d40a4682d953acc9bbccd62074cdb89235b7">TINYENGINE_OK</link>;
<anchor xml:id="_tinyengine_8cpp_source_1l00174"/>00174 }
<anchor xml:id="_tinyengine_8cpp_source_1l00175"/>00175 
<anchor xml:id="_tinyengine_8cpp_source_1l00176"/><link linkend="_class_tiny_engine_1a46a3a85a38bad4a41aaebb97f39b1456">00176</link> <link linkend="_tinyengine_8h_1a99e26dc5d9e1752ba606841d6b5c3d40">tinyengine_status_t</link>&#32;<link linkend="_class_tiny_engine_1a46a3a85a38bad4a41aaebb97f39b1456">TinyEngine::start</link>()
<anchor xml:id="_tinyengine_8cpp_source_1l00177"/>00177 {
<anchor xml:id="_tinyengine_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_tinyengine_8h_1a99e26dc5d9e1752ba606841d6b5c3d40a4682d953acc9bbccd62074cdb89235b7">TINYENGINE_OK</link>;
<anchor xml:id="_tinyengine_8cpp_source_1l00179"/>00179 }
<anchor xml:id="_tinyengine_8cpp_source_1l00180"/>00180 
<anchor xml:id="_tinyengine_8cpp_source_1l00181"/><link linkend="_class_tiny_engine_1ad0fe7160d3a7c651c86ed06dae869de1">00181</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tiny_engine_1ad0fe7160d3a7c651c86ed06dae869de1">TinyEngine::render</link>(<emphasis role="keywordtype">double</emphasis>&#32;frametime)
<anchor xml:id="_tinyengine_8cpp_source_1l00182"/>00182 {
<anchor xml:id="_tinyengine_8cpp_source_1l00183"/>00183 }
<anchor xml:id="_tinyengine_8cpp_source_1l00184"/>00184 
<anchor xml:id="_tinyengine_8cpp_source_1l00185"/><link linkend="_class_tiny_engine_1a11efed818cc74d5a830351df55744c9d">00185</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tiny_engine_1a11efed818cc74d5a830351df55744c9d">TinyEngine::update</link>(<emphasis role="keywordtype">double</emphasis>&#32;frametime)
<anchor xml:id="_tinyengine_8cpp_source_1l00186"/>00186 {
<anchor xml:id="_tinyengine_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;engine_handle-&gt;update_clbk(frametime);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00188"/>00188 }
<anchor xml:id="_tinyengine_8cpp_source_1l00189"/>00189 
<anchor xml:id="_tinyengine_8cpp_source_1l00190"/>00190 <emphasis role="keywordtype">void</emphasis>&#32;TinyEngine::update_inputs()
<anchor xml:id="_tinyengine_8cpp_source_1l00191"/>00191 {
<anchor xml:id="_tinyengine_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_gpio_input_buffer.empty())
<anchor xml:id="_tinyengine_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint8_t&#32;gpio&#32;:&#32;m_gpio_input_buffer)
<anchor xml:id="_tinyengine_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_gpio_input_events.contains(gpio))
<anchor xml:id="_tinyengine_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_gpio_input_events[gpio]();
<anchor xml:id="_tinyengine_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_gpio_input_buffer.clear();
<anchor xml:id="_tinyengine_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00203"/>00203 
<anchor xml:id="_tinyengine_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!m_serial_input_buffer.empty())
<anchor xml:id="_tinyengine_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint8_t&#32;chr&#32;:&#32;m_serial_input_buffer)
<anchor xml:id="_tinyengine_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_serial_input_events.contains(chr))
<anchor xml:id="_tinyengine_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_serial_input_events[chr]();
<anchor xml:id="_tinyengine_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_serial_input_buffer.clear();
<anchor xml:id="_tinyengine_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00215"/>00215 }
<anchor xml:id="_tinyengine_8cpp_source_1l00216"/>00216 
<anchor xml:id="_tinyengine_8cpp_source_1l00217"/><link linkend="_class_tiny_engine_1a3a7db87bb4dbdc93b7bd831080207724">00217</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tiny_engine_1a3a7db87bb4dbdc93b7bd831080207724">TinyEngine::bind_gpio_input_event</link>(uint8_t&#32;_gpio,&#32;std::function&lt;<emphasis role="keywordtype">void</emphasis>()&gt;&#32;_event_callback)
<anchor xml:id="_tinyengine_8cpp_source_1l00218"/>00218 {
<anchor xml:id="_tinyengine_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;gpio_init(_gpio);
<anchor xml:id="_tinyengine_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;gpio_set_dir(_gpio,&#32;GPIO_IN);
<anchor xml:id="_tinyengine_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;gpio_pull_up(_gpio);
<anchor xml:id="_tinyengine_8cpp_source_1l00222"/>00222 
<anchor xml:id="_tinyengine_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;gpio_set_irq_enabled_with_callback(_gpio,
<anchor xml:id="_tinyengine_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//GPIO_IRQ_EDGE_RISE&#32;|</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_IRQ_EDGE_FALL,
<anchor xml:id="_tinyengine_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>,&#32;&amp;<link linkend="_tinyengine_8cpp_1a7f6538b252b233c2a00eeabf455b6ac8">gpio_callback</link>);
<anchor xml:id="_tinyengine_8cpp_source_1l00227"/>00227 
<anchor xml:id="_tinyengine_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;m_gpio_input_events.emplace(_gpio,&#32;_event_callback);
<anchor xml:id="_tinyengine_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;<link linkend="_tinyengine_8cpp_1a72b938b7baf318c2932ae38612667ed8">gpio_debouce_map</link>.emplace(_gpio,&#32;0);
<anchor xml:id="_tinyengine_8cpp_source_1l00230"/>00230 }
<anchor xml:id="_tinyengine_8cpp_source_1l00231"/>00231 
<anchor xml:id="_tinyengine_8cpp_source_1l00232"/><link linkend="_class_tiny_engine_1a2094c36e13792cfde7dc90dc4637a2e7">00232</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tiny_engine_1a2094c36e13792cfde7dc90dc4637a2e7">TinyEngine::bind_serial_input_event</link>(uint8_t&#32;_char,&#32;std::function&lt;<emphasis role="keywordtype">void</emphasis>()&gt;&#32;_event_callback)
<anchor xml:id="_tinyengine_8cpp_source_1l00233"/>00233 {
<anchor xml:id="_tinyengine_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;m_serial_input_events.emplace(_char,&#32;_event_callback);
<anchor xml:id="_tinyengine_8cpp_source_1l00235"/>00235 }
<anchor xml:id="_tinyengine_8cpp_source_1l00236"/>00236 
<anchor xml:id="_tinyengine_8cpp_source_1l00237"/><link linkend="_class_tiny_engine_1a30d77a4f317c491bd8ebcf8d5e3852a3">00237</link> <link linkend="_tinyengine_8h_1a99e26dc5d9e1752ba606841d6b5c3d40">tinyengine_status_t</link>&#32;<link linkend="_class_tiny_engine_1a30d77a4f317c491bd8ebcf8d5e3852a3">TinyEngine::start_loop</link>()
<anchor xml:id="_tinyengine_8cpp_source_1l00238"/>00238 {
<anchor xml:id="_tinyengine_8cpp_source_1l00239"/>00239 
<anchor xml:id="_tinyengine_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;lastTime&#32;=&#32;((double)to_ms_since_boot(get_absolute_time()))&#32;/&#32;((<emphasis role="keywordtype">double</emphasis>)1000);
<anchor xml:id="_tinyengine_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;unproccessedTime&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;passedTime&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;startTime&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_tiny_engine_1ad0fe7160d3a7c651c86ed06dae869de1">render</link>&#32;=&#32;1;
<anchor xml:id="_tinyengine_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;frames&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;framerate&#32;=&#32;60;
<anchor xml:id="_tinyengine_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;frametime&#32;=&#32;(double)1&#32;/&#32;(<emphasis role="keywordtype">double</emphasis>)framerate;
<anchor xml:id="_tinyengine_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;uint32_t&#32;startus&#32;=&#32;to_us_since_boot(get_absolute_time());
<anchor xml:id="_tinyengine_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;frameCounter&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00250"/>00250 
<anchor xml:id="_tinyengine_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;uint32_t&#32;profile_main_loop_start&#32;=&#32;0,&#32;profile_main_loop_end&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00252"/>00252 
<anchor xml:id="_tinyengine_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;uint32_t&#32;profile_render_loop_start&#32;=&#32;0,&#32;profile_render_loop_end&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00254"/>00254 
<anchor xml:id="_tinyengine_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;uint32_t&#32;profile_update_loop_start&#32;=&#32;0,&#32;profile_update_loop_end&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00256"/>00256 
<anchor xml:id="_tinyengine_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(1)
<anchor xml:id="_tinyengine_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00259"/>00259 
<anchor xml:id="_tinyengine_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;profile_main_loop_time&#32;=&#32;profile_main_loop_end&#32;-&#32;profile_main_loop_start;
<anchor xml:id="_tinyengine_8cpp_source_1l00261"/>00261 
<anchor xml:id="_tinyengine_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;profile_main_loop_start&#32;=&#32;to_us_since_boot(get_absolute_time())&#32;/&#32;1000;
<anchor xml:id="_tinyengine_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//isRunning</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;startTime&#32;=&#32;((double)to_ms_since_boot(get_absolute_time()))&#32;/&#32;((<emphasis role="keywordtype">double</emphasis>)1000);
<anchor xml:id="_tinyengine_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;passedTime&#32;=&#32;startTime&#32;-&#32;lastTime;
<anchor xml:id="_tinyengine_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastTime&#32;=&#32;startTime;
<anchor xml:id="_tinyengine_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unproccessedTime&#32;+=&#32;passedTime;
<anchor xml:id="_tinyengine_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameCounter&#32;+=&#32;passedTime;
<anchor xml:id="_tinyengine_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tiny_engine_1ad0fe7160d3a7c651c86ed06dae869de1">render</link>&#32;=&#32;1;&#32;<emphasis role="comment">//&#32;run&#32;uncapped</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((unproccessedTime&#32;&gt;&#32;frametime))
<anchor xml:id="_tinyengine_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_tiny_engine_1ad0fe7160d3a7c651c86ed06dae869de1">render</link>&#32;=&#32;1;
<anchor xml:id="_tinyengine_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;telog(&quot;Running&quot;);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unproccessedTime&#32;-=&#32;frametime;
<anchor xml:id="_tinyengine_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;engine_handle-&gt;update_clbk(frametime);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tinyengine_update(engine_handle,&#32;frametime);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;profile_update_loop_time&#32;=&#32;profile_update_loop_end&#32;-&#32;profile_update_loop_start;
<anchor xml:id="_tinyengine_8cpp_source_1l00278"/>00278 
<anchor xml:id="_tinyengine_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;profile_update_loop_start&#32;=&#32;to_us_since_boot(get_absolute_time())&#32;/&#32;1000;
<anchor xml:id="_tinyengine_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_clbk(frametime);
<anchor xml:id="_tinyengine_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;update_inputs();
<anchor xml:id="_tinyengine_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;profile_update_loop_end&#32;=&#32;to_us_since_boot(get_absolute_time())&#32;/&#32;1000;
<anchor xml:id="_tinyengine_8cpp_source_1l00283"/>00283 
<anchor xml:id="_tinyengine_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(frameCounter&#32;&gt;=&#32;1)
<anchor xml:id="_tinyengine_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fps&#32;=&#32;frames;
<anchor xml:id="_tinyengine_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_tinyengine_8h_1abdeb08b95394f8152bb146fd9a9139c4">telog</link>(<emphasis role="stringliteral">&quot;FPS:&#32;%d&quot;</emphasis>,&#32;frames);
<anchor xml:id="_tinyengine_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Test\r\n&quot;</emphasis>);
<anchor xml:id="_tinyengine_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameCounter&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frames&#32;=&#32;0;
<anchor xml:id="_tinyengine_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_tiny_engine_1ad0fe7160d3a7c651c86ed06dae869de1">render</link>)
<anchor xml:id="_tinyengine_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;profile_render_loop_time&#32;=&#32;profile_render_loop_end&#32;-&#32;profile_render_loop_start;
<anchor xml:id="_tinyengine_8cpp_source_1l00296"/>00296 
<anchor xml:id="_tinyengine_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;profile_render_loop_start&#32;=&#32;to_us_since_boot(get_absolute_time())&#32;/&#32;1000;
<anchor xml:id="_tinyengine_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;engine_handle-&gt;render_clbk(frametime);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tinyengine_render(engine_handle,&#32;frametime);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;render_clbk();
<anchor xml:id="_tinyengine_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frames&#32;+=&#32;1;
<anchor xml:id="_tinyengine_8cpp_source_1l00302"/>00302 
<anchor xml:id="_tinyengine_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;profile_render_loop_end&#32;=&#32;to_us_since_boot(get_absolute_time())&#32;/&#32;1000;
<anchor xml:id="_tinyengine_8cpp_source_1l00304"/>00304 
<anchor xml:id="_tinyengine_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_tinyengine_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sleep&#32;here&#32;for&#32;rtos;</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;sleep_ms(1);</emphasis>
<anchor xml:id="_tinyengine_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00311"/>00311 
<anchor xml:id="_tinyengine_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;profile_main_loop_end&#32;=&#32;to_us_since_boot(get_absolute_time())&#32;/&#32;1000;
<anchor xml:id="_tinyengine_8cpp_source_1l00313"/>00313 
<anchor xml:id="_tinyengine_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;}
<anchor xml:id="_tinyengine_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_tinyengine_8h_1a99e26dc5d9e1752ba606841d6b5c3d40a4682d953acc9bbccd62074cdb89235b7">TINYENGINE_OK</link>;
<anchor xml:id="_tinyengine_8cpp_source_1l00316"/>00316 }
</programlisting></section>
